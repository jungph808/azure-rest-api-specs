// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace SecurityInsights
{
    /// <summary> The ThreatIntelligenceIndicator service client. </summary>
    public partial class ThreatIntelligenceIndicatorClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential;
        private static readonly string[] AuthorizationScopes0 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential0;
        private static readonly string[] AuthorizationScopes1 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential1;
        private static readonly string[] AuthorizationScopes2 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential2;
        private static readonly string[] AuthorizationScopes3 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential3;
        private static readonly string[] AuthorizationScopes4 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential4;
        private static readonly string[] AuthorizationScopes5 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential5;
        private static readonly string[] AuthorizationScopes6 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential6;
        private static readonly string[] AuthorizationScopes7 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential7;
        private static readonly string[] AuthorizationScopes8 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential8;
        private static readonly string[] AuthorizationScopes9 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential9;
        private static readonly string[] AuthorizationScopes10 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential10;
        private static readonly string[] AuthorizationScopes11 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential11;
        private static readonly string[] AuthorizationScopes12 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential12;
        private static readonly string[] AuthorizationScopes13 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential13;
        private static readonly string[] AuthorizationScopes14 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential14;
        private static readonly string[] AuthorizationScopes15 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential15;
        private static readonly string[] AuthorizationScopes16 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential16;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;
        private readonly string _apiVersion;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient for mocking. </summary>
        protected ThreatIntelligenceIndicatorClient()
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of ThreatIntelligenceIndicatorClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public ThreatIntelligenceIndicatorClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Create a new threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateIndicatorAsync(string resourceGroupName, string workspaceName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.CreateIndicator");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateIndicatorRequest(resourceGroupName, workspaceName, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Create a new threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response CreateIndicator(string resourceGroupName, string workspaceName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.CreateIndicator");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateIndicatorRequest(resourceGroupName, workspaceName, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> View a threat intelligence indicator by name. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetThreatIntelligenceIndicatorAsync(string resourceGroupName, string workspaceName, string name, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.GetThreatIntelligenceIndicator");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetThreatIntelligenceIndicatorRequest(resourceGroupName, workspaceName, name, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> View a threat intelligence indicator by name. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response GetThreatIntelligenceIndicator(string resourceGroupName, string workspaceName, string name, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.GetThreatIntelligenceIndicator");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetThreatIntelligenceIndicatorRequest(resourceGroupName, workspaceName, name, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Update a threat Intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="name"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateAsync(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.Create");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateRequest(resourceGroupName, workspaceName, name, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Update a threat Intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="name"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response Create(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.Create");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateRequest(resourceGroupName, workspaceName, name, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Delete a threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        public virtual async Task<Response> DeleteAsync(string resourceGroupName, string workspaceName, string name, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(resourceGroupName, workspaceName, name, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Delete a threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        public virtual Response Delete(string resourceGroupName, string workspaceName, string name, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(resourceGroupName, workspaceName, name, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Append tags to a threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="name"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request payload.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceAppendTags</c>:
        /// <code>{
        ///   threatIntelligenceTags: [string], # Optional. List of tags to be appended.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> AppendTagsAsync(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.AppendTags");
            scope.Start();
            try
            {
                using HttpMessage message = CreateAppendTagsRequest(resourceGroupName, workspaceName, name, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Append tags to a threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="name"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request payload.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceAppendTags</c>:
        /// <code>{
        ///   threatIntelligenceTags: [string], # Optional. List of tags to be appended.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response AppendTags(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.AppendTags");
            scope.Start();
            try
            {
                using HttpMessage message = CreateAppendTagsRequest(resourceGroupName, workspaceName, name, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Replace tags added to a threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="name"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> ReplaceTagsAsync(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.ReplaceTags");
            scope.Start();
            try
            {
                using HttpMessage message = CreateReplaceTagsRequest(resourceGroupName, workspaceName, name, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Replace tags added to a threat intelligence indicator. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="name"> Threat intelligence indicator name field. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="name"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="name"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>ThreatIntelligenceIndicatorModel</summary>Schema for <c>ThreatIntelligenceIndicatorModel</c>:
        /// <code>{
        ///   kind: indicator, # Required. The kind of the entity.
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     threatIntelligenceTags: [string], # Optional. List of tags
        ///     lastUpdatedTimeUtc: string, # Optional. Last updated time in UTC
        ///     source: string, # Optional. Source of a threat intelligence entity
        ///     displayName: string, # Optional. Display name of a threat intelligence entity
        ///     description: string, # Optional. Description of a threat intelligence entity
        ///     indicatorTypes: [string], # Optional. Indicator types of threat intelligence entities
        ///     pattern: string, # Optional. Pattern of a threat intelligence entity
        ///     patternType: string, # Optional. Pattern type of a threat intelligence entity
        ///     patternVersion: string, # Optional. Pattern version of a threat intelligence entity
        ///     killChainPhases: [
        ///       {
        ///         killChainName: string, # Optional. Kill chainName name
        ///         phaseName: string, # Optional. Phase name
        ///       }
        ///     ], # Optional. Kill chain phases
        ///     parsedPattern: [
        ///       {
        ///         patternTypeKey: string, # Optional. Pattern type key
        ///         patternTypeValues: [
        ///           {
        ///             valueType: string, # Optional. Type of the value
        ///             value: string, # Optional. Value of parsed pattern
        ///           }
        ///         ], # Optional. Pattern type keys
        ///       }
        ///     ], # Optional. Parsed patterns
        ///     externalId: string, # Optional. External ID of threat intelligence entity
        ///     createdByRef: string, # Optional. Created by reference of threat intelligence entity
        ///     defanged: boolean, # Optional. Is threat intelligence entity defanged
        ///     externalLastUpdatedTimeUtc: string, # Optional. External last updated time in UTC
        ///     externalReferences: [
        ///       {
        ///         description: string, # Optional. External reference description
        ///         externalId: string, # Optional. External reference ID
        ///         sourceName: string, # Optional. External reference source name
        ///         url: string, # Optional. External reference URL
        ///         hashes: Dictionary&lt;string, string&gt;, # Optional. External reference hashes
        ///       }
        ///     ], # Optional. External References
        ///     granularMarkings: [
        ///       {
        ///         language: string, # Optional. Language granular marking model
        ///         markingRef: number, # Optional. marking reference granular marking model
        ///         selectors: [string], # Optional. granular marking model selectors
        ///       }
        ///     ], # Optional. Granular Markings
        ///     labels: [string], # Optional. Labels  of threat intelligence entity
        ///     revoked: boolean, # Optional. Is threat intelligence entity revoked
        ///     confidence: number, # Optional. Confidence of threat intelligence entity
        ///     objectMarkingRefs: [string], # Optional. Threat intelligence entity object marking references
        ///     language: string, # Optional. Language of threat intelligence entity
        ///     threatTypes: [string], # Optional. Threat types
        ///     validFrom: string, # Optional. Valid from
        ///     validUntil: string, # Optional. Valid until
        ///     created: string, # Optional. Created by
        ///     modified: string, # Optional. Modified by
        ///     extensions: Dictionary&lt;string, object&gt;, # Optional. Extensions map
        ///   }, # Optional. Threat Intelligence Entity properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response ReplaceTags(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(name, nameof(name));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("ThreatIntelligenceIndicatorClient.ReplaceTags");
            scope.Start();
            try
            {
                using HttpMessage message = CreateReplaceTagsRequest(resourceGroupName, workspaceName, name, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Query threat intelligence indicators as per filtering criteria. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="AsyncPageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request payload and one item in the pageable response.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceFilteringCriteria</c>:
        /// <code>{
        ///   pageSize: number, # Optional. Page size
        ///   minConfidence: number, # Optional. Minimum confidence.
        ///   maxConfidence: number, # Optional. Maximum confidence.
        ///   minValidUntil: string, # Optional. Start time for ValidUntil filter.
        ///   maxValidUntil: string, # Optional. End time for ValidUntil filter.
        ///   includeDisabled: boolean, # Optional. Parameter to include/exclude disabled indicators.
        ///   sortBy: [
        ///     {
        ///       itemKey: string, # Optional. Column name
        ///       sortOrder: &quot;unsorted&quot; | &quot;ascending&quot; | &quot;descending&quot;, # Optional. Sorting order (ascending/descending/unsorted).
        ///     }
        ///   ], # Optional. Columns to sort by and sorting order
        ///   sources: [string], # Optional. Sources of threat intelligence indicators
        ///   patternTypes: [string], # Optional. Pattern types
        ///   threatTypes: [string], # Optional. Threat types of threat intelligence indicators
        ///   ids: [string], # Optional. Ids of threat intelligence indicators
        ///   keywords: [string], # Optional. Keywords for searching threat intelligence indicators
        ///   skipToken: string, # Optional. Skip token.
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>ThreatIntelligenceInformationListValue</c>:
        /// <code>{
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;indicator&quot;, # Required. The kind of the entity.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> QueryIndicatorsAsync(string resourceGroupName, string workspaceName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNull(content, nameof(content));

            return QueryIndicatorsImplementationAsync("ThreatIntelligenceIndicatorClient.QueryIndicators", resourceGroupName, workspaceName, content, context);
        }

        private AsyncPageable<BinaryData> QueryIndicatorsImplementationAsync(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContent content, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateQueryIndicatorsRequest(resourceGroupName, workspaceName, content, context)
                        : CreateQueryIndicatorsNextPageRequest(nextLink, resourceGroupName, workspaceName, content, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> Query threat intelligence indicators as per filtering criteria. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="Pageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request payload and one item in the pageable response.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>ThreatIntelligenceFilteringCriteria</c>:
        /// <code>{
        ///   pageSize: number, # Optional. Page size
        ///   minConfidence: number, # Optional. Minimum confidence.
        ///   maxConfidence: number, # Optional. Maximum confidence.
        ///   minValidUntil: string, # Optional. Start time for ValidUntil filter.
        ///   maxValidUntil: string, # Optional. End time for ValidUntil filter.
        ///   includeDisabled: boolean, # Optional. Parameter to include/exclude disabled indicators.
        ///   sortBy: [
        ///     {
        ///       itemKey: string, # Optional. Column name
        ///       sortOrder: &quot;unsorted&quot; | &quot;ascending&quot; | &quot;descending&quot;, # Optional. Sorting order (ascending/descending/unsorted).
        ///     }
        ///   ], # Optional. Columns to sort by and sorting order
        ///   sources: [string], # Optional. Sources of threat intelligence indicators
        ///   patternTypes: [string], # Optional. Pattern types
        ///   threatTypes: [string], # Optional. Threat types of threat intelligence indicators
        ///   ids: [string], # Optional. Ids of threat intelligence indicators
        ///   keywords: [string], # Optional. Keywords for searching threat intelligence indicators
        ///   skipToken: string, # Optional. Skip token.
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>ThreatIntelligenceInformationListValue</c>:
        /// <code>{
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;indicator&quot;, # Required. The kind of the entity.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> QueryIndicators(string resourceGroupName, string workspaceName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNull(content, nameof(content));

            return QueryIndicatorsImplementation("ThreatIntelligenceIndicatorClient.QueryIndicators", resourceGroupName, workspaceName, content, context);
        }

        private Pageable<BinaryData> QueryIndicatorsImplementation(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContent content, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateQueryIndicatorsRequest(resourceGroupName, workspaceName, content, context)
                        : CreateQueryIndicatorsNextPageRequest(nextLink, resourceGroupName, workspaceName, content, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        internal HttpMessage CreateCreateIndicatorRequest(string resourceGroupName, string workspaceName, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200201);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/createIndicator", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateGetThreatIntelligenceIndicatorRequest(string resourceGroupName, string workspaceName, string name, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/", false);
            uri.AppendPath(name, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateCreateRequest(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200201);
            var request = message.Request;
            request.Method = RequestMethod.Put;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/", false);
            uri.AppendPath(name, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateDeleteRequest(string resourceGroupName, string workspaceName, string name, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200204);
            var request = message.Request;
            request.Method = RequestMethod.Delete;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/", false);
            uri.AppendPath(name, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateQueryIndicatorsRequest(string resourceGroupName, string workspaceName, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/queryIndicators", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateAppendTagsRequest(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/", false);
            uri.AppendPath(name, true);
            uri.AppendPath("/appendTags", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateReplaceTagsRequest(string resourceGroupName, string workspaceName, string name, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/", false);
            uri.AppendPath(name, true);
            uri.AppendPath("/replaceTags", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateQueryIndicatorsNextPageRequest(string nextLink, string resourceGroupName, string workspaceName, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier200201;
        private static ResponseClassifier ResponseClassifier200201 => _responseClassifier200201 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 201 });
        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
        private static ResponseClassifier _responseClassifier200204;
        private static ResponseClassifier ResponseClassifier200204 => _responseClassifier200204 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 204 });
    }
}
