// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace SecurityInsights
{
    /// <summary> The Entities service client. </summary>
    public partial class EntitiesClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential;
        private static readonly string[] AuthorizationScopes0 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential0;
        private static readonly string[] AuthorizationScopes1 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential1;
        private static readonly string[] AuthorizationScopes2 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential2;
        private static readonly string[] AuthorizationScopes3 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential3;
        private static readonly string[] AuthorizationScopes4 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential4;
        private static readonly string[] AuthorizationScopes5 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential5;
        private static readonly string[] AuthorizationScopes6 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential6;
        private static readonly string[] AuthorizationScopes7 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential7;
        private static readonly string[] AuthorizationScopes8 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential8;
        private static readonly string[] AuthorizationScopes9 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential9;
        private static readonly string[] AuthorizationScopes10 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential10;
        private static readonly string[] AuthorizationScopes11 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential11;
        private static readonly string[] AuthorizationScopes12 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential12;
        private static readonly string[] AuthorizationScopes13 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential13;
        private static readonly string[] AuthorizationScopes14 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential14;
        private static readonly string[] AuthorizationScopes15 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential15;
        private static readonly string[] AuthorizationScopes16 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential16;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;
        private readonly string _apiVersion;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of EntitiesClient for mocking. </summary>
        protected EntitiesClient()
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of EntitiesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public EntitiesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Gets an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>SecurityAlert</summary>Schema for <c>SecurityAlert</c>:
        /// <code>{
        ///   kind: SecurityAlert, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     alertDisplayName: string, # Optional. The display name of the alert.
        ///     alertType: string, # Optional. The type name of the alert.
        ///     compromisedEntity: string, # Optional. Display name of the main entity being reported on.
        ///     confidenceLevel: &quot;Unknown&quot; | &quot;Low&quot; | &quot;High&quot;, # Optional. The confidence level of this alert.
        ///     confidenceReasons: [
        ///       {
        ///         reason: string, # Optional. The reason&apos;s description
        ///         reasonType: string, # Optional. The type (category) of the reason
        ///       }
        ///     ], # Optional. The confidence reasons
        ///     confidenceScore: number, # Optional. The confidence score of the alert.
        ///     confidenceScoreStatus: &quot;NotApplicable&quot; | &quot;InProcess&quot; | &quot;NotFinal&quot; | &quot;Final&quot;, # Optional. The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.
        ///     description: string, # Optional. Alert description.
        ///     endTimeUtc: string (ISO 8601 Format), # Optional. The impact end time of the alert (the time of the last event contributing to the alert).
        ///     intent: &quot;Unknown&quot; | &quot;Probing&quot; | &quot;Exploitation&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Execution&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot;, # Optional. Holds the alert intent stage(s) mapping for this alert.
        ///     providerAlertId: string, # Optional. The identifier of the alert inside the product which generated the alert.
        ///     processingEndTime: string (ISO 8601 Format), # Optional. The time the alert was made available for consumption.
        ///     productComponentName: string, # Optional. The name of a component inside the product which generated the alert.
        ///     productName: string, # Optional. The name of the product which published this alert.
        ///     productVersion: string, # Optional. The version of the product generating the alert.
        ///     remediationSteps: [string], # Optional. Manual action items to take to remediate the alert.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity of the alert
        ///     startTimeUtc: string (ISO 8601 Format), # Optional. The impact start time of the alert (the time of the first event contributing to the alert).
        ///     status: &quot;Unknown&quot; | &quot;New&quot; | &quot;Resolved&quot; | &quot;Dismissed&quot; | &quot;InProgress&quot;, # Optional. The lifecycle status of the alert.
        ///     systemAlertId: string, # Optional. Holds the product identifier of the alert for the product.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert
        ///     timeGenerated: string (ISO 8601 Format), # Optional. The time the alert was generated.
        ///     vendorName: string, # Optional. The name of the vendor that raise the alert.
        ///     alertLink: string, # Optional. The uri link of the alert.
        ///     resourceIdentifiers: [AnyObject], # Optional. The list of resource identifiers of the alert.
        ///   }, # Optional. SecurityAlert entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 20 more JSON objects</summary><details><summary>HuntingBookmark</summary>Schema for <c>HuntingBookmark</c>:
        /// <code>{
        ///   kind: Bookmark, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     created: string (ISO 8601 Format), # Optional. The time the bookmark was created
        ///     createdBy: {
        ///       email: string, # Optional. The email of the user.
        ///       name: string, # Optional. The name of the user.
        ///       objectId: UserInfoObjectId, # Optional. The object id of the user.
        ///     }, # Optional. Describes a user that created the bookmark
        ///     displayName: string, # Required. The display name of the bookmark
        ///     eventTime: string (ISO 8601 Format), # Optional. The time of the event
        ///     labels: [string], # Optional. List of labels relevant to this bookmark
        ///     notes: string, # Optional. The notes of the bookmark
        ///     query: string, # Required. The query of the bookmark.
        ///     queryResult: string, # Optional. The query result of the bookmark.
        ///     updated: string (ISO 8601 Format), # Optional. The last time the bookmark was updated
        ///     updatedBy: UserInfo, # Optional. Describes a user that updated the bookmark
        ///     incidentInfo: {
        ///       incidentId: string, # Optional. Incident Id
        ///       severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity of the incident
        ///       title: string, # Optional. The title of the incident
        ///       relationName: string, # Optional. Relation Name
        ///     }, # Optional. Describes an incident that relates to bookmark
        ///   }, # Optional. HuntingBookmark entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AccountEntity</summary>Schema for <c>AccountEntity</c>:
        /// <code>{
        ///   kind: Account, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     aadTenantId: string, # Optional. The Azure Active Directory tenant id.
        ///     aadUserId: string, # Optional. The Azure Active Directory user id.
        ///     accountName: string, # Optional. The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
        ///     displayName: string, # Optional. The display name of the account.
        ///     hostEntityId: string, # Optional. The Host entity id that contains the account in case it is a local account (not domain joined)
        ///     isDomainJoined: boolean, # Optional. Determines whether this is a domain account.
        ///     ntDomain: string, # Optional. The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.
        ///     objectGuid: AccountEntityPropertiesObjectGuid, # Optional. The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.
        ///     puid: string, # Optional. The Azure Active Directory Passport User ID.
        ///     sid: string, # Optional. The account security identifier, e.g. S-1-5-18.
        ///     upnSuffix: string, # Optional. The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
        ///     dnsDomain: string, # Optional. The fully qualified domain DNS name.
        ///   }, # Optional. Account entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureResourceEntity</summary>Schema for <c>AzureResourceEntity</c>:
        /// <code>{
        ///   kind: AzureResource, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     resourceId: string, # Optional. The azure resource id of the resource
        ///     subscriptionId: string, # Optional. The subscription id of the resource
        ///   }, # Optional. AzureResource entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>CloudApplicationEntity</summary>Schema for <c>CloudApplicationEntity</c>:
        /// <code>{
        ///   kind: CloudApplication, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     appId: number, # Optional. The technical identifier of the application.
        ///     appName: string, # Optional. The name of the related cloud application.
        ///     instanceName: string, # Optional. The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.
        ///   }, # Optional. CloudApplication entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>DnsEntity</summary>Schema for <c>DnsEntity</c>:
        /// <code>{
        ///   kind: DnsResolution, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     dnsServerIpEntityId: string, # Optional. An ip entity id for the dns server resolving the request
        ///     domainName: string, # Optional. The name of the dns record associated with the alert
        ///     hostIpAddressEntityId: string, # Optional. An ip entity id for the dns request client
        ///     ipAddressEntityIds: [string], # Optional. Ip entity identifiers for the resolved ip address.
        ///   }, # Optional. Dns entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>FileEntity</summary>Schema for <c>FileEntity</c>:
        /// <code>{
        ///   kind: File, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     directory: string, # Optional. The full path to the file.
        ///     fileHashEntityIds: [string], # Optional. The file hash entity identifiers associated with this file
        ///     fileName: string, # Optional. The file name without path (some alerts might not include path).
        ///     hostEntityId: string, # Optional. The Host entity id which the file belongs to
        ///   }, # Optional. File entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>FileHashEntity</summary>Schema for <c>FileHashEntity</c>:
        /// <code>{
        ///   kind: FileHash, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     algorithm: &quot;Unknown&quot; | &quot;MD5&quot; | &quot;SHA1&quot; | &quot;SHA256&quot; | &quot;SHA256AC&quot;, # Optional. The hash algorithm type.
        ///     hashValue: string, # Optional. The file hash value.
        ///   }, # Optional. FileHash entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>HostEntity</summary>Schema for <c>HostEntity</c>:
        /// <code>{
        ///   kind: Host, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     azureID: string, # Optional. The azure resource id of the VM.
        ///     dnsDomain: string, # Optional. The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
        ///     hostName: string, # Optional. The hostname without the domain suffix.
        ///     isDomainJoined: boolean, # Optional. Determines whether this host belongs to a domain.
        ///     netBiosName: string, # Optional. The host name (pre-windows2000).
        ///     ntDomain: string, # Optional. The NT domain that this host belongs to.
        ///     omsAgentID: string, # Optional. The OMS agent id, if the host has OMS agent installed.
        ///     osFamily: OSFamily, # Optional. The operating system type.
        ///     osVersion: string, # Optional. A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration
        ///   }, # Optional. Host entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>IoTDeviceEntity</summary>Schema for <c>IoTDeviceEntity</c>:
        /// <code>{
        ///   kind: IoTDevice, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     deviceId: string, # Optional. The ID of the IoT Device in the IoT Hub
        ///     deviceName: string, # Optional. The friendly name of the device
        ///     source: string, # Optional. The source of the device
        ///     iotSecurityAgentId: IoTDeviceEntityPropertiesIotSecurityAgentId, # Optional. The ID of the security agent running on the device
        ///     deviceType: string, # Optional. The type of the device
        ///     vendor: string, # Optional. The vendor of the device
        ///     edgeId: string, # Optional. The ID of the edge device
        ///     macAddress: string, # Optional. The MAC address of the device
        ///     model: string, # Optional. The model of the device
        ///     serialNumber: string, # Optional. The serial number of the device
        ///     firmwareVersion: string, # Optional. The firmware version of the device
        ///     operatingSystem: string, # Optional. The operating system of the device
        ///     iotHubEntityId: string, # Optional. The AzureResource entity id of the IoT Hub
        ///     hostEntityId: string, # Optional. The Host entity id of this device
        ///     ipAddressEntityId: string, # Optional. The IP entity if of this device
        ///     threatIntelligence: [
        ///       {
        ///         confidence: number, # Optional. Confidence (must be between 0 and 1)
        ///         providerName: string, # Optional. Name of the provider from whom this Threat Intelligence information was received
        ///         reportLink: string, # Optional. Report link
        ///         threatDescription: string, # Optional. Threat description (free text)
        ///         threatName: string, # Optional. Threat name (e.g. &quot;Jedobot malware&quot;)
        ///         threatType: string, # Optional. Threat type (e.g. &quot;Botnet&quot;)
        ///       }
        ///     ], # Optional. A list of TI contexts attached to the IoTDevice entity.
        ///     protocols: [string], # Optional. A list of protocols of the IoTDevice entity.
        ///   }, # Optional. IoTDevice entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>IpEntity</summary>Schema for <c>IpEntity</c>:
        /// <code>{
        ///   kind: Ip, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     address: string, # Optional. The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)
        ///     location: {
        ///       asn: number, # Optional. Autonomous System Number
        ///       city: string, # Optional. City name
        ///       countryCode: string, # Optional. The country code according to ISO 3166 format
        ///       countryName: string, # Optional. Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name
        ///       latitude: number, # Optional. The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code.
        ///       longitude: number, # Optional. The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code.
        ///       state: string, # Optional. State name
        ///     }, # Optional. The geo-location context attached to the ip entity
        ///     threatIntelligence: [
        ///       {
        ///         confidence: number, # Optional. Confidence (must be between 0 and 1)
        ///         providerName: string, # Optional. Name of the provider from whom this Threat Intelligence information was received
        ///         reportLink: string, # Optional. Report link
        ///         threatDescription: string, # Optional. Threat description (free text)
        ///         threatName: string, # Optional. Threat name (e.g. &quot;Jedobot malware&quot;)
        ///         threatType: string, # Optional. Threat type (e.g. &quot;Botnet&quot;)
        ///       }
        ///     ], # Optional. A list of TI contexts attached to the ip entity.
        ///   }, # Optional. Ip entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MailboxEntity</summary>Schema for <c>MailboxEntity</c>:
        /// <code>{
        ///   kind: Mailbox, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     mailboxPrimaryAddress: string, # Optional. The mailbox&apos;s primary address
        ///     displayName: string, # Optional. The mailbox&apos;s display name
        ///     upn: string, # Optional. The mailbox&apos;s UPN
        ///     externalDirectoryObjectId: MailboxEntityPropertiesExternalDirectoryObjectId, # Optional. The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side
        ///   }, # Optional. Mailbox entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MailClusterEntity</summary>Schema for <c>MailClusterEntity</c>:
        /// <code>{
        ///   kind: MailCluster, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     networkMessageIds: [string], # Optional. The mail message IDs that are part of the mail cluster
        ///     countByDeliveryStatus: AnyObject, # Optional. Count of mail messages by DeliveryStatus string representation
        ///     countByThreatType: AnyObject, # Optional. Count of mail messages by ThreatType string representation
        ///     countByProtectionStatus: AnyObject, # Optional. Count of mail messages by ProtectionStatus string representation
        ///     threats: [string], # Optional. The threats of mail messages that are part of the mail cluster
        ///     query: string, # Optional. The query that was used to identify the messages of the mail cluster
        ///     queryTime: string (ISO 8601 Format), # Optional. The query time
        ///     mailCount: number, # Optional. The number of mail messages that are part of the mail cluster
        ///     isVolumeAnomaly: boolean, # Optional. Is this a volume anomaly mail cluster
        ///     source: string, # Optional. The source of the mail cluster (default is &apos;O365 ATP&apos;)
        ///     clusterSourceIdentifier: string, # Optional. The id of the cluster source
        ///     clusterSourceType: string, # Optional. The type of the cluster source
        ///     clusterQueryStartTime: string (ISO 8601 Format), # Optional. The cluster query start time
        ///     clusterQueryEndTime: string (ISO 8601 Format), # Optional. The cluster query end time
        ///     clusterGroup: string, # Optional. The cluster group
        ///   }, # Optional. Mail cluster entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MailMessageEntity</summary>Schema for <c>MailMessageEntity</c>:
        /// <code>{
        ///   kind: MailMessage, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     fileEntityIds: [string], # Optional. The File entity ids of this mail message&apos;s attachments
        ///     recipient: string, # Optional. The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient
        ///     urls: [string], # Optional. The Urls contained in this mail message
        ///     threats: [string], # Optional. The threats of this mail message
        ///     p1Sender: string, # Optional. The p1 sender&apos;s email address
        ///     p1SenderDisplayName: string, # Optional. The p1 sender&apos;s display name
        ///     p1SenderDomain: string, # Optional. The p1 sender&apos;s domain
        ///     senderIP: string, # Optional. The sender&apos;s IP address
        ///     p2Sender: string, # Optional. The p2 sender&apos;s email address
        ///     p2SenderDisplayName: string, # Optional. The p2 sender&apos;s display name
        ///     p2SenderDomain: string, # Optional. The p2 sender&apos;s domain
        ///     receiveDate: string (ISO 8601 Format), # Optional. The receive date of this message
        ///     networkMessageId: MailMessageEntityPropertiesNetworkMessageId, # Optional. The network message id of this mail message
        ///     internetMessageId: string, # Optional. The internet message id of this mail message
        ///     subject: string, # Optional. The subject of this mail message
        ///     language: string, # Optional. The language of this mail message
        ///     threatDetectionMethods: [string], # Optional. The threat detection methods
        ///     bodyFingerprintBin1: number, # Optional. The bodyFingerprintBin1
        ///     bodyFingerprintBin2: number, # Optional. The bodyFingerprintBin2
        ///     bodyFingerprintBin3: number, # Optional. The bodyFingerprintBin3
        ///     bodyFingerprintBin4: number, # Optional. The bodyFingerprintBin4
        ///     bodyFingerprintBin5: number, # Optional. The bodyFingerprintBin5
        ///     antispamDirection: &quot;Unknown&quot; | &quot;Inbound&quot; | &quot;Outbound&quot; | &quot;Intraorg&quot;, # Optional. The directionality of this mail message
        ///     deliveryAction: DeliveryAction, # Optional. The delivery action of this mail message like Delivered, Blocked, Replaced etc
        ///     deliveryLocation: DeliveryLocation, # Optional. The delivery location of this mail message like Inbox, JunkFolder etc
        ///   }, # Optional. Mail message entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MalwareEntity</summary>Schema for <c>MalwareEntity</c>:
        /// <code>{
        ///   kind: Malware, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     category: string, # Optional. The malware category by the vendor, e.g. Trojan
        ///     fileEntityIds: [string], # Optional. List of linked file entity identifiers on which the malware was found
        ///     malwareName: string, # Optional. The malware name by the vendor, e.g. Win32/Toga!rfn
        ///     processEntityIds: [string], # Optional. List of linked process entity identifiers on which the malware was found.
        ///   }, # Optional. File entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ProcessEntity</summary>Schema for <c>ProcessEntity</c>:
        /// <code>{
        ///   kind: Process, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     accountEntityId: string, # Optional. The account entity id running the processes.
        ///     commandLine: string, # Optional. The command line used to create the process
        ///     creationTimeUtc: string (ISO 8601 Format), # Optional. The time when the process started to run
        ///     elevationToken: ElevationToken, # Optional. The elevation token associated with the process.
        ///     hostEntityId: string, # Optional. The host entity id on which the process was running
        ///     hostLogonSessionEntityId: string, # Optional. The session entity id in which the process was running
        ///     imageFileEntityId: string, # Optional. Image file entity id
        ///     parentProcessEntityId: string, # Optional. The parent process entity id.
        ///     processId: string, # Optional. The process ID
        ///   }, # Optional. Process entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>RegistryKeyEntity</summary>Schema for <c>RegistryKeyEntity</c>:
        /// <code>{
        ///   kind: RegistryKey, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     hive: &quot;HKEY_LOCAL_MACHINE&quot; | &quot;HKEY_CLASSES_ROOT&quot; | &quot;HKEY_CURRENT_CONFIG&quot; | &quot;HKEY_USERS&quot; | &quot;HKEY_CURRENT_USER_LOCAL_SETTINGS&quot; | &quot;HKEY_PERFORMANCE_DATA&quot; | &quot;HKEY_PERFORMANCE_NLSTEXT&quot; | &quot;HKEY_PERFORMANCE_TEXT&quot; | &quot;HKEY_A&quot; | &quot;HKEY_CURRENT_USER&quot;, # Optional. the hive that holds the registry key.
        ///     key: string, # Optional. The registry key path.
        ///   }, # Optional. RegistryKey entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>RegistryValueEntity</summary>Schema for <c>RegistryValueEntity</c>:
        /// <code>{
        ///   kind: RegistryValue, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     keyEntityId: string, # Optional. The registry key entity id.
        ///     valueData: string, # Optional. String formatted representation of the value data.
        ///     valueName: string, # Optional. The registry value name.
        ///     valueType: &quot;None&quot; | &quot;Unknown&quot; | &quot;String&quot; | &quot;ExpandString&quot; | &quot;Binary&quot; | &quot;DWord&quot; | &quot;MultiString&quot; | &quot;QWord&quot;, # Optional. Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.
        ///   }, # Optional. RegistryKey entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SecurityGroupEntity</summary>Schema for <c>SecurityGroupEntity</c>:
        /// <code>{
        ///   kind: SecurityGroup, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     distinguishedName: string, # Optional. The group distinguished name
        ///     objectGuid: SecurityGroupEntityPropertiesObjectGuid, # Optional. A single-value attribute that is the unique identifier for the object, assigned by active directory.
        ///     sid: string, # Optional. The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group
        ///   }, # Optional. SecurityGroup entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SubmissionMailEntity</summary>Schema for <c>SubmissionMailEntity</c>:
        /// <code>{
        ///   kind: SubmissionMail, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     networkMessageId: SubmissionMailEntityPropertiesNetworkMessageId, # Optional. The network message id of email to which submission belongs
        ///     submissionId: SubmissionMailEntityPropertiesSubmissionId, # Optional. The submission id
        ///     submitter: string, # Optional. The submitter
        ///     submissionDate: string (ISO 8601 Format), # Optional. The submission date
        ///     timestamp: string (ISO 8601 Format), # Optional. The Time stamp when the message is received (Mail)
        ///     recipient: string, # Optional. The recipient of the mail
        ///     sender: string, # Optional. The sender of the mail
        ///     senderIp: string, # Optional. The sender&apos;s IP
        ///     subject: string, # Optional. The subject of submission mail
        ///     reportType: string, # Optional. The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.
        ///   }, # Optional. Submission mail entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>UrlEntity</summary>Schema for <c>UrlEntity</c>:
        /// <code>{
        ///   kind: Url, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     url: string, # Optional. A full URL the entity points to
        ///   }, # Optional. Url entity properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetEntityAsync(string resourceGroupName, string workspaceName, string entityId, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.GetEntity");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetEntityRequest(resourceGroupName, workspaceName, entityId, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>SecurityAlert</summary>Schema for <c>SecurityAlert</c>:
        /// <code>{
        ///   kind: SecurityAlert, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     alertDisplayName: string, # Optional. The display name of the alert.
        ///     alertType: string, # Optional. The type name of the alert.
        ///     compromisedEntity: string, # Optional. Display name of the main entity being reported on.
        ///     confidenceLevel: &quot;Unknown&quot; | &quot;Low&quot; | &quot;High&quot;, # Optional. The confidence level of this alert.
        ///     confidenceReasons: [
        ///       {
        ///         reason: string, # Optional. The reason&apos;s description
        ///         reasonType: string, # Optional. The type (category) of the reason
        ///       }
        ///     ], # Optional. The confidence reasons
        ///     confidenceScore: number, # Optional. The confidence score of the alert.
        ///     confidenceScoreStatus: &quot;NotApplicable&quot; | &quot;InProcess&quot; | &quot;NotFinal&quot; | &quot;Final&quot;, # Optional. The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.
        ///     description: string, # Optional. Alert description.
        ///     endTimeUtc: string (ISO 8601 Format), # Optional. The impact end time of the alert (the time of the last event contributing to the alert).
        ///     intent: &quot;Unknown&quot; | &quot;Probing&quot; | &quot;Exploitation&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Execution&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot;, # Optional. Holds the alert intent stage(s) mapping for this alert.
        ///     providerAlertId: string, # Optional. The identifier of the alert inside the product which generated the alert.
        ///     processingEndTime: string (ISO 8601 Format), # Optional. The time the alert was made available for consumption.
        ///     productComponentName: string, # Optional. The name of a component inside the product which generated the alert.
        ///     productName: string, # Optional. The name of the product which published this alert.
        ///     productVersion: string, # Optional. The version of the product generating the alert.
        ///     remediationSteps: [string], # Optional. Manual action items to take to remediate the alert.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity of the alert
        ///     startTimeUtc: string (ISO 8601 Format), # Optional. The impact start time of the alert (the time of the first event contributing to the alert).
        ///     status: &quot;Unknown&quot; | &quot;New&quot; | &quot;Resolved&quot; | &quot;Dismissed&quot; | &quot;InProgress&quot;, # Optional. The lifecycle status of the alert.
        ///     systemAlertId: string, # Optional. Holds the product identifier of the alert for the product.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert
        ///     timeGenerated: string (ISO 8601 Format), # Optional. The time the alert was generated.
        ///     vendorName: string, # Optional. The name of the vendor that raise the alert.
        ///     alertLink: string, # Optional. The uri link of the alert.
        ///     resourceIdentifiers: [AnyObject], # Optional. The list of resource identifiers of the alert.
        ///   }, # Optional. SecurityAlert entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 20 more JSON objects</summary><details><summary>HuntingBookmark</summary>Schema for <c>HuntingBookmark</c>:
        /// <code>{
        ///   kind: Bookmark, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     created: string (ISO 8601 Format), # Optional. The time the bookmark was created
        ///     createdBy: {
        ///       email: string, # Optional. The email of the user.
        ///       name: string, # Optional. The name of the user.
        ///       objectId: UserInfoObjectId, # Optional. The object id of the user.
        ///     }, # Optional. Describes a user that created the bookmark
        ///     displayName: string, # Required. The display name of the bookmark
        ///     eventTime: string (ISO 8601 Format), # Optional. The time of the event
        ///     labels: [string], # Optional. List of labels relevant to this bookmark
        ///     notes: string, # Optional. The notes of the bookmark
        ///     query: string, # Required. The query of the bookmark.
        ///     queryResult: string, # Optional. The query result of the bookmark.
        ///     updated: string (ISO 8601 Format), # Optional. The last time the bookmark was updated
        ///     updatedBy: UserInfo, # Optional. Describes a user that updated the bookmark
        ///     incidentInfo: {
        ///       incidentId: string, # Optional. Incident Id
        ///       severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity of the incident
        ///       title: string, # Optional. The title of the incident
        ///       relationName: string, # Optional. Relation Name
        ///     }, # Optional. Describes an incident that relates to bookmark
        ///   }, # Optional. HuntingBookmark entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AccountEntity</summary>Schema for <c>AccountEntity</c>:
        /// <code>{
        ///   kind: Account, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     aadTenantId: string, # Optional. The Azure Active Directory tenant id.
        ///     aadUserId: string, # Optional. The Azure Active Directory user id.
        ///     accountName: string, # Optional. The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
        ///     displayName: string, # Optional. The display name of the account.
        ///     hostEntityId: string, # Optional. The Host entity id that contains the account in case it is a local account (not domain joined)
        ///     isDomainJoined: boolean, # Optional. Determines whether this is a domain account.
        ///     ntDomain: string, # Optional. The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.
        ///     objectGuid: AccountEntityPropertiesObjectGuid, # Optional. The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.
        ///     puid: string, # Optional. The Azure Active Directory Passport User ID.
        ///     sid: string, # Optional. The account security identifier, e.g. S-1-5-18.
        ///     upnSuffix: string, # Optional. The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
        ///     dnsDomain: string, # Optional. The fully qualified domain DNS name.
        ///   }, # Optional. Account entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureResourceEntity</summary>Schema for <c>AzureResourceEntity</c>:
        /// <code>{
        ///   kind: AzureResource, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     resourceId: string, # Optional. The azure resource id of the resource
        ///     subscriptionId: string, # Optional. The subscription id of the resource
        ///   }, # Optional. AzureResource entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>CloudApplicationEntity</summary>Schema for <c>CloudApplicationEntity</c>:
        /// <code>{
        ///   kind: CloudApplication, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     appId: number, # Optional. The technical identifier of the application.
        ///     appName: string, # Optional. The name of the related cloud application.
        ///     instanceName: string, # Optional. The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.
        ///   }, # Optional. CloudApplication entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>DnsEntity</summary>Schema for <c>DnsEntity</c>:
        /// <code>{
        ///   kind: DnsResolution, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     dnsServerIpEntityId: string, # Optional. An ip entity id for the dns server resolving the request
        ///     domainName: string, # Optional. The name of the dns record associated with the alert
        ///     hostIpAddressEntityId: string, # Optional. An ip entity id for the dns request client
        ///     ipAddressEntityIds: [string], # Optional. Ip entity identifiers for the resolved ip address.
        ///   }, # Optional. Dns entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>FileEntity</summary>Schema for <c>FileEntity</c>:
        /// <code>{
        ///   kind: File, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     directory: string, # Optional. The full path to the file.
        ///     fileHashEntityIds: [string], # Optional. The file hash entity identifiers associated with this file
        ///     fileName: string, # Optional. The file name without path (some alerts might not include path).
        ///     hostEntityId: string, # Optional. The Host entity id which the file belongs to
        ///   }, # Optional. File entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>FileHashEntity</summary>Schema for <c>FileHashEntity</c>:
        /// <code>{
        ///   kind: FileHash, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     algorithm: &quot;Unknown&quot; | &quot;MD5&quot; | &quot;SHA1&quot; | &quot;SHA256&quot; | &quot;SHA256AC&quot;, # Optional. The hash algorithm type.
        ///     hashValue: string, # Optional. The file hash value.
        ///   }, # Optional. FileHash entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>HostEntity</summary>Schema for <c>HostEntity</c>:
        /// <code>{
        ///   kind: Host, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     azureID: string, # Optional. The azure resource id of the VM.
        ///     dnsDomain: string, # Optional. The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
        ///     hostName: string, # Optional. The hostname without the domain suffix.
        ///     isDomainJoined: boolean, # Optional. Determines whether this host belongs to a domain.
        ///     netBiosName: string, # Optional. The host name (pre-windows2000).
        ///     ntDomain: string, # Optional. The NT domain that this host belongs to.
        ///     omsAgentID: string, # Optional. The OMS agent id, if the host has OMS agent installed.
        ///     osFamily: OSFamily, # Optional. The operating system type.
        ///     osVersion: string, # Optional. A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration
        ///   }, # Optional. Host entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>IoTDeviceEntity</summary>Schema for <c>IoTDeviceEntity</c>:
        /// <code>{
        ///   kind: IoTDevice, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     deviceId: string, # Optional. The ID of the IoT Device in the IoT Hub
        ///     deviceName: string, # Optional. The friendly name of the device
        ///     source: string, # Optional. The source of the device
        ///     iotSecurityAgentId: IoTDeviceEntityPropertiesIotSecurityAgentId, # Optional. The ID of the security agent running on the device
        ///     deviceType: string, # Optional. The type of the device
        ///     vendor: string, # Optional. The vendor of the device
        ///     edgeId: string, # Optional. The ID of the edge device
        ///     macAddress: string, # Optional. The MAC address of the device
        ///     model: string, # Optional. The model of the device
        ///     serialNumber: string, # Optional. The serial number of the device
        ///     firmwareVersion: string, # Optional. The firmware version of the device
        ///     operatingSystem: string, # Optional. The operating system of the device
        ///     iotHubEntityId: string, # Optional. The AzureResource entity id of the IoT Hub
        ///     hostEntityId: string, # Optional. The Host entity id of this device
        ///     ipAddressEntityId: string, # Optional. The IP entity if of this device
        ///     threatIntelligence: [
        ///       {
        ///         confidence: number, # Optional. Confidence (must be between 0 and 1)
        ///         providerName: string, # Optional. Name of the provider from whom this Threat Intelligence information was received
        ///         reportLink: string, # Optional. Report link
        ///         threatDescription: string, # Optional. Threat description (free text)
        ///         threatName: string, # Optional. Threat name (e.g. &quot;Jedobot malware&quot;)
        ///         threatType: string, # Optional. Threat type (e.g. &quot;Botnet&quot;)
        ///       }
        ///     ], # Optional. A list of TI contexts attached to the IoTDevice entity.
        ///     protocols: [string], # Optional. A list of protocols of the IoTDevice entity.
        ///   }, # Optional. IoTDevice entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>IpEntity</summary>Schema for <c>IpEntity</c>:
        /// <code>{
        ///   kind: Ip, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     address: string, # Optional. The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)
        ///     location: {
        ///       asn: number, # Optional. Autonomous System Number
        ///       city: string, # Optional. City name
        ///       countryCode: string, # Optional. The country code according to ISO 3166 format
        ///       countryName: string, # Optional. Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name
        ///       latitude: number, # Optional. The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code.
        ///       longitude: number, # Optional. The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code.
        ///       state: string, # Optional. State name
        ///     }, # Optional. The geo-location context attached to the ip entity
        ///     threatIntelligence: [
        ///       {
        ///         confidence: number, # Optional. Confidence (must be between 0 and 1)
        ///         providerName: string, # Optional. Name of the provider from whom this Threat Intelligence information was received
        ///         reportLink: string, # Optional. Report link
        ///         threatDescription: string, # Optional. Threat description (free text)
        ///         threatName: string, # Optional. Threat name (e.g. &quot;Jedobot malware&quot;)
        ///         threatType: string, # Optional. Threat type (e.g. &quot;Botnet&quot;)
        ///       }
        ///     ], # Optional. A list of TI contexts attached to the ip entity.
        ///   }, # Optional. Ip entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MailboxEntity</summary>Schema for <c>MailboxEntity</c>:
        /// <code>{
        ///   kind: Mailbox, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     mailboxPrimaryAddress: string, # Optional. The mailbox&apos;s primary address
        ///     displayName: string, # Optional. The mailbox&apos;s display name
        ///     upn: string, # Optional. The mailbox&apos;s UPN
        ///     externalDirectoryObjectId: MailboxEntityPropertiesExternalDirectoryObjectId, # Optional. The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side
        ///   }, # Optional. Mailbox entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MailClusterEntity</summary>Schema for <c>MailClusterEntity</c>:
        /// <code>{
        ///   kind: MailCluster, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     networkMessageIds: [string], # Optional. The mail message IDs that are part of the mail cluster
        ///     countByDeliveryStatus: AnyObject, # Optional. Count of mail messages by DeliveryStatus string representation
        ///     countByThreatType: AnyObject, # Optional. Count of mail messages by ThreatType string representation
        ///     countByProtectionStatus: AnyObject, # Optional. Count of mail messages by ProtectionStatus string representation
        ///     threats: [string], # Optional. The threats of mail messages that are part of the mail cluster
        ///     query: string, # Optional. The query that was used to identify the messages of the mail cluster
        ///     queryTime: string (ISO 8601 Format), # Optional. The query time
        ///     mailCount: number, # Optional. The number of mail messages that are part of the mail cluster
        ///     isVolumeAnomaly: boolean, # Optional. Is this a volume anomaly mail cluster
        ///     source: string, # Optional. The source of the mail cluster (default is &apos;O365 ATP&apos;)
        ///     clusterSourceIdentifier: string, # Optional. The id of the cluster source
        ///     clusterSourceType: string, # Optional. The type of the cluster source
        ///     clusterQueryStartTime: string (ISO 8601 Format), # Optional. The cluster query start time
        ///     clusterQueryEndTime: string (ISO 8601 Format), # Optional. The cluster query end time
        ///     clusterGroup: string, # Optional. The cluster group
        ///   }, # Optional. Mail cluster entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MailMessageEntity</summary>Schema for <c>MailMessageEntity</c>:
        /// <code>{
        ///   kind: MailMessage, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     fileEntityIds: [string], # Optional. The File entity ids of this mail message&apos;s attachments
        ///     recipient: string, # Optional. The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient
        ///     urls: [string], # Optional. The Urls contained in this mail message
        ///     threats: [string], # Optional. The threats of this mail message
        ///     p1Sender: string, # Optional. The p1 sender&apos;s email address
        ///     p1SenderDisplayName: string, # Optional. The p1 sender&apos;s display name
        ///     p1SenderDomain: string, # Optional. The p1 sender&apos;s domain
        ///     senderIP: string, # Optional. The sender&apos;s IP address
        ///     p2Sender: string, # Optional. The p2 sender&apos;s email address
        ///     p2SenderDisplayName: string, # Optional. The p2 sender&apos;s display name
        ///     p2SenderDomain: string, # Optional. The p2 sender&apos;s domain
        ///     receiveDate: string (ISO 8601 Format), # Optional. The receive date of this message
        ///     networkMessageId: MailMessageEntityPropertiesNetworkMessageId, # Optional. The network message id of this mail message
        ///     internetMessageId: string, # Optional. The internet message id of this mail message
        ///     subject: string, # Optional. The subject of this mail message
        ///     language: string, # Optional. The language of this mail message
        ///     threatDetectionMethods: [string], # Optional. The threat detection methods
        ///     bodyFingerprintBin1: number, # Optional. The bodyFingerprintBin1
        ///     bodyFingerprintBin2: number, # Optional. The bodyFingerprintBin2
        ///     bodyFingerprintBin3: number, # Optional. The bodyFingerprintBin3
        ///     bodyFingerprintBin4: number, # Optional. The bodyFingerprintBin4
        ///     bodyFingerprintBin5: number, # Optional. The bodyFingerprintBin5
        ///     antispamDirection: &quot;Unknown&quot; | &quot;Inbound&quot; | &quot;Outbound&quot; | &quot;Intraorg&quot;, # Optional. The directionality of this mail message
        ///     deliveryAction: DeliveryAction, # Optional. The delivery action of this mail message like Delivered, Blocked, Replaced etc
        ///     deliveryLocation: DeliveryLocation, # Optional. The delivery location of this mail message like Inbox, JunkFolder etc
        ///   }, # Optional. Mail message entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MalwareEntity</summary>Schema for <c>MalwareEntity</c>:
        /// <code>{
        ///   kind: Malware, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     category: string, # Optional. The malware category by the vendor, e.g. Trojan
        ///     fileEntityIds: [string], # Optional. List of linked file entity identifiers on which the malware was found
        ///     malwareName: string, # Optional. The malware name by the vendor, e.g. Win32/Toga!rfn
        ///     processEntityIds: [string], # Optional. List of linked process entity identifiers on which the malware was found.
        ///   }, # Optional. File entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ProcessEntity</summary>Schema for <c>ProcessEntity</c>:
        /// <code>{
        ///   kind: Process, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     accountEntityId: string, # Optional. The account entity id running the processes.
        ///     commandLine: string, # Optional. The command line used to create the process
        ///     creationTimeUtc: string (ISO 8601 Format), # Optional. The time when the process started to run
        ///     elevationToken: ElevationToken, # Optional. The elevation token associated with the process.
        ///     hostEntityId: string, # Optional. The host entity id on which the process was running
        ///     hostLogonSessionEntityId: string, # Optional. The session entity id in which the process was running
        ///     imageFileEntityId: string, # Optional. Image file entity id
        ///     parentProcessEntityId: string, # Optional. The parent process entity id.
        ///     processId: string, # Optional. The process ID
        ///   }, # Optional. Process entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>RegistryKeyEntity</summary>Schema for <c>RegistryKeyEntity</c>:
        /// <code>{
        ///   kind: RegistryKey, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     hive: &quot;HKEY_LOCAL_MACHINE&quot; | &quot;HKEY_CLASSES_ROOT&quot; | &quot;HKEY_CURRENT_CONFIG&quot; | &quot;HKEY_USERS&quot; | &quot;HKEY_CURRENT_USER_LOCAL_SETTINGS&quot; | &quot;HKEY_PERFORMANCE_DATA&quot; | &quot;HKEY_PERFORMANCE_NLSTEXT&quot; | &quot;HKEY_PERFORMANCE_TEXT&quot; | &quot;HKEY_A&quot; | &quot;HKEY_CURRENT_USER&quot;, # Optional. the hive that holds the registry key.
        ///     key: string, # Optional. The registry key path.
        ///   }, # Optional. RegistryKey entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>RegistryValueEntity</summary>Schema for <c>RegistryValueEntity</c>:
        /// <code>{
        ///   kind: RegistryValue, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     keyEntityId: string, # Optional. The registry key entity id.
        ///     valueData: string, # Optional. String formatted representation of the value data.
        ///     valueName: string, # Optional. The registry value name.
        ///     valueType: &quot;None&quot; | &quot;Unknown&quot; | &quot;String&quot; | &quot;ExpandString&quot; | &quot;Binary&quot; | &quot;DWord&quot; | &quot;MultiString&quot; | &quot;QWord&quot;, # Optional. Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.
        ///   }, # Optional. RegistryKey entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SecurityGroupEntity</summary>Schema for <c>SecurityGroupEntity</c>:
        /// <code>{
        ///   kind: SecurityGroup, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     distinguishedName: string, # Optional. The group distinguished name
        ///     objectGuid: SecurityGroupEntityPropertiesObjectGuid, # Optional. A single-value attribute that is the unique identifier for the object, assigned by active directory.
        ///     sid: string, # Optional. The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group
        ///   }, # Optional. SecurityGroup entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SubmissionMailEntity</summary>Schema for <c>SubmissionMailEntity</c>:
        /// <code>{
        ///   kind: SubmissionMail, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     networkMessageId: SubmissionMailEntityPropertiesNetworkMessageId, # Optional. The network message id of email to which submission belongs
        ///     submissionId: SubmissionMailEntityPropertiesSubmissionId, # Optional. The submission id
        ///     submitter: string, # Optional. The submitter
        ///     submissionDate: string (ISO 8601 Format), # Optional. The submission date
        ///     timestamp: string (ISO 8601 Format), # Optional. The Time stamp when the message is received (Mail)
        ///     recipient: string, # Optional. The recipient of the mail
        ///     sender: string, # Optional. The sender of the mail
        ///     senderIp: string, # Optional. The sender&apos;s IP
        ///     subject: string, # Optional. The subject of submission mail
        ///     reportType: string, # Optional. The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.
        ///   }, # Optional. Submission mail entity properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>UrlEntity</summary>Schema for <c>UrlEntity</c>:
        /// <code>{
        ///   kind: Url, # Required. The kind of the entity.
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///     friendlyName: string, # Optional. The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        ///     url: string, # Optional. A full URL the entity points to
        ///   }, # Optional. Url entity properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response GetEntity(string resourceGroupName, string workspaceName, string entityId, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.GetEntity");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetEntityRequest(resourceGroupName, workspaceName, entityId, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Expands an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="entityId"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>EntityExpandParameters</c>:
        /// <code>{
        ///   endTime: string (ISO 8601 Format), # Optional. The end date filter, so the only expansion results returned are before this date.
        ///   expansionId: EntityExpandParametersExpansionId, # Optional. The Id of the expansion to perform.
        ///   startTime: string (ISO 8601 Format), # Optional. The start date filter, so the only expansion results returned are after this date.
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>EntityExpandResponse</c>:
        /// <code>{
        ///   metaData: {
        ///     aggregations: [
        ///       {
        ///         aggregationType: string, # Optional. The common type of the aggregation. (for e.g. entity field name)
        ///         count: number, # Required. Total number of aggregations of the given kind (and aggregationType if given) in the expansion result.
        ///         displayName: string, # Optional. The display name of the aggregation by type.
        ///         entityKind: &quot;Account&quot; | &quot;Host&quot; | &quot;File&quot; | &quot;AzureResource&quot; | &quot;CloudApplication&quot; | &quot;DnsResolution&quot; | &quot;FileHash&quot; | &quot;Ip&quot; | &quot;Malware&quot; | &quot;Process&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;Url&quot; | &quot;IoTDevice&quot; | &quot;SecurityAlert&quot; | &quot;Bookmark&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;Mailbox&quot; | &quot;SubmissionMail&quot;, # Required. The kind of the aggregated entity.
        ///       }
        ///     ], # Optional. Information of the aggregated nodes in the expansion result.
        ///   }, # Optional. The metadata from the expansion operation results.
        ///   value: {
        ///     entities: [
        ///       {
        ///         id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///         name: string, # Optional. The name of the resource
        ///         type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///         systemData: {
        ///           createdBy: string, # Optional. The identity that created the resource.
        ///           createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///           createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///           lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///           lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///           lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///         }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///         kind: &quot;Account&quot; | &quot;Host&quot; | &quot;File&quot; | &quot;AzureResource&quot; | &quot;CloudApplication&quot; | &quot;DnsResolution&quot; | &quot;FileHash&quot; | &quot;Ip&quot; | &quot;Malware&quot; | &quot;Process&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;Url&quot; | &quot;IoTDevice&quot; | &quot;SecurityAlert&quot; | &quot;Bookmark&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;Mailbox&quot; | &quot;SubmissionMail&quot;, # Required. The kind of the entity.
        ///       }
        ///     ], # Optional. Array of the expansion result entities.
        ///     edges: [
        ///       {
        ///         targetEntityId: string, # Optional. The target entity Id.
        ///         additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///       }
        ///     ], # Optional. Array of edges that connects the entity to the list of entities.
        ///   }, # Optional. The expansion result values.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> ExpandAsync(string resourceGroupName, string workspaceName, string entityId, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.Expand");
            scope.Start();
            try
            {
                using HttpMessage message = CreateExpandRequest(resourceGroupName, workspaceName, entityId, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Expands an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="entityId"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>EntityExpandParameters</c>:
        /// <code>{
        ///   endTime: string (ISO 8601 Format), # Optional. The end date filter, so the only expansion results returned are before this date.
        ///   expansionId: EntityExpandParametersExpansionId, # Optional. The Id of the expansion to perform.
        ///   startTime: string (ISO 8601 Format), # Optional. The start date filter, so the only expansion results returned are after this date.
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>EntityExpandResponse</c>:
        /// <code>{
        ///   metaData: {
        ///     aggregations: [
        ///       {
        ///         aggregationType: string, # Optional. The common type of the aggregation. (for e.g. entity field name)
        ///         count: number, # Required. Total number of aggregations of the given kind (and aggregationType if given) in the expansion result.
        ///         displayName: string, # Optional. The display name of the aggregation by type.
        ///         entityKind: &quot;Account&quot; | &quot;Host&quot; | &quot;File&quot; | &quot;AzureResource&quot; | &quot;CloudApplication&quot; | &quot;DnsResolution&quot; | &quot;FileHash&quot; | &quot;Ip&quot; | &quot;Malware&quot; | &quot;Process&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;Url&quot; | &quot;IoTDevice&quot; | &quot;SecurityAlert&quot; | &quot;Bookmark&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;Mailbox&quot; | &quot;SubmissionMail&quot;, # Required. The kind of the aggregated entity.
        ///       }
        ///     ], # Optional. Information of the aggregated nodes in the expansion result.
        ///   }, # Optional. The metadata from the expansion operation results.
        ///   value: {
        ///     entities: [
        ///       {
        ///         id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///         name: string, # Optional. The name of the resource
        ///         type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///         systemData: {
        ///           createdBy: string, # Optional. The identity that created the resource.
        ///           createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///           createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///           lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///           lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///           lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///         }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///         kind: &quot;Account&quot; | &quot;Host&quot; | &quot;File&quot; | &quot;AzureResource&quot; | &quot;CloudApplication&quot; | &quot;DnsResolution&quot; | &quot;FileHash&quot; | &quot;Ip&quot; | &quot;Malware&quot; | &quot;Process&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;Url&quot; | &quot;IoTDevice&quot; | &quot;SecurityAlert&quot; | &quot;Bookmark&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;Mailbox&quot; | &quot;SubmissionMail&quot;, # Required. The kind of the entity.
        ///       }
        ///     ], # Optional. Array of the expansion result entities.
        ///     edges: [
        ///       {
        ///         targetEntityId: string, # Optional. The target entity Id.
        ///         additionalData: Dictionary&lt;string, AnyObject&gt;, # Optional. A bag of custom fields that should be part of the entity and will be presented to the user.
        ///       }
        ///     ], # Optional. Array of edges that connects the entity to the list of entities.
        ///   }, # Optional. The expansion result values.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response Expand(string resourceGroupName, string workspaceName, string entityId, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.Expand");
            scope.Start();
            try
            {
                using HttpMessage message = CreateExpandRequest(resourceGroupName, workspaceName, entityId, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Get Insights and Activities for an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="kind"> The Kind parameter for queries. Allowed values: &quot;Insight&quot;. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="entityId"/> or <paramref name="kind"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>GetQueriesResponse</c>:
        /// <code>{
        ///   value: [
        ///     {
        ///       id: string, # Optional. Query Template ARM ID
        ///       name: string, # Optional. Query Template ARM Name
        ///       type: string, # Optional. ARM Type
        ///       kind: &quot;Expansion&quot; | &quot;Insight&quot; | &quot;Activity&quot;, # Required. The kind of the entity query
        ///     }
        ///   ], # Optional. The query result values.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> QueriesAsync(string resourceGroupName, string workspaceName, string entityId, string kind, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));
            Argument.AssertNotNull(kind, nameof(kind));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.Queries");
            scope.Start();
            try
            {
                using HttpMessage message = CreateQueriesRequest(resourceGroupName, workspaceName, entityId, kind, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Get Insights and Activities for an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="kind"> The Kind parameter for queries. Allowed values: &quot;Insight&quot;. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="entityId"/> or <paramref name="kind"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>GetQueriesResponse</c>:
        /// <code>{
        ///   value: [
        ///     {
        ///       id: string, # Optional. Query Template ARM ID
        ///       name: string, # Optional. Query Template ARM Name
        ///       type: string, # Optional. ARM Type
        ///       kind: &quot;Expansion&quot; | &quot;Insight&quot; | &quot;Activity&quot;, # Required. The kind of the entity query
        ///     }
        ///   ], # Optional. The query result values.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response Queries(string resourceGroupName, string workspaceName, string entityId, string kind, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));
            Argument.AssertNotNull(kind, nameof(kind));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.Queries");
            scope.Start();
            try
            {
                using HttpMessage message = CreateQueriesRequest(resourceGroupName, workspaceName, entityId, kind, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Execute Insights for an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="entityId"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>EntityGetInsightsParameters</c>:
        /// <code>{
        ///   startTime: string (ISO 8601 Format), # Required. The start timeline date, so the results returned are after this date.
        ///   endTime: string (ISO 8601 Format), # Required. The end timeline date, so the results returned are before this date.
        ///   addDefaultExtendedTimeRange: boolean, # Optional. Indicates if query time range should be extended with default time range of the query. Default value is false
        ///   insightQueryIds: [EntityGetInsightsParametersInsightQueryIdsItem], # Optional. List of Insights Query Id. If empty, default value is all insights of this entity
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>EntityGetInsightsResponse</c>:
        /// <code>{
        ///   metaData: {
        ///     totalCount: number, # Required. the total items found for the insights request
        ///     errors: [
        ///       {
        ///         kind: &quot;Insight&quot;, # Required. the query kind
        ///         queryId: string, # Optional. the query id
        ///         errorMessage: string, # Required. the error message
        ///       }
        ///     ], # Optional. information about the failed queries
        ///   }, # Optional. The metadata from the get insights operation results.
        ///   value: [
        ///     {
        ///       queryId: string, # Optional. The query id of the insight
        ///       queryTimeInterval: {
        ///         startTime: string (ISO 8601 Format), # Optional. Insight query start time
        ///         endTime: string (ISO 8601 Format), # Optional. Insight query end time
        ///       }, # Optional. The Time interval that the query actually executed on.
        ///       tableQueryResults: {
        ///         columns: [
        ///           {
        ///             type: string, # Optional. the type of the colum
        ///             name: string, # Optional. the name of the colum
        ///           }
        ///         ], # Optional. Columns Metadata of the table
        ///         rows: [string[]], # Optional. Rows data of the table
        ///       }, # Optional. Query results for table insights query.
        ///       chartQueryResults: [InsightsTableResult], # Optional. Query results for table insights query.
        ///     }
        ///   ], # Optional. The insights result values.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetInsightsAsync(string resourceGroupName, string workspaceName, string entityId, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.GetInsights");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetInsightsRequest(resourceGroupName, workspaceName, entityId, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Execute Insights for an entity. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="entityId"> entity ID. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="entityId"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="entityId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>EntityGetInsightsParameters</c>:
        /// <code>{
        ///   startTime: string (ISO 8601 Format), # Required. The start timeline date, so the results returned are after this date.
        ///   endTime: string (ISO 8601 Format), # Required. The end timeline date, so the results returned are before this date.
        ///   addDefaultExtendedTimeRange: boolean, # Optional. Indicates if query time range should be extended with default time range of the query. Default value is false
        ///   insightQueryIds: [EntityGetInsightsParametersInsightQueryIdsItem], # Optional. List of Insights Query Id. If empty, default value is all insights of this entity
        /// }
        /// </code>
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>EntityGetInsightsResponse</c>:
        /// <code>{
        ///   metaData: {
        ///     totalCount: number, # Required. the total items found for the insights request
        ///     errors: [
        ///       {
        ///         kind: &quot;Insight&quot;, # Required. the query kind
        ///         queryId: string, # Optional. the query id
        ///         errorMessage: string, # Required. the error message
        ///       }
        ///     ], # Optional. information about the failed queries
        ///   }, # Optional. The metadata from the get insights operation results.
        ///   value: [
        ///     {
        ///       queryId: string, # Optional. The query id of the insight
        ///       queryTimeInterval: {
        ///         startTime: string (ISO 8601 Format), # Optional. Insight query start time
        ///         endTime: string (ISO 8601 Format), # Optional. Insight query end time
        ///       }, # Optional. The Time interval that the query actually executed on.
        ///       tableQueryResults: {
        ///         columns: [
        ///           {
        ///             type: string, # Optional. the type of the colum
        ///             name: string, # Optional. the name of the colum
        ///           }
        ///         ], # Optional. Columns Metadata of the table
        ///         rows: [string[]], # Optional. Rows data of the table
        ///       }, # Optional. Query results for table insights query.
        ///       chartQueryResults: [InsightsTableResult], # Optional. Query results for table insights query.
        ///     }
        ///   ], # Optional. The insights result values.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response GetInsights(string resourceGroupName, string workspaceName, string entityId, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(entityId, nameof(entityId));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("EntitiesClient.GetInsights");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetInsightsRequest(resourceGroupName, workspaceName, entityId, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets all entities. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="AsyncPageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>EntityListValue</c>:
        /// <code>{
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;Account&quot; | &quot;Host&quot; | &quot;File&quot; | &quot;AzureResource&quot; | &quot;CloudApplication&quot; | &quot;DnsResolution&quot; | &quot;FileHash&quot; | &quot;Ip&quot; | &quot;Malware&quot; | &quot;Process&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;Url&quot; | &quot;IoTDevice&quot; | &quot;SecurityAlert&quot; | &quot;Bookmark&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;Mailbox&quot; | &quot;SubmissionMail&quot;, # Required. The kind of the entity.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> GetEntitiesAsync(string resourceGroupName, string workspaceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));

            return GetEntitiesImplementationAsync("EntitiesClient.GetEntities", resourceGroupName, workspaceName, context);
        }

        private AsyncPageable<BinaryData> GetEntitiesImplementationAsync(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetEntitiesRequest(resourceGroupName, workspaceName, context)
                        : CreateGetEntitiesNextPageRequest(nextLink, resourceGroupName, workspaceName, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> Gets all entities. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="Pageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>EntityListValue</c>:
        /// <code>{
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;Account&quot; | &quot;Host&quot; | &quot;File&quot; | &quot;AzureResource&quot; | &quot;CloudApplication&quot; | &quot;DnsResolution&quot; | &quot;FileHash&quot; | &quot;Ip&quot; | &quot;Malware&quot; | &quot;Process&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;Url&quot; | &quot;IoTDevice&quot; | &quot;SecurityAlert&quot; | &quot;Bookmark&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;Mailbox&quot; | &quot;SubmissionMail&quot;, # Required. The kind of the entity.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> GetEntities(string resourceGroupName, string workspaceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));

            return GetEntitiesImplementation("EntitiesClient.GetEntities", resourceGroupName, workspaceName, context);
        }

        private Pageable<BinaryData> GetEntitiesImplementation(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetEntitiesRequest(resourceGroupName, workspaceName, context)
                        : CreateGetEntitiesNextPageRequest(nextLink, resourceGroupName, workspaceName, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        internal HttpMessage CreateGetEntitiesRequest(string resourceGroupName, string workspaceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/entities", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetEntityRequest(string resourceGroupName, string workspaceName, string entityId, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/entities/", false);
            uri.AppendPath(entityId, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateExpandRequest(string resourceGroupName, string workspaceName, string entityId, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/entities/", false);
            uri.AppendPath(entityId, true);
            uri.AppendPath("/expand", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateQueriesRequest(string resourceGroupName, string workspaceName, string entityId, string kind, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/entities/", false);
            uri.AppendPath(entityId, true);
            uri.AppendPath("/queries", false);
            uri.AppendQuery("kind", kind, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetInsightsRequest(string resourceGroupName, string workspaceName, string entityId, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/entities/", false);
            uri.AppendPath(entityId, true);
            uri.AppendPath("/getInsights", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateGetEntitiesNextPageRequest(string nextLink, string resourceGroupName, string workspaceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
    }
}
