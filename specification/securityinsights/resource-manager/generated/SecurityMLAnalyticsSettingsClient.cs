// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace SecurityInsights
{
    /// <summary> The SecurityMLAnalyticsSettings service client. </summary>
    public partial class SecurityMLAnalyticsSettingsClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential;
        private static readonly string[] AuthorizationScopes0 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential0;
        private static readonly string[] AuthorizationScopes1 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential1;
        private static readonly string[] AuthorizationScopes2 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential2;
        private static readonly string[] AuthorizationScopes3 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential3;
        private static readonly string[] AuthorizationScopes4 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential4;
        private static readonly string[] AuthorizationScopes5 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential5;
        private static readonly string[] AuthorizationScopes6 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential6;
        private static readonly string[] AuthorizationScopes7 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential7;
        private static readonly string[] AuthorizationScopes8 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential8;
        private static readonly string[] AuthorizationScopes9 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential9;
        private static readonly string[] AuthorizationScopes10 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential10;
        private static readonly string[] AuthorizationScopes11 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential11;
        private static readonly string[] AuthorizationScopes12 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential12;
        private static readonly string[] AuthorizationScopes13 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential13;
        private static readonly string[] AuthorizationScopes14 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential14;
        private static readonly string[] AuthorizationScopes15 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential15;
        private static readonly string[] AuthorizationScopes16 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential16;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;
        private readonly string _apiVersion;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient for mocking. </summary>
        protected SecurityMLAnalyticsSettingsClient()
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of SecurityMLAnalyticsSettingsClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public SecurityMLAnalyticsSettingsClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Gets the Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="settingsResourceName"> Security ML Analytics Settings resource name. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// <details><summary>AnomalySecurityMLAnalyticsSettings</summary>Schema for <c>AnomalySecurityMLAnalyticsSettings</c>:
        /// <code>{
        ///   kind: Anomaly, # Required. The kind of security ML Analytics Settings
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     description: string, # Optional. The description of the SecurityMLAnalyticsSettings.
        ///     displayName: string, # Required. The display name for settings created by this SecurityMLAnalyticsSettings.
        ///     enabled: boolean, # Required. Determines whether this settings is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this SecurityMLAnalyticsSettings has been modified.
        ///     requiredDataConnectors: [
        ///       {
        ///         connectorId: string, # Optional. The connector id that provides the following data types
        ///         dataTypes: [string], # Optional. The data types used by the security ml analytics settings
        ///       }
        ///     ], # Optional. The required data sources for this SecurityMLAnalyticsSettings
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the SecurityMLAnalyticsSettings
        ///     techniques: [string], # Optional. The techniques of the SecurityMLAnalyticsSettings
        ///     anomalyVersion: string, # Required. The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        ///     customizableObservations: AnyObject, # Optional. The customizable observations of the AnomalySecurityMLAnalyticsSettings.
        ///     frequency: AnomalySecurityMLAnalyticsSettingsPropertiesFrequency, # Required. The frequency that this SecurityMLAnalyticsSettings will be run.
        ///     settingsStatus: &quot;Production&quot; | &quot;Flighting&quot;, # Required. The anomaly SecurityMLAnalyticsSettings status
        ///     isDefaultSettings: boolean, # Required. Determines whether this anomaly security ml analytics settings is a default settings
        ///     anomalySettingsVersion: number, # Optional. The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.
        ///     settingsDefinitionId: AnomalySecurityMLAnalyticsSettingsPropertiesSettingsDefinitionId, # Optional. The anomaly settings definition Id
        ///   }, # Optional. Anomaly Security ML Analytics Settings properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetSecurityMLAnalyticsSettingAsync(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(settingsResourceName, nameof(settingsResourceName));

            using var scope = ClientDiagnostics.CreateScope("SecurityMLAnalyticsSettingsClient.GetSecurityMLAnalyticsSetting");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetSecurityMLAnalyticsSettingRequest(resourceGroupName, workspaceName, settingsResourceName, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets the Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="settingsResourceName"> Security ML Analytics Settings resource name. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// <details><summary>AnomalySecurityMLAnalyticsSettings</summary>Schema for <c>AnomalySecurityMLAnalyticsSettings</c>:
        /// <code>{
        ///   kind: Anomaly, # Required. The kind of security ML Analytics Settings
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     description: string, # Optional. The description of the SecurityMLAnalyticsSettings.
        ///     displayName: string, # Required. The display name for settings created by this SecurityMLAnalyticsSettings.
        ///     enabled: boolean, # Required. Determines whether this settings is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this SecurityMLAnalyticsSettings has been modified.
        ///     requiredDataConnectors: [
        ///       {
        ///         connectorId: string, # Optional. The connector id that provides the following data types
        ///         dataTypes: [string], # Optional. The data types used by the security ml analytics settings
        ///       }
        ///     ], # Optional. The required data sources for this SecurityMLAnalyticsSettings
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the SecurityMLAnalyticsSettings
        ///     techniques: [string], # Optional. The techniques of the SecurityMLAnalyticsSettings
        ///     anomalyVersion: string, # Required. The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        ///     customizableObservations: AnyObject, # Optional. The customizable observations of the AnomalySecurityMLAnalyticsSettings.
        ///     frequency: AnomalySecurityMLAnalyticsSettingsPropertiesFrequency, # Required. The frequency that this SecurityMLAnalyticsSettings will be run.
        ///     settingsStatus: &quot;Production&quot; | &quot;Flighting&quot;, # Required. The anomaly SecurityMLAnalyticsSettings status
        ///     isDefaultSettings: boolean, # Required. Determines whether this anomaly security ml analytics settings is a default settings
        ///     anomalySettingsVersion: number, # Optional. The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.
        ///     settingsDefinitionId: AnomalySecurityMLAnalyticsSettingsPropertiesSettingsDefinitionId, # Optional. The anomaly settings definition Id
        ///   }, # Optional. Anomaly Security ML Analytics Settings properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response GetSecurityMLAnalyticsSetting(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(settingsResourceName, nameof(settingsResourceName));

            using var scope = ClientDiagnostics.CreateScope("SecurityMLAnalyticsSettingsClient.GetSecurityMLAnalyticsSetting");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetSecurityMLAnalyticsSettingRequest(resourceGroupName, workspaceName, settingsResourceName, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Creates or updates the Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="settingsResourceName"> Security ML Analytics Settings resource name. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="settingsResourceName"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// <details><summary>AnomalySecurityMLAnalyticsSettings</summary>Schema for <c>AnomalySecurityMLAnalyticsSettings</c>:
        /// <code>{
        ///   kind: Anomaly, # Required. The kind of security ML Analytics Settings
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     description: string, # Optional. The description of the SecurityMLAnalyticsSettings.
        ///     displayName: string, # Required. The display name for settings created by this SecurityMLAnalyticsSettings.
        ///     enabled: boolean, # Required. Determines whether this settings is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this SecurityMLAnalyticsSettings has been modified.
        ///     requiredDataConnectors: [
        ///       {
        ///         connectorId: string, # Optional. The connector id that provides the following data types
        ///         dataTypes: [string], # Optional. The data types used by the security ml analytics settings
        ///       }
        ///     ], # Optional. The required data sources for this SecurityMLAnalyticsSettings
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the SecurityMLAnalyticsSettings
        ///     techniques: [string], # Optional. The techniques of the SecurityMLAnalyticsSettings
        ///     anomalyVersion: string, # Required. The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        ///     customizableObservations: AnyObject, # Optional. The customizable observations of the AnomalySecurityMLAnalyticsSettings.
        ///     frequency: AnomalySecurityMLAnalyticsSettingsPropertiesFrequency, # Required. The frequency that this SecurityMLAnalyticsSettings will be run.
        ///     settingsStatus: &quot;Production&quot; | &quot;Flighting&quot;, # Required. The anomaly SecurityMLAnalyticsSettings status
        ///     isDefaultSettings: boolean, # Required. Determines whether this anomaly security ml analytics settings is a default settings
        ///     anomalySettingsVersion: number, # Optional. The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.
        ///     settingsDefinitionId: AnomalySecurityMLAnalyticsSettingsPropertiesSettingsDefinitionId, # Optional. The anomaly settings definition Id
        ///   }, # Optional. Anomaly Security ML Analytics Settings properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>AnomalySecurityMLAnalyticsSettings</summary>Schema for <c>AnomalySecurityMLAnalyticsSettings</c>:
        /// <code>{
        ///   kind: Anomaly, # Required. The kind of security ML Analytics Settings
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     description: string, # Optional. The description of the SecurityMLAnalyticsSettings.
        ///     displayName: string, # Required. The display name for settings created by this SecurityMLAnalyticsSettings.
        ///     enabled: boolean, # Required. Determines whether this settings is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this SecurityMLAnalyticsSettings has been modified.
        ///     requiredDataConnectors: [
        ///       {
        ///         connectorId: string, # Optional. The connector id that provides the following data types
        ///         dataTypes: [string], # Optional. The data types used by the security ml analytics settings
        ///       }
        ///     ], # Optional. The required data sources for this SecurityMLAnalyticsSettings
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the SecurityMLAnalyticsSettings
        ///     techniques: [string], # Optional. The techniques of the SecurityMLAnalyticsSettings
        ///     anomalyVersion: string, # Required. The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        ///     customizableObservations: AnyObject, # Optional. The customizable observations of the AnomalySecurityMLAnalyticsSettings.
        ///     frequency: AnomalySecurityMLAnalyticsSettingsPropertiesFrequency, # Required. The frequency that this SecurityMLAnalyticsSettings will be run.
        ///     settingsStatus: &quot;Production&quot; | &quot;Flighting&quot;, # Required. The anomaly SecurityMLAnalyticsSettings status
        ///     isDefaultSettings: boolean, # Required. Determines whether this anomaly security ml analytics settings is a default settings
        ///     anomalySettingsVersion: number, # Optional. The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.
        ///     settingsDefinitionId: AnomalySecurityMLAnalyticsSettingsPropertiesSettingsDefinitionId, # Optional. The anomaly settings definition Id
        ///   }, # Optional. Anomaly Security ML Analytics Settings properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateOrUpdateAsync(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(settingsResourceName, nameof(settingsResourceName));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("SecurityMLAnalyticsSettingsClient.CreateOrUpdate");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateRequest(resourceGroupName, workspaceName, settingsResourceName, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Creates or updates the Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="settingsResourceName"> Security ML Analytics Settings resource name. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="settingsResourceName"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// <details><summary>AnomalySecurityMLAnalyticsSettings</summary>Schema for <c>AnomalySecurityMLAnalyticsSettings</c>:
        /// <code>{
        ///   kind: Anomaly, # Required. The kind of security ML Analytics Settings
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     description: string, # Optional. The description of the SecurityMLAnalyticsSettings.
        ///     displayName: string, # Required. The display name for settings created by this SecurityMLAnalyticsSettings.
        ///     enabled: boolean, # Required. Determines whether this settings is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this SecurityMLAnalyticsSettings has been modified.
        ///     requiredDataConnectors: [
        ///       {
        ///         connectorId: string, # Optional. The connector id that provides the following data types
        ///         dataTypes: [string], # Optional. The data types used by the security ml analytics settings
        ///       }
        ///     ], # Optional. The required data sources for this SecurityMLAnalyticsSettings
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the SecurityMLAnalyticsSettings
        ///     techniques: [string], # Optional. The techniques of the SecurityMLAnalyticsSettings
        ///     anomalyVersion: string, # Required. The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        ///     customizableObservations: AnyObject, # Optional. The customizable observations of the AnomalySecurityMLAnalyticsSettings.
        ///     frequency: AnomalySecurityMLAnalyticsSettingsPropertiesFrequency, # Required. The frequency that this SecurityMLAnalyticsSettings will be run.
        ///     settingsStatus: &quot;Production&quot; | &quot;Flighting&quot;, # Required. The anomaly SecurityMLAnalyticsSettings status
        ///     isDefaultSettings: boolean, # Required. Determines whether this anomaly security ml analytics settings is a default settings
        ///     anomalySettingsVersion: number, # Optional. The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.
        ///     settingsDefinitionId: AnomalySecurityMLAnalyticsSettingsPropertiesSettingsDefinitionId, # Optional. The anomaly settings definition Id
        ///   }, # Optional. Anomaly Security ML Analytics Settings properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// Response Body:
        /// 
        /// <details><summary>AnomalySecurityMLAnalyticsSettings</summary>Schema for <c>AnomalySecurityMLAnalyticsSettings</c>:
        /// <code>{
        ///   kind: Anomaly, # Required. The kind of security ML Analytics Settings
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     description: string, # Optional. The description of the SecurityMLAnalyticsSettings.
        ///     displayName: string, # Required. The display name for settings created by this SecurityMLAnalyticsSettings.
        ///     enabled: boolean, # Required. Determines whether this settings is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this SecurityMLAnalyticsSettings has been modified.
        ///     requiredDataConnectors: [
        ///       {
        ///         connectorId: string, # Optional. The connector id that provides the following data types
        ///         dataTypes: [string], # Optional. The data types used by the security ml analytics settings
        ///       }
        ///     ], # Optional. The required data sources for this SecurityMLAnalyticsSettings
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the SecurityMLAnalyticsSettings
        ///     techniques: [string], # Optional. The techniques of the SecurityMLAnalyticsSettings
        ///     anomalyVersion: string, # Required. The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        ///     customizableObservations: AnyObject, # Optional. The customizable observations of the AnomalySecurityMLAnalyticsSettings.
        ///     frequency: AnomalySecurityMLAnalyticsSettingsPropertiesFrequency, # Required. The frequency that this SecurityMLAnalyticsSettings will be run.
        ///     settingsStatus: &quot;Production&quot; | &quot;Flighting&quot;, # Required. The anomaly SecurityMLAnalyticsSettings status
        ///     isDefaultSettings: boolean, # Required. Determines whether this anomaly security ml analytics settings is a default settings
        ///     anomalySettingsVersion: number, # Optional. The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.
        ///     settingsDefinitionId: AnomalySecurityMLAnalyticsSettingsPropertiesSettingsDefinitionId, # Optional. The anomaly settings definition Id
        ///   }, # Optional. Anomaly Security ML Analytics Settings properties
        /// }
        /// </code>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response CreateOrUpdate(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(settingsResourceName, nameof(settingsResourceName));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("SecurityMLAnalyticsSettingsClient.CreateOrUpdate");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateRequest(resourceGroupName, workspaceName, settingsResourceName, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Delete the Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="settingsResourceName"> Security ML Analytics Settings resource name. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        public virtual async Task<Response> DeleteAsync(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(settingsResourceName, nameof(settingsResourceName));

            using var scope = ClientDiagnostics.CreateScope("SecurityMLAnalyticsSettingsClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(resourceGroupName, workspaceName, settingsResourceName, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Delete the Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="settingsResourceName"> Security ML Analytics Settings resource name. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="settingsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        public virtual Response Delete(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(settingsResourceName, nameof(settingsResourceName));

            using var scope = ClientDiagnostics.CreateScope("SecurityMLAnalyticsSettingsClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(resourceGroupName, workspaceName, settingsResourceName, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets all Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="AsyncPageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>SecurityMLAnalyticsSettingsListValue</c>:
        /// <code>{
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;Anomaly&quot;, # Required. The kind of security ML Analytics Settings
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> GetSecurityMLAnalyticsSettingsAsync(string resourceGroupName, string workspaceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));

            return GetSecurityMLAnalyticsSettingsImplementationAsync("SecurityMLAnalyticsSettingsClient.GetSecurityMLAnalyticsSettings", resourceGroupName, workspaceName, context);
        }

        private AsyncPageable<BinaryData> GetSecurityMLAnalyticsSettingsImplementationAsync(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetSecurityMLAnalyticsSettingsRequest(resourceGroupName, workspaceName, context)
                        : CreateGetSecurityMLAnalyticsSettingsNextPageRequest(nextLink, resourceGroupName, workspaceName, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> Gets all Security ML Analytics Settings. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="Pageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>SecurityMLAnalyticsSettingsListValue</c>:
        /// <code>{
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;Anomaly&quot;, # Required. The kind of security ML Analytics Settings
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> GetSecurityMLAnalyticsSettings(string resourceGroupName, string workspaceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));

            return GetSecurityMLAnalyticsSettingsImplementation("SecurityMLAnalyticsSettingsClient.GetSecurityMLAnalyticsSettings", resourceGroupName, workspaceName, context);
        }

        private Pageable<BinaryData> GetSecurityMLAnalyticsSettingsImplementation(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetSecurityMLAnalyticsSettingsRequest(resourceGroupName, workspaceName, context)
                        : CreateGetSecurityMLAnalyticsSettingsNextPageRequest(nextLink, resourceGroupName, workspaceName, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        internal HttpMessage CreateGetSecurityMLAnalyticsSettingsRequest(string resourceGroupName, string workspaceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetSecurityMLAnalyticsSettingRequest(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings/", false);
            uri.AppendPath(settingsResourceName, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateCreateOrUpdateRequest(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200201);
            var request = message.Request;
            request.Method = RequestMethod.Put;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings/", false);
            uri.AppendPath(settingsResourceName, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateDeleteRequest(string resourceGroupName, string workspaceName, string settingsResourceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200204);
            var request = message.Request;
            request.Method = RequestMethod.Delete;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings/", false);
            uri.AppendPath(settingsResourceName, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetSecurityMLAnalyticsSettingsNextPageRequest(string nextLink, string resourceGroupName, string workspaceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
        private static ResponseClassifier _responseClassifier200201;
        private static ResponseClassifier ResponseClassifier200201 => _responseClassifier200201 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 201 });
        private static ResponseClassifier _responseClassifier200204;
        private static ResponseClassifier ResponseClassifier200204 => _responseClassifier200204 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 204 });
    }
}
