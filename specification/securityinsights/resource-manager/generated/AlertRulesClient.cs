// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace SecurityInsights
{
    /// <summary> The AlertRules service client. </summary>
    public partial class AlertRulesClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential;
        private static readonly string[] AuthorizationScopes0 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential0;
        private static readonly string[] AuthorizationScopes1 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential1;
        private static readonly string[] AuthorizationScopes2 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential2;
        private static readonly string[] AuthorizationScopes3 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential3;
        private static readonly string[] AuthorizationScopes4 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential4;
        private static readonly string[] AuthorizationScopes5 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential5;
        private static readonly string[] AuthorizationScopes6 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential6;
        private static readonly string[] AuthorizationScopes7 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential7;
        private static readonly string[] AuthorizationScopes8 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential8;
        private static readonly string[] AuthorizationScopes9 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential9;
        private static readonly string[] AuthorizationScopes10 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential10;
        private static readonly string[] AuthorizationScopes11 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential11;
        private static readonly string[] AuthorizationScopes12 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential12;
        private static readonly string[] AuthorizationScopes13 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential13;
        private static readonly string[] AuthorizationScopes14 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential14;
        private static readonly string[] AuthorizationScopes15 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential15;
        private static readonly string[] AuthorizationScopes16 = new string[] { "user_impersonation" };
        private readonly TokenCredential _tokenCredential16;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;
        private readonly string _apiVersion;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of AlertRulesClient for mocking. </summary>
        protected AlertRulesClient()
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> or <paramref name="credential"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential) : this(subscriptionId, credential, new Uri("https://management.azure.com"), new SecurityInsightsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Initializes a new instance of AlertRulesClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/>, <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="subscriptionId"/> is an empty string, and was expected to be non-empty. </exception>
        public AlertRulesClient(string subscriptionId, TokenCredential credential, Uri endpoint, SecurityInsightsClientOptions options)
        {
            Argument.AssertNotNullOrEmpty(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SecurityInsightsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential16 = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential16, AuthorizationScopes16) }, new ResponseClassifier());
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
            _apiVersion = options.Version;
        }

        /// <summary> Gets the alert rule. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="ruleId"> Alert rule ID. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>MLBehaviorAnalyticsAlertRule</summary>Schema for <c>MLBehaviorAnalyticsAlertRule</c>:
        /// <code>{
        ///   kind: MLBehaviorAnalytics, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. MLBehaviorAnalytics alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 5 more JSON objects</summary><details><summary>FusionAlertRule</summary>Schema for <c>FusionAlertRule</c>:
        /// <code>{
        ///   kind: Fusion, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     sourceSettings: [
        ///       {
        ///         enabled: boolean, # Required. Determines whether this source signal is enabled or disabled in Fusion detection.
        ///         sourceName: string, # Required. Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
        ///         sourceSubTypes: [
        ///           {
        ///             enabled: boolean, # Required. Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
        ///             sourceSubTypeName: string, # Required. The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
        ///             sourceSubTypeDisplayName: string, # Optional. The display name of source subtype under a source signal consumed in Fusion detection.
        ///             severityFilters: {
        ///               isSupported: boolean, # Optional. Determines whether this source subtype supports severity configuration or not.
        ///               filters: [
        ///                 {
        ///                   severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The Severity for a given source subtype consumed in Fusion detection.
        ///                   enabled: boolean, # Required. Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
        ///                 }
        ///               ], # Optional. Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
        ///             }, # Required. Severity configuration for a source subtype consumed in fusion detection.
        ///           }
        ///         ], # Optional. Configuration for all source subtypes under this source signal consumed in fusion detection.
        ///       }
        ///     ], # Optional. Configuration for all supported source signals in fusion detection.
        ///     scenarioExclusionPatterns: [
        ///       {
        ///         exclusionPattern: string, # Required. Scenario exclusion pattern.
        ///         dateAddedInUTC: string, # Required. DateTime when scenario exclusion pattern is added in UTC.
        ///       }
        ///     ], # Optional. Configuration to exclude scenarios in fusion detection.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Fusion alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ThreatIntelligenceAlertRule</summary>Schema for <c>ThreatIntelligenceAlertRule</c>:
        /// <code>{
        ///   kind: ThreatIntelligence, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Threat Intelligence alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MicrosoftSecurityIncidentCreationAlertRule</summary>Schema for <c>MicrosoftSecurityIncidentCreationAlertRule</c>:
        /// <code>{
        ///   kind: MicrosoftSecurityIncidentCreation, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     displayNamesFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will be generated
        ///     displayNamesExcludeFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will not be generated
        ///     productFilter: &quot;Microsoft Cloud App Security&quot; | &quot;Azure Security Center&quot; | &quot;Azure Advanced Threat Protection&quot; | &quot;Azure Active Directory Identity Protection&quot; | &quot;Azure Security Center for IoT&quot; | &quot;Office 365 Advanced Threat Protection&quot; | &quot;Microsoft Defender Advanced Threat Protection&quot;, # Required. The alerts&apos; productName on which the cases will be generated
        ///     severitiesFilter: [&quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;], # Optional. the alerts&apos; severities on which the cases will be generated
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///   }, # Optional. MicrosoftSecurityIncidentCreation rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ScheduledAlertRule</summary>Schema for <c>ScheduledAlertRule</c>:
        /// <code>{
        ///   kind: Scheduled, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     query: string, # Optional. The query that creates alerts for this rule.
        ///     queryFrequency: ScheduledAlertRuleCommonPropertiesQueryFrequency, # Optional. The frequency (in ISO 8601 duration format) for this alert rule to run.
        ///     queryPeriod: ScheduledAlertRuleCommonPropertiesQueryPeriod, # Optional. The period (in ISO 8601 duration format) that this alert rule looks at.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     triggerOperator: TriggerOperator, # Optional. The operation against the threshold that triggers alert rule.
        ///     triggerThreshold: number, # Optional. The threshold triggers this alert rule.
        ///     eventGroupingSettings: {
        ///       aggregationKind: &quot;SingleAlert&quot; | &quot;AlertPerResult&quot;, # Optional. The event grouping aggregation kinds
        ///     }, # Optional. The event grouping settings.
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: ScheduledAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///   }, # Optional. Scheduled alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>NrtAlertRule</summary>Schema for <c>NrtAlertRule</c>:
        /// <code>{
        ///   kind: NRT, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     query: string, # Required. The query that creates alerts for this rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: NrtAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The severity for alerts created by this alert rule.
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///   }, # Optional. NRT alert rule properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetAlertRuleAsync(string resourceGroupName, string workspaceName, string ruleId, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(ruleId, nameof(ruleId));

            using var scope = ClientDiagnostics.CreateScope("AlertRulesClient.GetAlertRule");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetAlertRuleRequest(resourceGroupName, workspaceName, ruleId, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets the alert rule. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="ruleId"> Alert rule ID. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>MLBehaviorAnalyticsAlertRule</summary>Schema for <c>MLBehaviorAnalyticsAlertRule</c>:
        /// <code>{
        ///   kind: MLBehaviorAnalytics, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. MLBehaviorAnalytics alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 5 more JSON objects</summary><details><summary>FusionAlertRule</summary>Schema for <c>FusionAlertRule</c>:
        /// <code>{
        ///   kind: Fusion, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     sourceSettings: [
        ///       {
        ///         enabled: boolean, # Required. Determines whether this source signal is enabled or disabled in Fusion detection.
        ///         sourceName: string, # Required. Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
        ///         sourceSubTypes: [
        ///           {
        ///             enabled: boolean, # Required. Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
        ///             sourceSubTypeName: string, # Required. The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
        ///             sourceSubTypeDisplayName: string, # Optional. The display name of source subtype under a source signal consumed in Fusion detection.
        ///             severityFilters: {
        ///               isSupported: boolean, # Optional. Determines whether this source subtype supports severity configuration or not.
        ///               filters: [
        ///                 {
        ///                   severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The Severity for a given source subtype consumed in Fusion detection.
        ///                   enabled: boolean, # Required. Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
        ///                 }
        ///               ], # Optional. Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
        ///             }, # Required. Severity configuration for a source subtype consumed in fusion detection.
        ///           }
        ///         ], # Optional. Configuration for all source subtypes under this source signal consumed in fusion detection.
        ///       }
        ///     ], # Optional. Configuration for all supported source signals in fusion detection.
        ///     scenarioExclusionPatterns: [
        ///       {
        ///         exclusionPattern: string, # Required. Scenario exclusion pattern.
        ///         dateAddedInUTC: string, # Required. DateTime when scenario exclusion pattern is added in UTC.
        ///       }
        ///     ], # Optional. Configuration to exclude scenarios in fusion detection.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Fusion alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ThreatIntelligenceAlertRule</summary>Schema for <c>ThreatIntelligenceAlertRule</c>:
        /// <code>{
        ///   kind: ThreatIntelligence, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Threat Intelligence alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MicrosoftSecurityIncidentCreationAlertRule</summary>Schema for <c>MicrosoftSecurityIncidentCreationAlertRule</c>:
        /// <code>{
        ///   kind: MicrosoftSecurityIncidentCreation, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     displayNamesFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will be generated
        ///     displayNamesExcludeFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will not be generated
        ///     productFilter: &quot;Microsoft Cloud App Security&quot; | &quot;Azure Security Center&quot; | &quot;Azure Advanced Threat Protection&quot; | &quot;Azure Active Directory Identity Protection&quot; | &quot;Azure Security Center for IoT&quot; | &quot;Office 365 Advanced Threat Protection&quot; | &quot;Microsoft Defender Advanced Threat Protection&quot;, # Required. The alerts&apos; productName on which the cases will be generated
        ///     severitiesFilter: [&quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;], # Optional. the alerts&apos; severities on which the cases will be generated
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///   }, # Optional. MicrosoftSecurityIncidentCreation rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ScheduledAlertRule</summary>Schema for <c>ScheduledAlertRule</c>:
        /// <code>{
        ///   kind: Scheduled, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     query: string, # Optional. The query that creates alerts for this rule.
        ///     queryFrequency: ScheduledAlertRuleCommonPropertiesQueryFrequency, # Optional. The frequency (in ISO 8601 duration format) for this alert rule to run.
        ///     queryPeriod: ScheduledAlertRuleCommonPropertiesQueryPeriod, # Optional. The period (in ISO 8601 duration format) that this alert rule looks at.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     triggerOperator: TriggerOperator, # Optional. The operation against the threshold that triggers alert rule.
        ///     triggerThreshold: number, # Optional. The threshold triggers this alert rule.
        ///     eventGroupingSettings: {
        ///       aggregationKind: &quot;SingleAlert&quot; | &quot;AlertPerResult&quot;, # Optional. The event grouping aggregation kinds
        ///     }, # Optional. The event grouping settings.
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: ScheduledAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///   }, # Optional. Scheduled alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>NrtAlertRule</summary>Schema for <c>NrtAlertRule</c>:
        /// <code>{
        ///   kind: NRT, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     query: string, # Required. The query that creates alerts for this rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: NrtAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The severity for alerts created by this alert rule.
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///   }, # Optional. NRT alert rule properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response GetAlertRule(string resourceGroupName, string workspaceName, string ruleId, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(ruleId, nameof(ruleId));

            using var scope = ClientDiagnostics.CreateScope("AlertRulesClient.GetAlertRule");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetAlertRuleRequest(resourceGroupName, workspaceName, ruleId, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Creates or updates the alert rule. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="ruleId"> Alert rule ID. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="ruleId"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>MLBehaviorAnalyticsAlertRule</summary>Schema for <c>MLBehaviorAnalyticsAlertRule</c>:
        /// <code>{
        ///   kind: MLBehaviorAnalytics, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. MLBehaviorAnalytics alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 5 more JSON objects</summary><details><summary>FusionAlertRule</summary>Schema for <c>FusionAlertRule</c>:
        /// <code>{
        ///   kind: Fusion, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     sourceSettings: [
        ///       {
        ///         enabled: boolean, # Required. Determines whether this source signal is enabled or disabled in Fusion detection.
        ///         sourceName: string, # Required. Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
        ///         sourceSubTypes: [
        ///           {
        ///             enabled: boolean, # Required. Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
        ///             sourceSubTypeName: string, # Required. The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
        ///             sourceSubTypeDisplayName: string, # Optional. The display name of source subtype under a source signal consumed in Fusion detection.
        ///             severityFilters: {
        ///               isSupported: boolean, # Optional. Determines whether this source subtype supports severity configuration or not.
        ///               filters: [
        ///                 {
        ///                   severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The Severity for a given source subtype consumed in Fusion detection.
        ///                   enabled: boolean, # Required. Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
        ///                 }
        ///               ], # Optional. Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
        ///             }, # Required. Severity configuration for a source subtype consumed in fusion detection.
        ///           }
        ///         ], # Optional. Configuration for all source subtypes under this source signal consumed in fusion detection.
        ///       }
        ///     ], # Optional. Configuration for all supported source signals in fusion detection.
        ///     scenarioExclusionPatterns: [
        ///       {
        ///         exclusionPattern: string, # Required. Scenario exclusion pattern.
        ///         dateAddedInUTC: string, # Required. DateTime when scenario exclusion pattern is added in UTC.
        ///       }
        ///     ], # Optional. Configuration to exclude scenarios in fusion detection.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Fusion alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ThreatIntelligenceAlertRule</summary>Schema for <c>ThreatIntelligenceAlertRule</c>:
        /// <code>{
        ///   kind: ThreatIntelligence, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Threat Intelligence alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MicrosoftSecurityIncidentCreationAlertRule</summary>Schema for <c>MicrosoftSecurityIncidentCreationAlertRule</c>:
        /// <code>{
        ///   kind: MicrosoftSecurityIncidentCreation, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     displayNamesFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will be generated
        ///     displayNamesExcludeFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will not be generated
        ///     productFilter: &quot;Microsoft Cloud App Security&quot; | &quot;Azure Security Center&quot; | &quot;Azure Advanced Threat Protection&quot; | &quot;Azure Active Directory Identity Protection&quot; | &quot;Azure Security Center for IoT&quot; | &quot;Office 365 Advanced Threat Protection&quot; | &quot;Microsoft Defender Advanced Threat Protection&quot;, # Required. The alerts&apos; productName on which the cases will be generated
        ///     severitiesFilter: [&quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;], # Optional. the alerts&apos; severities on which the cases will be generated
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///   }, # Optional. MicrosoftSecurityIncidentCreation rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ScheduledAlertRule</summary>Schema for <c>ScheduledAlertRule</c>:
        /// <code>{
        ///   kind: Scheduled, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     query: string, # Optional. The query that creates alerts for this rule.
        ///     queryFrequency: ScheduledAlertRuleCommonPropertiesQueryFrequency, # Optional. The frequency (in ISO 8601 duration format) for this alert rule to run.
        ///     queryPeriod: ScheduledAlertRuleCommonPropertiesQueryPeriod, # Optional. The period (in ISO 8601 duration format) that this alert rule looks at.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     triggerOperator: TriggerOperator, # Optional. The operation against the threshold that triggers alert rule.
        ///     triggerThreshold: number, # Optional. The threshold triggers this alert rule.
        ///     eventGroupingSettings: {
        ///       aggregationKind: &quot;SingleAlert&quot; | &quot;AlertPerResult&quot;, # Optional. The event grouping aggregation kinds
        ///     }, # Optional. The event grouping settings.
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: ScheduledAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///   }, # Optional. Scheduled alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>NrtAlertRule</summary>Schema for <c>NrtAlertRule</c>:
        /// <code>{
        ///   kind: NRT, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     query: string, # Required. The query that creates alerts for this rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: NrtAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The severity for alerts created by this alert rule.
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///   }, # Optional. NRT alert rule properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>MLBehaviorAnalyticsAlertRule</summary>Schema for <c>MLBehaviorAnalyticsAlertRule</c>:
        /// <code>{
        ///   kind: MLBehaviorAnalytics, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. MLBehaviorAnalytics alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 5 more JSON objects</summary><details><summary>FusionAlertRule</summary>Schema for <c>FusionAlertRule</c>:
        /// <code>{
        ///   kind: Fusion, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     sourceSettings: [
        ///       {
        ///         enabled: boolean, # Required. Determines whether this source signal is enabled or disabled in Fusion detection.
        ///         sourceName: string, # Required. Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
        ///         sourceSubTypes: [
        ///           {
        ///             enabled: boolean, # Required. Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
        ///             sourceSubTypeName: string, # Required. The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
        ///             sourceSubTypeDisplayName: string, # Optional. The display name of source subtype under a source signal consumed in Fusion detection.
        ///             severityFilters: {
        ///               isSupported: boolean, # Optional. Determines whether this source subtype supports severity configuration or not.
        ///               filters: [
        ///                 {
        ///                   severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The Severity for a given source subtype consumed in Fusion detection.
        ///                   enabled: boolean, # Required. Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
        ///                 }
        ///               ], # Optional. Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
        ///             }, # Required. Severity configuration for a source subtype consumed in fusion detection.
        ///           }
        ///         ], # Optional. Configuration for all source subtypes under this source signal consumed in fusion detection.
        ///       }
        ///     ], # Optional. Configuration for all supported source signals in fusion detection.
        ///     scenarioExclusionPatterns: [
        ///       {
        ///         exclusionPattern: string, # Required. Scenario exclusion pattern.
        ///         dateAddedInUTC: string, # Required. DateTime when scenario exclusion pattern is added in UTC.
        ///       }
        ///     ], # Optional. Configuration to exclude scenarios in fusion detection.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Fusion alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ThreatIntelligenceAlertRule</summary>Schema for <c>ThreatIntelligenceAlertRule</c>:
        /// <code>{
        ///   kind: ThreatIntelligence, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Threat Intelligence alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MicrosoftSecurityIncidentCreationAlertRule</summary>Schema for <c>MicrosoftSecurityIncidentCreationAlertRule</c>:
        /// <code>{
        ///   kind: MicrosoftSecurityIncidentCreation, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     displayNamesFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will be generated
        ///     displayNamesExcludeFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will not be generated
        ///     productFilter: &quot;Microsoft Cloud App Security&quot; | &quot;Azure Security Center&quot; | &quot;Azure Advanced Threat Protection&quot; | &quot;Azure Active Directory Identity Protection&quot; | &quot;Azure Security Center for IoT&quot; | &quot;Office 365 Advanced Threat Protection&quot; | &quot;Microsoft Defender Advanced Threat Protection&quot;, # Required. The alerts&apos; productName on which the cases will be generated
        ///     severitiesFilter: [&quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;], # Optional. the alerts&apos; severities on which the cases will be generated
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///   }, # Optional. MicrosoftSecurityIncidentCreation rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ScheduledAlertRule</summary>Schema for <c>ScheduledAlertRule</c>:
        /// <code>{
        ///   kind: Scheduled, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     query: string, # Optional. The query that creates alerts for this rule.
        ///     queryFrequency: ScheduledAlertRuleCommonPropertiesQueryFrequency, # Optional. The frequency (in ISO 8601 duration format) for this alert rule to run.
        ///     queryPeriod: ScheduledAlertRuleCommonPropertiesQueryPeriod, # Optional. The period (in ISO 8601 duration format) that this alert rule looks at.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     triggerOperator: TriggerOperator, # Optional. The operation against the threshold that triggers alert rule.
        ///     triggerThreshold: number, # Optional. The threshold triggers this alert rule.
        ///     eventGroupingSettings: {
        ///       aggregationKind: &quot;SingleAlert&quot; | &quot;AlertPerResult&quot;, # Optional. The event grouping aggregation kinds
        ///     }, # Optional. The event grouping settings.
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: ScheduledAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///   }, # Optional. Scheduled alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>NrtAlertRule</summary>Schema for <c>NrtAlertRule</c>:
        /// <code>{
        ///   kind: NRT, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     query: string, # Required. The query that creates alerts for this rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: NrtAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The severity for alerts created by this alert rule.
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///   }, # Optional. NRT alert rule properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateOrUpdateAsync(string resourceGroupName, string workspaceName, string ruleId, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(ruleId, nameof(ruleId));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("AlertRulesClient.CreateOrUpdate");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateRequest(resourceGroupName, workspaceName, ruleId, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Creates or updates the alert rule. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="ruleId"> Alert rule ID. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/>, <paramref name="ruleId"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>MLBehaviorAnalyticsAlertRule</summary>Schema for <c>MLBehaviorAnalyticsAlertRule</c>:
        /// <code>{
        ///   kind: MLBehaviorAnalytics, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. MLBehaviorAnalytics alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 5 more JSON objects</summary><details><summary>FusionAlertRule</summary>Schema for <c>FusionAlertRule</c>:
        /// <code>{
        ///   kind: Fusion, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     sourceSettings: [
        ///       {
        ///         enabled: boolean, # Required. Determines whether this source signal is enabled or disabled in Fusion detection.
        ///         sourceName: string, # Required. Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
        ///         sourceSubTypes: [
        ///           {
        ///             enabled: boolean, # Required. Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
        ///             sourceSubTypeName: string, # Required. The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
        ///             sourceSubTypeDisplayName: string, # Optional. The display name of source subtype under a source signal consumed in Fusion detection.
        ///             severityFilters: {
        ///               isSupported: boolean, # Optional. Determines whether this source subtype supports severity configuration or not.
        ///               filters: [
        ///                 {
        ///                   severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The Severity for a given source subtype consumed in Fusion detection.
        ///                   enabled: boolean, # Required. Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
        ///                 }
        ///               ], # Optional. Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
        ///             }, # Required. Severity configuration for a source subtype consumed in fusion detection.
        ///           }
        ///         ], # Optional. Configuration for all source subtypes under this source signal consumed in fusion detection.
        ///       }
        ///     ], # Optional. Configuration for all supported source signals in fusion detection.
        ///     scenarioExclusionPatterns: [
        ///       {
        ///         exclusionPattern: string, # Required. Scenario exclusion pattern.
        ///         dateAddedInUTC: string, # Required. DateTime when scenario exclusion pattern is added in UTC.
        ///       }
        ///     ], # Optional. Configuration to exclude scenarios in fusion detection.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Fusion alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ThreatIntelligenceAlertRule</summary>Schema for <c>ThreatIntelligenceAlertRule</c>:
        /// <code>{
        ///   kind: ThreatIntelligence, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Threat Intelligence alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MicrosoftSecurityIncidentCreationAlertRule</summary>Schema for <c>MicrosoftSecurityIncidentCreationAlertRule</c>:
        /// <code>{
        ///   kind: MicrosoftSecurityIncidentCreation, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     displayNamesFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will be generated
        ///     displayNamesExcludeFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will not be generated
        ///     productFilter: &quot;Microsoft Cloud App Security&quot; | &quot;Azure Security Center&quot; | &quot;Azure Advanced Threat Protection&quot; | &quot;Azure Active Directory Identity Protection&quot; | &quot;Azure Security Center for IoT&quot; | &quot;Office 365 Advanced Threat Protection&quot; | &quot;Microsoft Defender Advanced Threat Protection&quot;, # Required. The alerts&apos; productName on which the cases will be generated
        ///     severitiesFilter: [&quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;], # Optional. the alerts&apos; severities on which the cases will be generated
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///   }, # Optional. MicrosoftSecurityIncidentCreation rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ScheduledAlertRule</summary>Schema for <c>ScheduledAlertRule</c>:
        /// <code>{
        ///   kind: Scheduled, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     query: string, # Optional. The query that creates alerts for this rule.
        ///     queryFrequency: ScheduledAlertRuleCommonPropertiesQueryFrequency, # Optional. The frequency (in ISO 8601 duration format) for this alert rule to run.
        ///     queryPeriod: ScheduledAlertRuleCommonPropertiesQueryPeriod, # Optional. The period (in ISO 8601 duration format) that this alert rule looks at.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     triggerOperator: TriggerOperator, # Optional. The operation against the threshold that triggers alert rule.
        ///     triggerThreshold: number, # Optional. The threshold triggers this alert rule.
        ///     eventGroupingSettings: {
        ///       aggregationKind: &quot;SingleAlert&quot; | &quot;AlertPerResult&quot;, # Optional. The event grouping aggregation kinds
        ///     }, # Optional. The event grouping settings.
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: ScheduledAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///   }, # Optional. Scheduled alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>NrtAlertRule</summary>Schema for <c>NrtAlertRule</c>:
        /// <code>{
        ///   kind: NRT, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     query: string, # Required. The query that creates alerts for this rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: NrtAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The severity for alerts created by this alert rule.
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///   }, # Optional. NRT alert rule properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>MLBehaviorAnalyticsAlertRule</summary>Schema for <c>MLBehaviorAnalyticsAlertRule</c>:
        /// <code>{
        ///   kind: MLBehaviorAnalytics, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. MLBehaviorAnalytics alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 5 more JSON objects</summary><details><summary>FusionAlertRule</summary>Schema for <c>FusionAlertRule</c>:
        /// <code>{
        ///   kind: Fusion, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     sourceSettings: [
        ///       {
        ///         enabled: boolean, # Required. Determines whether this source signal is enabled or disabled in Fusion detection.
        ///         sourceName: string, # Required. Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
        ///         sourceSubTypes: [
        ///           {
        ///             enabled: boolean, # Required. Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
        ///             sourceSubTypeName: string, # Required. The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
        ///             sourceSubTypeDisplayName: string, # Optional. The display name of source subtype under a source signal consumed in Fusion detection.
        ///             severityFilters: {
        ///               isSupported: boolean, # Optional. Determines whether this source subtype supports severity configuration or not.
        ///               filters: [
        ///                 {
        ///                   severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The Severity for a given source subtype consumed in Fusion detection.
        ///                   enabled: boolean, # Required. Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
        ///                 }
        ///               ], # Optional. Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
        ///             }, # Required. Severity configuration for a source subtype consumed in fusion detection.
        ///           }
        ///         ], # Optional. Configuration for all source subtypes under this source signal consumed in fusion detection.
        ///       }
        ///     ], # Optional. Configuration for all supported source signals in fusion detection.
        ///     scenarioExclusionPatterns: [
        ///       {
        ///         exclusionPattern: string, # Required. Scenario exclusion pattern.
        ///         dateAddedInUTC: string, # Required. DateTime when scenario exclusion pattern is added in UTC.
        ///       }
        ///     ], # Optional. Configuration to exclude scenarios in fusion detection.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Fusion alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ThreatIntelligenceAlertRule</summary>Schema for <c>ThreatIntelligenceAlertRule</c>:
        /// <code>{
        ///   kind: ThreatIntelligence, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Required. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Optional. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///   }, # Optional. Threat Intelligence alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>MicrosoftSecurityIncidentCreationAlertRule</summary>Schema for <c>MicrosoftSecurityIncidentCreationAlertRule</c>:
        /// <code>{
        ///   kind: MicrosoftSecurityIncidentCreation, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     displayNamesFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will be generated
        ///     displayNamesExcludeFilter: [string], # Optional. the alerts&apos; displayNames on which the cases will not be generated
        ///     productFilter: &quot;Microsoft Cloud App Security&quot; | &quot;Azure Security Center&quot; | &quot;Azure Advanced Threat Protection&quot; | &quot;Azure Active Directory Identity Protection&quot; | &quot;Azure Security Center for IoT&quot; | &quot;Office 365 Advanced Threat Protection&quot; | &quot;Microsoft Defender Advanced Threat Protection&quot;, # Required. The alerts&apos; productName on which the cases will be generated
        ///     severitiesFilter: [&quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;], # Optional. the alerts&apos; severities on which the cases will be generated
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert has been modified.
        ///   }, # Optional. MicrosoftSecurityIncidentCreation rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>ScheduledAlertRule</summary>Schema for <c>ScheduledAlertRule</c>:
        /// <code>{
        ///   kind: Scheduled, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     query: string, # Optional. The query that creates alerts for this rule.
        ///     queryFrequency: ScheduledAlertRuleCommonPropertiesQueryFrequency, # Optional. The frequency (in ISO 8601 duration format) for this alert rule to run.
        ///     queryPeriod: ScheduledAlertRuleCommonPropertiesQueryPeriod, # Optional. The period (in ISO 8601 duration format) that this alert rule looks at.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Optional. The severity for alerts created by this alert rule.
        ///     triggerOperator: TriggerOperator, # Optional. The operation against the threshold that triggers alert rule.
        ///     triggerThreshold: number, # Optional. The threshold triggers this alert rule.
        ///     eventGroupingSettings: {
        ///       aggregationKind: &quot;SingleAlert&quot; | &quot;AlertPerResult&quot;, # Optional. The event grouping aggregation kinds
        ///     }, # Optional. The event grouping settings.
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: ScheduledAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///   }, # Optional. Scheduled alert rule properties
        /// }
        /// </code>
        /// </details>
        /// <details><summary>NrtAlertRule</summary>Schema for <c>NrtAlertRule</c>:
        /// <code>{
        ///   kind: NRT, # Required. The kind of the alert rule
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   properties: {
        ///     alertRuleTemplateName: string, # Optional. The Name of the alert rule template used to create this rule.
        ///     templateVersion: string, # Optional. The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;
        ///     description: string, # Optional. The description of the alert rule.
        ///     query: string, # Required. The query that creates alerts for this rule.
        ///     tactics: [&quot;Reconnaissance&quot; | &quot;ResourceDevelopment&quot; | &quot;InitialAccess&quot; | &quot;Execution&quot; | &quot;Persistence&quot; | &quot;PrivilegeEscalation&quot; | &quot;DefenseEvasion&quot; | &quot;CredentialAccess&quot; | &quot;Discovery&quot; | &quot;LateralMovement&quot; | &quot;Collection&quot; | &quot;Exfiltration&quot; | &quot;CommandAndControl&quot; | &quot;Impact&quot; | &quot;PreAttack&quot; | &quot;ImpairProcessControl&quot; | &quot;InhibitResponseFunction&quot;], # Optional. The tactics of the alert rule
        ///     techniques: [string], # Optional. The techniques of the alert rule
        ///     displayName: string, # Required. The display name for alerts created by this alert rule.
        ///     enabled: boolean, # Required. Determines whether this alert rule is enabled or disabled.
        ///     lastModifiedUtc: string (ISO 8601 Format), # Optional. The last time that this alert rule has been modified.
        ///     suppressionDuration: NrtAlertRulePropertiesSuppressionDuration, # Required. The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
        ///     suppressionEnabled: boolean, # Required. Determines whether the suppression for this alert rule is enabled or disabled.
        ///     severity: &quot;High&quot; | &quot;Medium&quot; | &quot;Low&quot; | &quot;Informational&quot;, # Required. The severity for alerts created by this alert rule.
        ///     incidentConfiguration: {
        ///       createIncident: boolean, # Required. Create incidents from alerts triggered by this analytics rule
        ///       groupingConfiguration: {
        ///         enabled: boolean, # Required. Grouping enabled
        ///         reopenClosedIncident: boolean, # Required. Re-open closed matching incidents
        ///         lookbackDuration: GroupingConfigurationLookbackDuration, # Required. Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
        ///         matchingMethod: &quot;AllEntities&quot; | &quot;AnyAlert&quot; | &quot;Selected&quot;, # Required. Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
        ///         groupByEntities: [&quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;], # Optional. A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
        ///         groupByAlertDetails: [&quot;DisplayName&quot; | &quot;Severity&quot;], # Optional. A list of alert details to group by (when matchingMethod is Selected)
        ///         groupByCustomDetails: [string], # Optional. A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        ///       }, # Optional. Set how the alerts that are triggered by this analytics rule, are grouped into incidents
        ///     }, # Optional. The settings of the incidents that created from alerts triggered by this analytics rule
        ///     customDetails: Dictionary&lt;string, string&gt;, # Optional. Dictionary of string key-value pairs of columns to be attached to the alert
        ///     entityMappings: [
        ///       {
        ///         entityType: &quot;Account&quot; | &quot;Host&quot; | &quot;IP&quot; | &quot;Malware&quot; | &quot;File&quot; | &quot;Process&quot; | &quot;CloudApplication&quot; | &quot;DNS&quot; | &quot;AzureResource&quot; | &quot;FileHash&quot; | &quot;RegistryKey&quot; | &quot;RegistryValue&quot; | &quot;SecurityGroup&quot; | &quot;URL&quot; | &quot;Mailbox&quot; | &quot;MailCluster&quot; | &quot;MailMessage&quot; | &quot;SubmissionMail&quot;, # Optional. The V3 type of the mapped entity
        ///         fieldMappings: [
        ///           {
        ///             identifier: string, # Optional. the V3 identifier of the entity
        ///             columnName: string, # Optional. the column name to be mapped to the identifier
        ///           }
        ///         ], # Optional. array of field mappings for the given entity mapping
        ///       }
        ///     ], # Optional. Array of the entity mappings of the alert rule
        ///     alertDetailsOverride: {
        ///       alertDisplayNameFormat: string, # Optional. the format containing columns name(s) to override the alert name
        ///       alertDescriptionFormat: string, # Optional. the format containing columns name(s) to override the alert description
        ///       alertTacticsColumnName: string, # Optional. the column name to take the alert tactics from
        ///       alertSeverityColumnName: string, # Optional. the column name to take the alert severity from
        ///     }, # Optional. The alert details override settings
        ///   }, # Optional. NRT alert rule properties
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response CreateOrUpdate(string resourceGroupName, string workspaceName, string ruleId, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(ruleId, nameof(ruleId));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("AlertRulesClient.CreateOrUpdate");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateRequest(resourceGroupName, workspaceName, ruleId, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Delete the alert rule. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="ruleId"> Alert rule ID. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        public virtual async Task<Response> DeleteAsync(string resourceGroupName, string workspaceName, string ruleId, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(ruleId, nameof(ruleId));

            using var scope = ClientDiagnostics.CreateScope("AlertRulesClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(resourceGroupName, workspaceName, ruleId, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Delete the alert rule. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="ruleId"> Alert rule ID. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="ruleId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. </returns>
        public virtual Response Delete(string resourceGroupName, string workspaceName, string ruleId, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));
            Argument.AssertNotNullOrEmpty(ruleId, nameof(ruleId));

            using var scope = ClientDiagnostics.CreateScope("AlertRulesClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(resourceGroupName, workspaceName, ruleId, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets all alert rules. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="AsyncPageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>AlertRulesListValue</c>:
        /// <code>{
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;Scheduled&quot; | &quot;MicrosoftSecurityIncidentCreation&quot; | &quot;Fusion&quot; | &quot;MLBehaviorAnalytics&quot; | &quot;ThreatIntelligence&quot; | &quot;NRT&quot;, # Required. The kind of the alert rule
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> GetAlertRulesAsync(string resourceGroupName, string workspaceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));

            return GetAlertRulesImplementationAsync("AlertRulesClient.GetAlertRules", resourceGroupName, workspaceName, context);
        }

        private AsyncPageable<BinaryData> GetAlertRulesImplementationAsync(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetAlertRulesRequest(resourceGroupName, workspaceName, context)
                        : CreateGetAlertRulesNextPageRequest(nextLink, resourceGroupName, workspaceName, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> Gets all alert rules. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="resourceGroupName"/> or <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="Pageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>AlertRulesListValue</c>:
        /// <code>{
        ///   etag: string, # Optional. Etag of the azure resource
        ///   id: string, # Optional. Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        ///   name: string, # Optional. The name of the resource
        ///   type: string, # Optional. The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;
        ///   systemData: {
        ///     createdBy: string, # Optional. The identity that created the resource.
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that created the resource.
        ///     createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
        ///     lastModifiedBy: string, # Optional. The identity that last modified the resource.
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. The type of identity that last modified the resource.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of resource last modification (UTC)
        ///   }, # Optional. Azure Resource Manager metadata containing createdBy and modifiedBy information.
        ///   kind: &quot;Scheduled&quot; | &quot;MicrosoftSecurityIncidentCreation&quot; | &quot;Fusion&quot; | &quot;MLBehaviorAnalytics&quot; | &quot;ThreatIntelligence&quot; | &quot;NRT&quot;, # Required. The kind of the alert rule
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> GetAlertRules(string resourceGroupName, string workspaceName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNullOrEmpty(workspaceName, nameof(workspaceName));

            return GetAlertRulesImplementation("AlertRulesClient.GetAlertRules", resourceGroupName, workspaceName, context);
        }

        private Pageable<BinaryData> GetAlertRulesImplementation(string diagnosticsScopeName, string resourceGroupName, string workspaceName, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetAlertRulesRequest(resourceGroupName, workspaceName, context)
                        : CreateGetAlertRulesNextPageRequest(nextLink, resourceGroupName, workspaceName, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        internal HttpMessage CreateGetAlertRulesRequest(string resourceGroupName, string workspaceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/alertRules", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetAlertRuleRequest(string resourceGroupName, string workspaceName, string ruleId, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/alertRules/", false);
            uri.AppendPath(ruleId, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateCreateOrUpdateRequest(string resourceGroupName, string workspaceName, string ruleId, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200201);
            var request = message.Request;
            request.Method = RequestMethod.Put;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/alertRules/", false);
            uri.AppendPath(ruleId, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateDeleteRequest(string resourceGroupName, string workspaceName, string ruleId, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200204);
            var request = message.Request;
            request.Method = RequestMethod.Delete;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/subscriptions/", false);
            uri.AppendPath(_subscriptionId, true);
            uri.AppendPath("/resourceGroups/", false);
            uri.AppendPath(resourceGroupName, true);
            uri.AppendPath("/providers/Microsoft.OperationalInsights/workspaces/", false);
            uri.AppendPath(workspaceName, true);
            uri.AppendPath("/providers/Microsoft.SecurityInsights/alertRules/", false);
            uri.AppendPath(ruleId, true);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetAlertRulesNextPageRequest(string nextLink, string resourceGroupName, string workspaceName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
        private static ResponseClassifier _responseClassifier200201;
        private static ResponseClassifier ResponseClassifier200201 => _responseClassifier200201 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 201 });
        private static ResponseClassifier _responseClassifier200204;
        private static ResponseClassifier ResponseClassifier200204 => _responseClassifier200204 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 204 });
    }
}
