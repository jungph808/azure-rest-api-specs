# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import sys
from typing import Any, AsyncIterable, Callable, Dict, IO, Optional, TypeVar, Union, cast, overload
from urllib.parse import parse_qs, urljoin, urlparse

from azure.core.async_paging import AsyncItemPaged, AsyncList
from azure.core.exceptions import ClientAuthenticationError, HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import AsyncHttpResponse
from azure.core.rest import HttpRequest
from azure.core.tracing.decorator import distributed_trace
from azure.core.tracing.decorator_async import distributed_trace_async
from azure.core.utils import case_insensitive_dict
from azure.mgmt.core.exceptions import ARMErrorFormat

from ...operations._operations import build_actions_create_or_update_request, build_actions_delete_request, build_actions_get_request, build_actions_list_by_alert_rule_request, build_alert_rule_templates_get_request, build_alert_rule_templates_list_request, build_alert_rules_create_or_update_request, build_alert_rules_delete_request, build_alert_rules_get_request, build_alert_rules_list_request, build_automation_rules_create_or_update_request, build_automation_rules_delete_request, build_automation_rules_get_request, build_automation_rules_list_request, build_bookmark_expand_request, build_bookmark_relations_create_or_update_request, build_bookmark_relations_delete_request, build_bookmark_relations_get_request, build_bookmark_relations_list_request, build_bookmarks_create_or_update_request, build_bookmarks_delete_request, build_bookmarks_get_request, build_bookmarks_list_request, build_data_connectors_check_requirements_post_request, build_data_connectors_connect_request, build_data_connectors_create_or_update_request, build_data_connectors_delete_request, build_data_connectors_disconnect_request, build_data_connectors_get_request, build_data_connectors_list_request, build_domain_whois_get_request, build_entities_expand_request, build_entities_get_insights_request, build_entities_get_request, build_entities_get_timeline_list_request, build_entities_list_request, build_entities_queries_request, build_entities_relations_list_request, build_entity_queries_create_or_update_request, build_entity_queries_delete_request, build_entity_queries_get_request, build_entity_queries_list_request, build_entity_query_templates_get_request, build_entity_query_templates_list_request, build_entity_relations_get_relation_request, build_incident_comments_create_or_update_request, build_incident_comments_delete_request, build_incident_comments_get_request, build_incident_comments_list_request, build_incident_relations_create_or_update_request, build_incident_relations_delete_request, build_incident_relations_get_request, build_incident_relations_list_request, build_incidents_create_or_update_request, build_incidents_create_team_request, build_incidents_delete_request, build_incidents_get_request, build_incidents_list_alerts_request, build_incidents_list_bookmarks_request, build_incidents_list_entities_request, build_incidents_list_request, build_incidents_run_playbook_request, build_ip_geodata_get_request, build_metadata_create_request, build_metadata_delete_request, build_metadata_get_request, build_metadata_list_request, build_metadata_update_request, build_office_consents_delete_request, build_office_consents_get_request, build_office_consents_list_request, build_operations_list_request, build_product_settings_delete_request, build_product_settings_get_request, build_product_settings_list_request, build_product_settings_update_request, build_security_ml_analytics_settings_create_or_update_request, build_security_ml_analytics_settings_delete_request, build_security_ml_analytics_settings_get_request, build_security_ml_analytics_settings_list_request, build_sentinel_onboarding_states_create_request, build_sentinel_onboarding_states_delete_request, build_sentinel_onboarding_states_get_request, build_sentinel_onboarding_states_list_request, build_source_control_list_repositories_request, build_source_controls_create_request, build_source_controls_delete_request, build_source_controls_get_request, build_source_controls_list_request, build_threat_intelligence_indicator_append_tags_request, build_threat_intelligence_indicator_create_indicator_request, build_threat_intelligence_indicator_create_request, build_threat_intelligence_indicator_delete_request, build_threat_intelligence_indicator_get_request, build_threat_intelligence_indicator_metrics_list_request, build_threat_intelligence_indicator_query_indicators_request, build_threat_intelligence_indicator_replace_tags_request, build_threat_intelligence_indicators_list_request, build_watchlist_items_create_or_update_request, build_watchlist_items_delete_request, build_watchlist_items_get_request, build_watchlist_items_list_request, build_watchlists_create_or_update_request, build_watchlists_delete_request, build_watchlists_get_request, build_watchlists_list_request
if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
JSON = MutableMapping[str, Any] # pylint: disable=unsubscriptable-object
T = TypeVar('T')
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, AsyncHttpResponse], T, Dict[str, Any]], Any]]

class AlertRulesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`alert_rules` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all alert rules.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == alert_rule
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_alert_rules_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets the alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == alert_rule
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_alert_rules_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            rule_id=rule_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        alert_rule: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param alert_rule: The alert rule. Required.
        :type alert_rule: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                alert_rule = alert_rule
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == alert_rule
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        alert_rule: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param alert_rule: The alert rule. Required.
        :type alert_rule: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == alert_rule
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        alert_rule: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param alert_rule: The alert rule. Is either a model type or a IO type. Required.
        :type alert_rule: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "scenarioExclusionPatterns": [
                            {
                                "dateAddedInUTC": "str",  # DateTime when scenario
                                  exclusion pattern is added in UTC. Required.
                                "exclusionPattern": "str"  # Scenario exclusion
                                  pattern. Required.
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "enabled": bool,  # Determines whether this source
                                  signal is enabled or disabled in Fusion detection. Required.
                                "sourceName": "str",  # Name of the Fusion source
                                  signal. Refer to Fusion alert rule template for supported values.
                                  Required.
                                "sourceSubTypes": [
                                    {
                                        "enabled": bool,  # Determines
                                          whether this source subtype under source signal is enabled or
                                          disabled in Fusion detection. Required.
                                        "severityFilters": {
                                            "filters": [
                                                {
                                                    "enabled":
                                                      bool,  # Determines whether this severity is
                                                      enabled or disabled for this source subtype
                                                      consumed in Fusion detection. Required.
                                                    "severity":
                                                      "str"  # The Severity for a given source subtype
                                                      consumed in Fusion detection. Required. Known
                                                      values are: "High", "Medium", "Low", and
                                                      "Informational".
                                                }
                                            ],
                                            "isSupported": bool  #
                                              Optional. Determines whether this source subtype supports
                                              severity configuration or not.
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          Name of the source subtype under a given source signal in
                                          Fusion detection. Refer to Fusion alert rule template for
                                          supported values. Required.
                                    }
                                ]
                            }
                        ],
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # The Name of the alert rule
                          template used to create this rule. Required.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # Optional. The display name for alerts
                          created by this alert rule.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert has been modified.
                        "productFilter": "str",  # The alerts' productName on which the cases
                          will be generated. Required. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # The query that creates alerts for this rule.
                          Required.
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str"  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRuleTemplateName": "str",  # Optional. The Name of the alert
                          rule template used to create this rule.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule.
                        "displayName": "str",  # The display name for alerts created by this
                          alert rule. Required.
                        "enabled": bool,  # Determines whether this alert rule is enabled or
                          disabled. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "incidentConfiguration": {
                            "createIncident": bool,  # Create incidents from alerts
                              triggered by this analytics rule. Required.
                            "groupingConfiguration": {
                                "enabled": bool,  # Grouping enabled. Required.
                                "groupByAlertDetails": [
                                    "str"  # Optional. A list of alert details to
                                      group by (when matchingMethod is Selected).
                                ],
                                "groupByCustomDetails": [
                                    "str"  # Optional. A list of custom details
                                      keys to group by (when matchingMethod is Selected). Only keys
                                      defined in the current alert rule may be used.
                                ],
                                "groupByEntities": [
                                    "str"  # Optional. A list of entity types to
                                      group by (when matchingMethod is Selected). Only entities defined
                                      in the current alert rule may be used.
                                ],
                                "lookbackDuration": "1 day, 0:00:00",  # Limit the
                                  group to alerts created within the lookback duration (in ISO 8601
                                  duration format). Required.
                                "matchingMethod": "str",  # Grouping matching method.
                                  When method is Selected at least one of groupByEntities,
                                  groupByAlertDetails, groupByCustomDetails must be provided and not
                                  empty. Required. Known values are: "AllEntities", "AnyAlert", and
                                  "Selected".
                                "reopenClosedIncident": bool  # Re-open closed
                                  matching incidents. Required.
                            }
                        },
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this alert rule has been modified.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "suppressionDuration": "1 day, 0:00:00",  # The suppression (in ISO
                          8601 duration format) to wait since last time this alert rule been triggered.
                          Required.
                        "suppressionEnabled": bool,  # Determines whether the suppression for
                          this alert rule is enabled or disabled. Required.
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "templateVersion": "str",  # Optional. The version of the alert rule
                          template used to create this rule - in format <a.b.c>, where all are numbers,
                          for example 0 <1.0.2>.
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0  # Optional. The threshold triggers this alert
                          rule.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == alert_rule
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(alert_rule, (IO, bytes)):
            _content = alert_rule
        else:
            _json = alert_rule

        request = build_alert_rules_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            rule_id=rule_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_alert_rules_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            rule_id=rule_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class ActionsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`actions` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list_by_alert_rule(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all actions of alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "logicAppResourceId": "str",  # Logic App Resource Id,
                          /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
                          Required.
                        "workflowId": "str"  # Optional. The name of the logic app's
                          workflow.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_actions_list_by_alert_rule_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    rule_id=rule_id,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        action_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets the action of alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param action_id: Action ID. Required.
        :type action_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "logicAppResourceId": "str",  # Logic App Resource Id,
                          /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
                          Required.
                        "workflowId": "str"  # Optional. The name of the logic app's
                          workflow.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_actions_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            rule_id=rule_id,
            action_id=action_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        action_id: str,
        action: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the action of alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param action_id: Action ID. Required.
        :type action_id: str
        :param action: The action. Required.
        :type action: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                action = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "logicAppResourceId": "str",  # Logic App Resource Id,
                          /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
                          Required.
                        "triggerUri": "str"  # Logic App Callback URL for this specific
                          workflow. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "logicAppResourceId": "str",  # Logic App Resource Id,
                          /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
                          Required.
                        "workflowId": "str"  # Optional. The name of the logic app's
                          workflow.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        action_id: str,
        action: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the action of alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param action_id: Action ID. Required.
        :type action_id: str
        :param action: The action. Required.
        :type action: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "logicAppResourceId": "str",  # Logic App Resource Id,
                          /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
                          Required.
                        "workflowId": "str"  # Optional. The name of the logic app's
                          workflow.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        action_id: str,
        action: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the action of alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param action_id: Action ID. Required.
        :type action_id: str
        :param action: The action. Is either a model type or a IO type. Required.
        :type action: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "logicAppResourceId": "str",  # Logic App Resource Id,
                          /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
                          Required.
                        "workflowId": "str"  # Optional. The name of the logic app's
                          workflow.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(action, (IO, bytes)):
            _content = action
        else:
            _json = action

        request = build_actions_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            rule_id=rule_id,
            action_id=action_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        rule_id: str,
        action_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the action of alert rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param rule_id: Alert rule ID. Required.
        :type rule_id: str
        :param action_id: Action ID. Required.
        :type action_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_actions_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            rule_id=rule_id,
            action_id=action_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class AlertRuleTemplatesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`alert_rule_templates` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all alert rule templates.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == alert_rule_template
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_alert_rule_templates_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        alert_rule_template_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets the alert rule template.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param alert_rule_template_id: Alert rule template ID. Required.
        :type alert_rule_template_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Fusion":
                alert_rule_template = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Fusion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRulesCreatedByTemplateCount": 0,  # Optional. the number of
                          alert rules that were created by this template.
                        "createdDateUTC": "2020-02-20 00:00:00",  # Optional. The time that
                          this alert rule template has been added.
                        "description": "str",  # Optional. The description of the alert rule
                          template.
                        "displayName": "str",  # Optional. The display name for alert rule
                          template.
                        "lastUpdatedDateUTC": "2020-02-20 00:00:00",  # Optional. The time
                          that this alert rule template was last updated.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      alert rule template.
                                ]
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "sourceSettings": [
                            {
                                "sourceName": "str",  # The name of a source signal
                                  consumed in Fusion detection. Required.
                                "sourceSubTypes": [
                                    {
                                        "severityFilter": {
                                            "isSupported": bool,  #
                                              Determines whether severity configuration is supported
                                              for this source subtype consumed in Fusion detection.
                                              Required.
                                            "severityFilters": [
                                                "str"  # Optional.
                                                  List of all supported severities for this source
                                                  subtype consumed in Fusion detection.
                                            ]
                                        },
                                        "sourceSubTypeDisplayName": "str",  #
                                          Optional. The display name of source subtype under a source
                                          signal consumed in Fusion detection.
                                        "sourceSubTypeName": "str"  # The
                                          name of source subtype under a source signal consumed in
                                          Fusion detection. Required.
                                    }
                                ]
                            }
                        ],
                        "status": "str",  # Optional. The alert rule template status. Known
                          values are: "Installed", "Available", and "NotAvailable".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule template.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MLBehaviorAnalytics":
                alert_rule_template = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MLBehaviorAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRulesCreatedByTemplateCount": 0,  # Optional. the number of
                          alert rules that were created by this template.
                        "createdDateUTC": "2020-02-20 00:00:00",  # Optional. The time that
                          this alert rule template has been added.
                        "description": "str",  # Optional. The description of the alert rule
                          template.
                        "displayName": "str",  # Optional. The display name for alert rule
                          template.
                        "lastUpdatedDateUTC": "2020-02-20 00:00:00",  # Optional. The last
                          time that this alert rule template has been updated.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      alert rule template.
                                ]
                            }
                        ],
                        "severity": "str",  # The severity for alerts created by this alert
                          rule. Required. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "status": "str",  # Optional. The alert rule template status. Known
                          values are: "Installed", "Available", and "NotAvailable".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "MicrosoftSecurityIncidentCreation":
                alert_rule_template = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "MicrosoftSecurityIncidentCreation",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertRulesCreatedByTemplateCount": 0,  # Optional. the number of
                          alert rules that were created by this template.
                        "createdDateUTC": "2020-02-20 00:00:00",  # Optional. The time that
                          this alert rule template has been added.
                        "description": "str",  # Optional. The description of the alert rule
                          template.
                        "displayName": "str",  # Optional. The display name for alert rule
                          template.
                        "displayNamesExcludeFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will not be generated.
                        ],
                        "displayNamesFilter": [
                            "str"  # Optional. the alerts' displayNames on which the
                              cases will be generated.
                        ],
                        "lastUpdatedDateUTC": "2020-02-20 00:00:00",  # Optional. The last
                          time that this alert rule template has been updated.
                        "productFilter": "str",  # Optional. The alerts' productName on which
                          the cases will be generated. Known values are: "Microsoft Cloud App
                          Security", "Azure Security Center", "Azure Advanced Threat Protection",
                          "Azure Active Directory Identity Protection", "Azure Security Center for
                          IoT", "Office 365 Advanced Threat Protection", and "Microsoft Defender
                          Advanced Threat Protection".
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      alert rule template.
                                ]
                            }
                        ],
                        "severitiesFilter": [
                            "str"  # Optional. the alerts' severities on which the cases
                              will be generated.
                        ],
                        "status": "str"  # Optional. The alert rule template status. Known
                          values are: "Installed", "Available", and "NotAvailable".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "NRT":
                alert_rule_template = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "NRT",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRulesCreatedByTemplateCount": 0,  # Optional. the number of
                          alert rules that were created by this template.
                        "createdDateUTC": "2020-02-20 00:00:00",  # Optional. The time that
                          this alert rule template has been added.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule
                          template.
                        "displayName": "str",  # Optional. The display name for alert rule
                          template.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "lastUpdatedDateUTC": "2020-02-20 00:00:00",  # Optional. The last
                          time that this alert rule template has been updated.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      alert rule template.
                                ]
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "status": "str",  # Optional. The alert rule template status. Known
                          values are: "Installed", "Available", and "NotAvailable".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "version": "str"  # Optional. The version of this template - in
                          format <a.b.c>, where all are numbers. For example <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Scheduled":
                alert_rule_template = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Scheduled",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "alertDetailsOverride": {
                            "alertDescriptionFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert description.
                            "alertDisplayNameFormat": "str",  # Optional. the format
                              containing columns name(s) to override the alert name.
                            "alertSeverityColumnName": "str",  # Optional. the column
                              name to take the alert severity from.
                            "alertTacticsColumnName": "str"  # Optional. the column name
                              to take the alert tactics from.
                        },
                        "alertRulesCreatedByTemplateCount": 0,  # Optional. the number of
                          alert rules that were created by this template.
                        "createdDateUTC": "2020-02-20 00:00:00",  # Optional. The time that
                          this alert rule template has been added.
                        "customDetails": {
                            "str": "str"  # Optional. Dictionary of string key-value
                              pairs of columns to be attached to the alert.
                        },
                        "description": "str",  # Optional. The description of the alert rule
                          template.
                        "displayName": "str",  # Optional. The display name for alert rule
                          template.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The V3 type of the
                                  mapped entity. Known values are: "Account", "Host", "IP", "Malware",
                                  "File", "Process", "CloudApplication", "DNS", "AzureResource",
                                  "FileHash", "RegistryKey", "RegistryValue", "SecurityGroup", "URL",
                                  "Mailbox", "MailCluster", "MailMessage", and "SubmissionMail".
                                "fieldMappings": [
                                    {
                                        "columnName": "str",  # Optional. the
                                          column name to be mapped to the identifier.
                                        "identifier": "str"  # Optional. the
                                          V3 identifier of the entity.
                                    }
                                ]
                            }
                        ],
                        "eventGroupingSettings": {
                            "aggregationKind": "str"  # Optional. The event grouping
                              aggregation kinds. Known values are: "SingleAlert" and "AlertPerResult".
                        },
                        "lastUpdatedDateUTC": "2020-02-20 00:00:00",  # Optional. The time
                          that this alert rule template was last updated.
                        "query": "str",  # Optional. The query that creates alerts for this
                          rule.
                        "queryFrequency": "1 day, 0:00:00",  # Optional. The frequency (in
                          ISO 8601 duration format) for this alert rule to run.
                        "queryPeriod": "1 day, 0:00:00",  # Optional. The period (in ISO 8601
                          duration format) that this alert rule looks at.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      alert rule template.
                                ]
                            }
                        ],
                        "severity": "str",  # Optional. The severity for alerts created by
                          this alert rule. Known values are: "High", "Medium", "Low", and
                          "Informational".
                        "status": "str",  # Optional. The alert rule template status. Known
                          values are: "Installed", "Available", and "NotAvailable".
                        "tactics": [
                            "str"  # Optional. The tactics of the alert rule template.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the alert rule.
                        ],
                        "triggerOperator": "str",  # Optional. The operation against the
                          threshold that triggers alert rule. Known values are: "GreaterThan",
                          "LessThan", "Equal", and "NotEqual".
                        "triggerThreshold": 0,  # Optional. The threshold triggers this alert
                          rule.
                        "version": "str"  # Optional. The version of this template - in
                          format <a.b.c>, where all are numbers. For example <1.0.2>.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == alert_rule_template
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_alert_rule_templates_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            alert_rule_template_id=alert_rule_template_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class AutomationRulesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`automation_rules` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        automation_rule_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets the automation rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param automation_rule_id: Automation rule ID. Required.
        :type automation_rule_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "actions": [
                            automation_rule_action
                        ],
                        "createdBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          automation rule was created.
                        "displayName": "str",  # The display name of the automation rule.
                          Required.
                        "lastModifiedBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the automation rule was updated.
                        "order": 0,  # The order of execution of the automation rule.
                          Required.
                        "triggeringLogic": {
                            "conditions": [
                                automation_rule_condition
                            ],
                            "expirationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              Determines when the automation rule should automatically expire and be
                              disabled.
                            "isEnabled": bool,  # Determines whether the automation rule
                              is enabled or disabled. Required.
                            "triggersOn": "str",  # Required. "Incidents"
                            "triggersWhen": "str"  # Required. Known values are:
                              "Created" and "Updated".
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_automation_rules_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            automation_rule_id=automation_rule_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        automation_rule_id: str,
        automation_rule_to_upsert: Optional[JSON] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the automation rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param automation_rule_id: Automation rule ID. Required.
        :type automation_rule_id: str
        :param automation_rule_to_upsert: The automation rule. Default value is None.
        :type automation_rule_to_upsert: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                automation_rule_to_upsert = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "actions": [
                            automation_rule_action
                        ],
                        "createdBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          automation rule was created.
                        "displayName": "str",  # The display name of the automation rule.
                          Required.
                        "lastModifiedBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the automation rule was updated.
                        "order": 0,  # The order of execution of the automation rule.
                          Required.
                        "triggeringLogic": {
                            "conditions": [
                                automation_rule_condition
                            ],
                            "expirationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              Determines when the automation rule should automatically expire and be
                              disabled.
                            "isEnabled": bool,  # Determines whether the automation rule
                              is enabled or disabled. Required.
                            "triggersOn": "str",  # Required. "Incidents"
                            "triggersWhen": "str"  # Required. Known values are:
                              "Created" and "Updated".
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "actions": [
                            automation_rule_action
                        ],
                        "createdBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          automation rule was created.
                        "displayName": "str",  # The display name of the automation rule.
                          Required.
                        "lastModifiedBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the automation rule was updated.
                        "order": 0,  # The order of execution of the automation rule.
                          Required.
                        "triggeringLogic": {
                            "conditions": [
                                automation_rule_condition
                            ],
                            "expirationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              Determines when the automation rule should automatically expire and be
                              disabled.
                            "isEnabled": bool,  # Determines whether the automation rule
                              is enabled or disabled. Required.
                            "triggersOn": "str",  # Required. "Incidents"
                            "triggersWhen": "str"  # Required. Known values are:
                              "Created" and "Updated".
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        automation_rule_id: str,
        automation_rule_to_upsert: Optional[IO] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the automation rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param automation_rule_id: Automation rule ID. Required.
        :type automation_rule_id: str
        :param automation_rule_to_upsert: The automation rule. Default value is None.
        :type automation_rule_to_upsert: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "actions": [
                            automation_rule_action
                        ],
                        "createdBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          automation rule was created.
                        "displayName": "str",  # The display name of the automation rule.
                          Required.
                        "lastModifiedBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the automation rule was updated.
                        "order": 0,  # The order of execution of the automation rule.
                          Required.
                        "triggeringLogic": {
                            "conditions": [
                                automation_rule_condition
                            ],
                            "expirationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              Determines when the automation rule should automatically expire and be
                              disabled.
                            "isEnabled": bool,  # Determines whether the automation rule
                              is enabled or disabled. Required.
                            "triggersOn": "str",  # Required. "Incidents"
                            "triggersWhen": "str"  # Required. Known values are:
                              "Created" and "Updated".
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        automation_rule_id: str,
        automation_rule_to_upsert: Optional[Union[JSON, IO]] = None,
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the automation rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param automation_rule_id: Automation rule ID. Required.
        :type automation_rule_id: str
        :param automation_rule_to_upsert: The automation rule. Is either a model type or a IO type.
         Default value is None.
        :type automation_rule_to_upsert: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "actions": [
                            automation_rule_action
                        ],
                        "createdBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          automation rule was created.
                        "displayName": "str",  # The display name of the automation rule.
                          Required.
                        "lastModifiedBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the automation rule was updated.
                        "order": 0,  # The order of execution of the automation rule.
                          Required.
                        "triggeringLogic": {
                            "conditions": [
                                automation_rule_condition
                            ],
                            "expirationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              Determines when the automation rule should automatically expire and be
                              disabled.
                            "isEnabled": bool,  # Determines whether the automation rule
                              is enabled or disabled. Required.
                            "triggersOn": "str",  # Required. "Incidents"
                            "triggersWhen": "str"  # Required. Known values are:
                              "Created" and "Updated".
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(automation_rule_to_upsert, (IO, bytes)):
            _content = automation_rule_to_upsert
        else:
            if automation_rule_to_upsert is not None:
                _json = automation_rule_to_upsert
            else:
                _json = None

        request = build_automation_rules_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            automation_rule_id=automation_rule_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(
        self,
        resource_group_name: str,
        workspace_name: str,
        automation_rule_id: str,
        **kwargs: Any
    ) -> JSON:
        """Delete the automation rule.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param automation_rule_id: Automation rule ID. Required.
        :type automation_rule_id: str
        :return: JSON
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_automation_rules_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            automation_rule_id=automation_rule_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 204:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all automation rules.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "actions": [
                            automation_rule_action
                        ],
                        "createdBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          automation rule was created.
                        "displayName": "str",  # The display name of the automation rule.
                          Required.
                        "lastModifiedBy": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the automation rule was updated.
                        "order": 0,  # The order of execution of the automation rule.
                          Required.
                        "triggeringLogic": {
                            "conditions": [
                                automation_rule_condition
                            ],
                            "expirationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              Determines when the automation rule should automatically expire and be
                              disabled.
                            "isEnabled": bool,  # Determines whether the automation rule
                              is enabled or disabled. Required.
                            "triggersOn": "str",  # Required. "Incidents"
                            "triggersWhen": "str"  # Required. Known values are:
                              "Created" and "Updated".
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_automation_rules_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )

class IncidentsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`incidents` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @overload
    async def run_playbook(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_identifier: str,
        request_body: Optional[JSON] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Triggers playbook on a specific incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_identifier: Required.
        :type incident_identifier: str
        :param request_body: Default value is None.
        :type request_body: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                request_body = {
                    "logicAppsResourceId": "str",  # Optional.
                    "tenantId": "str"  # Optional.
                }
        """

    @overload
    async def run_playbook(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_identifier: str,
        request_body: Optional[IO] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Triggers playbook on a specific incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_identifier: Required.
        :type incident_identifier: str
        :param request_body: Default value is None.
        :type request_body: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:
        """


    @distributed_trace_async
    async def run_playbook(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_identifier: str,
        request_body: Optional[Union[JSON, IO]] = None,
        **kwargs: Any
    ) -> JSON:
        """Triggers playbook on a specific incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_identifier: Required.
        :type incident_identifier: str
        :param request_body: Is either a model type or a IO type. Default value is None.
        :type request_body: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(request_body, (IO, bytes)):
            _content = request_body
        else:
            if request_body is not None:
                _json = request_body
            else:
                _json = None

        request = build_incidents_run_playbook_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_identifier=incident_identifier,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all incidents.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "alertProductNames": [
                                "str"  # Optional. List of product names of alerts in
                                  the incident.
                            ],
                            "alertsCount": 0,  # Optional. The number of alerts in the
                              incident.
                            "bookmarksCount": 0,  # Optional. The number of bookmarks in
                              the incident.
                            "commentsCount": 0,  # Optional. The number of comments in
                              the incident.
                            "providerIncidentUrl": "str",  # Optional. The provider
                              incident url to the incident in Microsoft 365 Defender portal.
                            "tactics": [
                                "str"  # Optional. The tactics associated with
                                  incident.
                            ],
                            "techniques": [
                                "str"  # Optional. The techniques associated with
                                  incident's tactics'.
                            ]
                        },
                        "classification": "str",  # Optional. The reason the incident was
                          closed. Known values are: "Undetermined", "TruePositive", "BenignPositive",
                          and "FalsePositive".
                        "classificationComment": "str",  # Optional. Describes the reason the
                          incident was closed.
                        "classificationReason": "str",  # Optional. The classification reason
                          the incident was closed with. Known values are: "SuspiciousActivity",
                          "SuspiciousButExpected", "IncorrectAlertLogic", and "InaccurateData".
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          incident was created.
                        "description": "str",  # Optional. The description of the incident.
                        "firstActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the first activity in the incident.
                        "incidentNumber": 0,  # Optional. A sequential number.
                        "incidentUrl": "str",  # Optional. The deep-link url to the incident
                          in Azure portal.
                        "labels": [
                            {
                                "labelName": "str",  # The name of the label.
                                  Required.
                                "labelType": "str"  # Optional. The type of the
                                  label. Known values are: "User" and "AutoAssigned".
                            }
                        ],
                        "lastActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the last activity in the incident.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the incident was updated.
                        "owner": {
                            "assignedTo": "str",  # Optional. The name of the user the
                              incident is assigned to.
                            "email": "str",  # Optional. The email of the user the
                              incident is assigned to.
                            "objectId": "str",  # Optional. The object id of the user the
                              incident is assigned to.
                            "ownerType": "str",  # Optional. The type of the owner the
                              incident is assigned to. Known values are: "Unknown", "User", and
                              "Group".
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the user the incident is assigned to.
                        },
                        "providerIncidentId": "str",  # Optional. The incident ID assigned by
                          the incident provider.
                        "providerName": "str",  # Optional. The name of the source provider
                          that generated the incident.
                        "relatedAnalyticRuleIds": [
                            "str"  # Optional. List of resource ids of Analytic rules
                              related to the incident.
                        ],
                        "severity": "str",  # The severity of the incident. Required. Known
                          values are: "High", "Medium", "Low", and "Informational".
                        "status": "str",  # The status of the incident. Required. Known
                          values are: "New", "Active", and "Closed".
                        "teamInformation": {
                            "description": "str",  # Optional. The description of the
                              team.
                            "name": "str",  # Optional. The name of the team.
                            "primaryChannelUrl": "str",  # Optional. The primary channel
                              URL of the team.
                            "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              The time the team was created.
                            "teamId": "str"  # Optional. Team ID.
                        },
                        "title": "str"  # The title of the incident. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_incidents_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "alertProductNames": [
                                "str"  # Optional. List of product names of alerts in
                                  the incident.
                            ],
                            "alertsCount": 0,  # Optional. The number of alerts in the
                              incident.
                            "bookmarksCount": 0,  # Optional. The number of bookmarks in
                              the incident.
                            "commentsCount": 0,  # Optional. The number of comments in
                              the incident.
                            "providerIncidentUrl": "str",  # Optional. The provider
                              incident url to the incident in Microsoft 365 Defender portal.
                            "tactics": [
                                "str"  # Optional. The tactics associated with
                                  incident.
                            ],
                            "techniques": [
                                "str"  # Optional. The techniques associated with
                                  incident's tactics'.
                            ]
                        },
                        "classification": "str",  # Optional. The reason the incident was
                          closed. Known values are: "Undetermined", "TruePositive", "BenignPositive",
                          and "FalsePositive".
                        "classificationComment": "str",  # Optional. Describes the reason the
                          incident was closed.
                        "classificationReason": "str",  # Optional. The classification reason
                          the incident was closed with. Known values are: "SuspiciousActivity",
                          "SuspiciousButExpected", "IncorrectAlertLogic", and "InaccurateData".
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          incident was created.
                        "description": "str",  # Optional. The description of the incident.
                        "firstActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the first activity in the incident.
                        "incidentNumber": 0,  # Optional. A sequential number.
                        "incidentUrl": "str",  # Optional. The deep-link url to the incident
                          in Azure portal.
                        "labels": [
                            {
                                "labelName": "str",  # The name of the label.
                                  Required.
                                "labelType": "str"  # Optional. The type of the
                                  label. Known values are: "User" and "AutoAssigned".
                            }
                        ],
                        "lastActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the last activity in the incident.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the incident was updated.
                        "owner": {
                            "assignedTo": "str",  # Optional. The name of the user the
                              incident is assigned to.
                            "email": "str",  # Optional. The email of the user the
                              incident is assigned to.
                            "objectId": "str",  # Optional. The object id of the user the
                              incident is assigned to.
                            "ownerType": "str",  # Optional. The type of the owner the
                              incident is assigned to. Known values are: "Unknown", "User", and
                              "Group".
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the user the incident is assigned to.
                        },
                        "providerIncidentId": "str",  # Optional. The incident ID assigned by
                          the incident provider.
                        "providerName": "str",  # Optional. The name of the source provider
                          that generated the incident.
                        "relatedAnalyticRuleIds": [
                            "str"  # Optional. List of resource ids of Analytic rules
                              related to the incident.
                        ],
                        "severity": "str",  # The severity of the incident. Required. Known
                          values are: "High", "Medium", "Low", and "Informational".
                        "status": "str",  # The status of the incident. Required. Known
                          values are: "New", "Active", and "Closed".
                        "teamInformation": {
                            "description": "str",  # Optional. The description of the
                              team.
                            "name": "str",  # Optional. The name of the team.
                            "primaryChannelUrl": "str",  # Optional. The primary channel
                              URL of the team.
                            "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              The time the team was created.
                            "teamId": "str"  # Optional. Team ID.
                        },
                        "title": "str"  # The title of the incident. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_incidents_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident: The incident. Required.
        :type incident: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                incident = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "alertProductNames": [
                                "str"  # Optional. List of product names of alerts in
                                  the incident.
                            ],
                            "alertsCount": 0,  # Optional. The number of alerts in the
                              incident.
                            "bookmarksCount": 0,  # Optional. The number of bookmarks in
                              the incident.
                            "commentsCount": 0,  # Optional. The number of comments in
                              the incident.
                            "providerIncidentUrl": "str",  # Optional. The provider
                              incident url to the incident in Microsoft 365 Defender portal.
                            "tactics": [
                                "str"  # Optional. The tactics associated with
                                  incident.
                            ],
                            "techniques": [
                                "str"  # Optional. The techniques associated with
                                  incident's tactics'.
                            ]
                        },
                        "classification": "str",  # Optional. The reason the incident was
                          closed. Known values are: "Undetermined", "TruePositive", "BenignPositive",
                          and "FalsePositive".
                        "classificationComment": "str",  # Optional. Describes the reason the
                          incident was closed.
                        "classificationReason": "str",  # Optional. The classification reason
                          the incident was closed with. Known values are: "SuspiciousActivity",
                          "SuspiciousButExpected", "IncorrectAlertLogic", and "InaccurateData".
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          incident was created.
                        "description": "str",  # Optional. The description of the incident.
                        "firstActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the first activity in the incident.
                        "incidentNumber": 0,  # Optional. A sequential number.
                        "incidentUrl": "str",  # Optional. The deep-link url to the incident
                          in Azure portal.
                        "labels": [
                            {
                                "labelName": "str",  # The name of the label.
                                  Required.
                                "labelType": "str"  # Optional. The type of the
                                  label. Known values are: "User" and "AutoAssigned".
                            }
                        ],
                        "lastActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the last activity in the incident.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the incident was updated.
                        "owner": {
                            "assignedTo": "str",  # Optional. The name of the user the
                              incident is assigned to.
                            "email": "str",  # Optional. The email of the user the
                              incident is assigned to.
                            "objectId": "str",  # Optional. The object id of the user the
                              incident is assigned to.
                            "ownerType": "str",  # Optional. The type of the owner the
                              incident is assigned to. Known values are: "Unknown", "User", and
                              "Group".
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the user the incident is assigned to.
                        },
                        "providerIncidentId": "str",  # Optional. The incident ID assigned by
                          the incident provider.
                        "providerName": "str",  # Optional. The name of the source provider
                          that generated the incident.
                        "relatedAnalyticRuleIds": [
                            "str"  # Optional. List of resource ids of Analytic rules
                              related to the incident.
                        ],
                        "severity": "str",  # The severity of the incident. Required. Known
                          values are: "High", "Medium", "Low", and "Informational".
                        "status": "str",  # The status of the incident. Required. Known
                          values are: "New", "Active", and "Closed".
                        "teamInformation": {
                            "description": "str",  # Optional. The description of the
                              team.
                            "name": "str",  # Optional. The name of the team.
                            "primaryChannelUrl": "str",  # Optional. The primary channel
                              URL of the team.
                            "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              The time the team was created.
                            "teamId": "str"  # Optional. Team ID.
                        },
                        "title": "str"  # The title of the incident. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "alertProductNames": [
                                "str"  # Optional. List of product names of alerts in
                                  the incident.
                            ],
                            "alertsCount": 0,  # Optional. The number of alerts in the
                              incident.
                            "bookmarksCount": 0,  # Optional. The number of bookmarks in
                              the incident.
                            "commentsCount": 0,  # Optional. The number of comments in
                              the incident.
                            "providerIncidentUrl": "str",  # Optional. The provider
                              incident url to the incident in Microsoft 365 Defender portal.
                            "tactics": [
                                "str"  # Optional. The tactics associated with
                                  incident.
                            ],
                            "techniques": [
                                "str"  # Optional. The techniques associated with
                                  incident's tactics'.
                            ]
                        },
                        "classification": "str",  # Optional. The reason the incident was
                          closed. Known values are: "Undetermined", "TruePositive", "BenignPositive",
                          and "FalsePositive".
                        "classificationComment": "str",  # Optional. Describes the reason the
                          incident was closed.
                        "classificationReason": "str",  # Optional. The classification reason
                          the incident was closed with. Known values are: "SuspiciousActivity",
                          "SuspiciousButExpected", "IncorrectAlertLogic", and "InaccurateData".
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          incident was created.
                        "description": "str",  # Optional. The description of the incident.
                        "firstActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the first activity in the incident.
                        "incidentNumber": 0,  # Optional. A sequential number.
                        "incidentUrl": "str",  # Optional. The deep-link url to the incident
                          in Azure portal.
                        "labels": [
                            {
                                "labelName": "str",  # The name of the label.
                                  Required.
                                "labelType": "str"  # Optional. The type of the
                                  label. Known values are: "User" and "AutoAssigned".
                            }
                        ],
                        "lastActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the last activity in the incident.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the incident was updated.
                        "owner": {
                            "assignedTo": "str",  # Optional. The name of the user the
                              incident is assigned to.
                            "email": "str",  # Optional. The email of the user the
                              incident is assigned to.
                            "objectId": "str",  # Optional. The object id of the user the
                              incident is assigned to.
                            "ownerType": "str",  # Optional. The type of the owner the
                              incident is assigned to. Known values are: "Unknown", "User", and
                              "Group".
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the user the incident is assigned to.
                        },
                        "providerIncidentId": "str",  # Optional. The incident ID assigned by
                          the incident provider.
                        "providerName": "str",  # Optional. The name of the source provider
                          that generated the incident.
                        "relatedAnalyticRuleIds": [
                            "str"  # Optional. List of resource ids of Analytic rules
                              related to the incident.
                        ],
                        "severity": "str",  # The severity of the incident. Required. Known
                          values are: "High", "Medium", "Low", and "Informational".
                        "status": "str",  # The status of the incident. Required. Known
                          values are: "New", "Active", and "Closed".
                        "teamInformation": {
                            "description": "str",  # Optional. The description of the
                              team.
                            "name": "str",  # Optional. The name of the team.
                            "primaryChannelUrl": "str",  # Optional. The primary channel
                              URL of the team.
                            "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              The time the team was created.
                            "teamId": "str"  # Optional. Team ID.
                        },
                        "title": "str"  # The title of the incident. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident: The incident. Required.
        :type incident: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "alertProductNames": [
                                "str"  # Optional. List of product names of alerts in
                                  the incident.
                            ],
                            "alertsCount": 0,  # Optional. The number of alerts in the
                              incident.
                            "bookmarksCount": 0,  # Optional. The number of bookmarks in
                              the incident.
                            "commentsCount": 0,  # Optional. The number of comments in
                              the incident.
                            "providerIncidentUrl": "str",  # Optional. The provider
                              incident url to the incident in Microsoft 365 Defender portal.
                            "tactics": [
                                "str"  # Optional. The tactics associated with
                                  incident.
                            ],
                            "techniques": [
                                "str"  # Optional. The techniques associated with
                                  incident's tactics'.
                            ]
                        },
                        "classification": "str",  # Optional. The reason the incident was
                          closed. Known values are: "Undetermined", "TruePositive", "BenignPositive",
                          and "FalsePositive".
                        "classificationComment": "str",  # Optional. Describes the reason the
                          incident was closed.
                        "classificationReason": "str",  # Optional. The classification reason
                          the incident was closed with. Known values are: "SuspiciousActivity",
                          "SuspiciousButExpected", "IncorrectAlertLogic", and "InaccurateData".
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          incident was created.
                        "description": "str",  # Optional. The description of the incident.
                        "firstActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the first activity in the incident.
                        "incidentNumber": 0,  # Optional. A sequential number.
                        "incidentUrl": "str",  # Optional. The deep-link url to the incident
                          in Azure portal.
                        "labels": [
                            {
                                "labelName": "str",  # The name of the label.
                                  Required.
                                "labelType": "str"  # Optional. The type of the
                                  label. Known values are: "User" and "AutoAssigned".
                            }
                        ],
                        "lastActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the last activity in the incident.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the incident was updated.
                        "owner": {
                            "assignedTo": "str",  # Optional. The name of the user the
                              incident is assigned to.
                            "email": "str",  # Optional. The email of the user the
                              incident is assigned to.
                            "objectId": "str",  # Optional. The object id of the user the
                              incident is assigned to.
                            "ownerType": "str",  # Optional. The type of the owner the
                              incident is assigned to. Known values are: "Unknown", "User", and
                              "Group".
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the user the incident is assigned to.
                        },
                        "providerIncidentId": "str",  # Optional. The incident ID assigned by
                          the incident provider.
                        "providerName": "str",  # Optional. The name of the source provider
                          that generated the incident.
                        "relatedAnalyticRuleIds": [
                            "str"  # Optional. List of resource ids of Analytic rules
                              related to the incident.
                        ],
                        "severity": "str",  # The severity of the incident. Required. Known
                          values are: "High", "Medium", "Low", and "Informational".
                        "status": "str",  # The status of the incident. Required. Known
                          values are: "New", "Active", and "Closed".
                        "teamInformation": {
                            "description": "str",  # Optional. The description of the
                              team.
                            "name": "str",  # Optional. The name of the team.
                            "primaryChannelUrl": "str",  # Optional. The primary channel
                              URL of the team.
                            "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              The time the team was created.
                            "teamId": "str"  # Optional. Team ID.
                        },
                        "title": "str"  # The title of the incident. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident: The incident. Is either a model type or a IO type. Required.
        :type incident: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "alertProductNames": [
                                "str"  # Optional. List of product names of alerts in
                                  the incident.
                            ],
                            "alertsCount": 0,  # Optional. The number of alerts in the
                              incident.
                            "bookmarksCount": 0,  # Optional. The number of bookmarks in
                              the incident.
                            "commentsCount": 0,  # Optional. The number of comments in
                              the incident.
                            "providerIncidentUrl": "str",  # Optional. The provider
                              incident url to the incident in Microsoft 365 Defender portal.
                            "tactics": [
                                "str"  # Optional. The tactics associated with
                                  incident.
                            ],
                            "techniques": [
                                "str"  # Optional. The techniques associated with
                                  incident's tactics'.
                            ]
                        },
                        "classification": "str",  # Optional. The reason the incident was
                          closed. Known values are: "Undetermined", "TruePositive", "BenignPositive",
                          and "FalsePositive".
                        "classificationComment": "str",  # Optional. Describes the reason the
                          incident was closed.
                        "classificationReason": "str",  # Optional. The classification reason
                          the incident was closed with. Known values are: "SuspiciousActivity",
                          "SuspiciousButExpected", "IncorrectAlertLogic", and "InaccurateData".
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          incident was created.
                        "description": "str",  # Optional. The description of the incident.
                        "firstActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the first activity in the incident.
                        "incidentNumber": 0,  # Optional. A sequential number.
                        "incidentUrl": "str",  # Optional. The deep-link url to the incident
                          in Azure portal.
                        "labels": [
                            {
                                "labelName": "str",  # The name of the label.
                                  Required.
                                "labelType": "str"  # Optional. The type of the
                                  label. Known values are: "User" and "AutoAssigned".
                            }
                        ],
                        "lastActivityTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          of the last activity in the incident.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the incident was updated.
                        "owner": {
                            "assignedTo": "str",  # Optional. The name of the user the
                              incident is assigned to.
                            "email": "str",  # Optional. The email of the user the
                              incident is assigned to.
                            "objectId": "str",  # Optional. The object id of the user the
                              incident is assigned to.
                            "ownerType": "str",  # Optional. The type of the owner the
                              incident is assigned to. Known values are: "Unknown", "User", and
                              "Group".
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the user the incident is assigned to.
                        },
                        "providerIncidentId": "str",  # Optional. The incident ID assigned by
                          the incident provider.
                        "providerName": "str",  # Optional. The name of the source provider
                          that generated the incident.
                        "relatedAnalyticRuleIds": [
                            "str"  # Optional. List of resource ids of Analytic rules
                              related to the incident.
                        ],
                        "severity": "str",  # The severity of the incident. Required. Known
                          values are: "High", "Medium", "Low", and "Informational".
                        "status": "str",  # The status of the incident. Required. Known
                          values are: "New", "Active", and "Closed".
                        "teamInformation": {
                            "description": "str",  # Optional. The description of the
                              team.
                            "name": "str",  # Optional. The name of the team.
                            "primaryChannelUrl": "str",  # Optional. The primary channel
                              URL of the team.
                            "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional.
                              The time the team was created.
                            "teamId": "str"  # Optional. Team ID.
                        },
                        "title": "str"  # The title of the incident. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(incident, (IO, bytes)):
            _content = incident
        else:
            _json = incident

        request = build_incidents_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the incident.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_incidents_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def create_team(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        team_properties: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates a Microsoft team to investigate the incident by sharing information and insights
        between participants.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param team_properties: Team properties. Required.
        :type team_properties: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                team_properties = {
                    "groupIds": [
                        "str"  # Optional. List of group IDs to add their members to the
                          team.
                    ],
                    "memberIds": [
                        "str"  # Optional. List of member IDs to add to the team.
                    ],
                    "teamDescription": "str",  # Optional. The description of the team.
                    "teamName": "str"  # The name of the team. Required.
                }

                # response body for status code(s): 200
                response == {
                    "description": "str",  # Optional. The description of the team.
                    "name": "str",  # Optional. The name of the team.
                    "primaryChannelUrl": "str",  # Optional. The primary channel URL of the team.
                    "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the team
                      was created.
                    "teamId": "str"  # Optional. Team ID.
                }
        """

    @overload
    async def create_team(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        team_properties: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates a Microsoft team to investigate the incident by sharing information and insights
        between participants.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param team_properties: Team properties. Required.
        :type team_properties: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "description": "str",  # Optional. The description of the team.
                    "name": "str",  # Optional. The name of the team.
                    "primaryChannelUrl": "str",  # Optional. The primary channel URL of the team.
                    "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the team
                      was created.
                    "teamId": "str"  # Optional. Team ID.
                }
        """


    @distributed_trace_async
    async def create_team(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        team_properties: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates a Microsoft team to investigate the incident by sharing information and insights
        between participants.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param team_properties: Team properties. Is either a model type or a IO type. Required.
        :type team_properties: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "description": "str",  # Optional. The description of the team.
                    "name": "str",  # Optional. The name of the team.
                    "primaryChannelUrl": "str",  # Optional. The primary channel URL of the team.
                    "teamCreationTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the team
                      was created.
                    "teamId": "str"  # Optional. Team ID.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(team_properties, (IO, bytes)):
            _content = team_properties
        else:
            _json = team_properties

        request = build_incidents_create_team_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def list_alerts(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets all incident alerts.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "value": [
                        {
                            "id": "str",  # Optional. Fully qualified resource ID for the
                              resource. Ex -
                              /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            "kind": "SecurityAlert",
                            "name": "str",  # Optional. The name of the resource.
                            "properties": {
                                "additionalData": {
                                    "str": {}  # Optional. A bag of custom fields
                                      that should be part of the entity and will be presented to the
                                      user.
                                },
                                "alertDisplayName": "str",  # Optional. The display
                                  name of the alert.
                                "alertLink": "str",  # Optional. The uri link of the
                                  alert.
                                "alertType": "str",  # Optional. The type name of the
                                  alert.
                                "compromisedEntity": "str",  # Optional. Display name
                                  of the main entity being reported on.
                                "confidenceLevel": "str",  # Optional. The confidence
                                  level of this alert. Known values are: "Unknown", "Low", and "High".
                                "confidenceReasons": [
                                    {
                                        "reason": "str",  # Optional. The
                                          reason's description.
                                        "reasonType": "str"  # Optional. The
                                          type (category) of the reason.
                                    }
                                ],
                                "confidenceScore": 0.0,  # Optional. The confidence
                                  score of the alert.
                                "confidenceScoreStatus": "str",  # Optional. The
                                  confidence score calculation status, i.e. indicating if score
                                  calculation is pending for this alert, not applicable or final. Known
                                  values are: "NotApplicable", "InProcess", "NotFinal", and "Final".
                                "description": "str",  # Optional. Alert description.
                                "endTimeUtc": "2020-02-20 00:00:00",  # Optional. The
                                  impact end time of the alert (the time of the last event contributing
                                  to the alert).
                                "friendlyName": "str",  # Optional. The graph item
                                  display name which is a short humanly readable description of the
                                  graph item instance. This property is optional and might be system
                                  generated.
                                "intent": "str",  # Optional. Holds the alert intent
                                  stage(s) mapping for this alert. Known values are: "Unknown",
                                  "Probing", "Exploitation", "Persistence", "PrivilegeEscalation",
                                  "DefenseEvasion", "CredentialAccess", "Discovery", "LateralMovement",
                                  "Execution", "Collection", "Exfiltration", "CommandAndControl", and
                                  "Impact".
                                "processingEndTime": "2020-02-20 00:00:00",  #
                                  Optional. The time the alert was made available for consumption.
                                "productComponentName": "str",  # Optional. The name
                                  of a component inside the product which generated the alert.
                                "productName": "str",  # Optional. The name of the
                                  product which published this alert.
                                "productVersion": "str",  # Optional. The version of
                                  the product generating the alert.
                                "providerAlertId": "str",  # Optional. The identifier
                                  of the alert inside the product which generated the alert.
                                "remediationSteps": [
                                    "str"  # Optional. Manual action items to
                                      take to remediate the alert.
                                ],
                                "resourceIdentifiers": [
                                    {}  # Optional. The list of resource
                                      identifiers of the alert.
                                ],
                                "severity": "str",  # Optional. The severity of the
                                  alert. Known values are: "High", "Medium", "Low", and
                                  "Informational".
                                "startTimeUtc": "2020-02-20 00:00:00",  # Optional.
                                  The impact start time of the alert (the time of the first event
                                  contributing to the alert).
                                "status": "str",  # Optional. The lifecycle status of
                                  the alert. Known values are: "Unknown", "New", "Resolved",
                                  "Dismissed", and "InProgress".
                                "systemAlertId": "str",  # Optional. Holds the
                                  product identifier of the alert for the product.
                                "tactics": [
                                    "str"  # Optional. The tactics of the alert.
                                ],
                                "timeGenerated": "2020-02-20 00:00:00",  # Optional.
                                  The time the alert was generated.
                                "vendorName": "str"  # Optional. The name of the
                                  vendor that raise the alert.
                            },
                            "systemData": {
                                "createdAt": "2020-02-20 00:00:00",  # Optional. The
                                  timestamp of resource creation (UTC).
                                "createdBy": "str",  # Optional. The identity that
                                  created the resource.
                                "createdByType": "str",  # Optional. The type of
                                  identity that created the resource. Known values are: "User",
                                  "Application", "ManagedIdentity", and "Key".
                                "lastModifiedAt": "2020-02-20 00:00:00",  # Optional.
                                  The timestamp of resource last modification (UTC).
                                "lastModifiedBy": "str",  # Optional. The identity
                                  that last modified the resource.
                                "lastModifiedByType": "str"  # Optional. The type of
                                  identity that last modified the resource. Known values are: "User",
                                  "Application", "ManagedIdentity", and "Key".
                            },
                            "type": "str"  # Optional. The type of the resource. E.g.
                              "Microsoft.Compute/virtualMachines" or
                              "Microsoft.Storage/storageAccounts".
                        }
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_incidents_list_alerts_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def list_bookmarks(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets all incident bookmarks.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "value": [
                        {
                            "id": "str",  # Optional. Fully qualified resource ID for the
                              resource. Ex -
                              /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            "kind": "Bookmark",
                            "name": "str",  # Optional. The name of the resource.
                            "properties": {
                                "additionalData": {
                                    "str": {}  # Optional. A bag of custom fields
                                      that should be part of the entity and will be presented to the
                                      user.
                                },
                                "created": "2020-02-20 00:00:00",  # Optional. The
                                  time the bookmark was created.
                                "createdBy": {
                                    "email": "str",  # Optional. The email of the
                                      user.
                                    "name": "str",  # Optional. The name of the
                                      user.
                                    "objectId": "str"  # Optional. The object id
                                      of the user.
                                },
                                "displayName": "str",  # The display name of the
                                  bookmark. Required.
                                "eventTime": "2020-02-20 00:00:00",  # Optional. The
                                  time of the event.
                                "friendlyName": "str",  # Optional. The graph item
                                  display name which is a short humanly readable description of the
                                  graph item instance. This property is optional and might be system
                                  generated.
                                "incidentInfo": {
                                    "incidentId": "str",  # Optional. Incident
                                      Id.
                                    "relationName": "str",  # Optional. Relation
                                      Name.
                                    "severity": "str",  # Optional. The severity
                                      of the incident. Known values are: "High", "Medium", "Low", and
                                      "Informational".
                                    "title": "str"  # Optional. The title of the
                                      incident.
                                },
                                "labels": [
                                    "str"  # Optional. List of labels relevant to
                                      this bookmark.
                                ],
                                "notes": "str",  # Optional. The notes of the
                                  bookmark.
                                "query": "str",  # The query of the bookmark.
                                  Required.
                                "queryResult": "str",  # Optional. The query result
                                  of the bookmark.
                                "updated": "2020-02-20 00:00:00",  # Optional. The
                                  last time the bookmark was updated.
                                "updatedBy": {
                                    "email": "str",  # Optional. The email of the
                                      user.
                                    "name": "str",  # Optional. The name of the
                                      user.
                                    "objectId": "str"  # Optional. The object id
                                      of the user.
                                }
                            },
                            "systemData": {
                                "createdAt": "2020-02-20 00:00:00",  # Optional. The
                                  timestamp of resource creation (UTC).
                                "createdBy": "str",  # Optional. The identity that
                                  created the resource.
                                "createdByType": "str",  # Optional. The type of
                                  identity that created the resource. Known values are: "User",
                                  "Application", "ManagedIdentity", and "Key".
                                "lastModifiedAt": "2020-02-20 00:00:00",  # Optional.
                                  The timestamp of resource last modification (UTC).
                                "lastModifiedBy": "str",  # Optional. The identity
                                  that last modified the resource.
                                "lastModifiedByType": "str"  # Optional. The type of
                                  identity that last modified the resource. Known values are: "User",
                                  "Application", "ManagedIdentity", and "Key".
                            },
                            "type": "str"  # Optional. The type of the resource. E.g.
                              "Microsoft.Compute/virtualMachines" or
                              "Microsoft.Storage/storageAccounts".
                        }
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_incidents_list_bookmarks_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def list_entities(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets all incident related entities.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "entities": [
                        entity
                    ],
                    "metaData": [
                        {
                            "count": 0,  # Total number of aggregations of the given kind
                              in the incident related entities result. Required.
                            "entityKind": "str"  # The kind of the aggregated entity.
                              Required. Known values are: "Account", "Host", "File", "AzureResource",
                              "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware",
                              "Process", "RegistryKey", "RegistryValue", "SecurityGroup", "Url",
                              "IoTDevice", "SecurityAlert", "Bookmark", "MailCluster", "MailMessage",
                              "Mailbox", and "SubmissionMail".
                        }
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_incidents_list_entities_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class BookmarksOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`bookmarks` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all bookmarks.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The entity type.
                                "fieldMappings": [
                                    {
                                        "identifier": "str",  # Optional.
                                          Alert V3 identifier.
                                        "value": "str"  # Optional. The value
                                          of the identifier.
                                    }
                                ]
                            }
                        ],
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The bookmark event
                          time.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryEndTime": "2020-02-20 00:00:00",  # Optional. The end time for
                          the query.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "queryStartTime": "2020-02-20 00:00:00",  # Optional. The start time
                          for the query.
                        "tactics": [
                            "str"  # Optional. A list of relevant mitre attacks.
                        ],
                        "techniques": [
                            "str"  # Optional. A list of relevant mitre techniques.
                        ],
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_bookmarks_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The entity type.
                                "fieldMappings": [
                                    {
                                        "identifier": "str",  # Optional.
                                          Alert V3 identifier.
                                        "value": "str"  # Optional. The value
                                          of the identifier.
                                    }
                                ]
                            }
                        ],
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The bookmark event
                          time.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryEndTime": "2020-02-20 00:00:00",  # Optional. The end time for
                          the query.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "queryStartTime": "2020-02-20 00:00:00",  # Optional. The start time
                          for the query.
                        "tactics": [
                            "str"  # Optional. A list of relevant mitre attacks.
                        ],
                        "techniques": [
                            "str"  # Optional. A list of relevant mitre techniques.
                        ],
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_bookmarks_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        bookmark: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param bookmark: The bookmark. Required.
        :type bookmark: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                bookmark = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The entity type.
                                "fieldMappings": [
                                    {
                                        "identifier": "str",  # Optional.
                                          Alert V3 identifier.
                                        "value": "str"  # Optional. The value
                                          of the identifier.
                                    }
                                ]
                            }
                        ],
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The bookmark event
                          time.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryEndTime": "2020-02-20 00:00:00",  # Optional. The end time for
                          the query.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "queryStartTime": "2020-02-20 00:00:00",  # Optional. The start time
                          for the query.
                        "tactics": [
                            "str"  # Optional. A list of relevant mitre attacks.
                        ],
                        "techniques": [
                            "str"  # Optional. A list of relevant mitre techniques.
                        ],
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The entity type.
                                "fieldMappings": [
                                    {
                                        "identifier": "str",  # Optional.
                                          Alert V3 identifier.
                                        "value": "str"  # Optional. The value
                                          of the identifier.
                                    }
                                ]
                            }
                        ],
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The bookmark event
                          time.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryEndTime": "2020-02-20 00:00:00",  # Optional. The end time for
                          the query.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "queryStartTime": "2020-02-20 00:00:00",  # Optional. The start time
                          for the query.
                        "tactics": [
                            "str"  # Optional. A list of relevant mitre attacks.
                        ],
                        "techniques": [
                            "str"  # Optional. A list of relevant mitre techniques.
                        ],
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        bookmark: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param bookmark: The bookmark. Required.
        :type bookmark: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The entity type.
                                "fieldMappings": [
                                    {
                                        "identifier": "str",  # Optional.
                                          Alert V3 identifier.
                                        "value": "str"  # Optional. The value
                                          of the identifier.
                                    }
                                ]
                            }
                        ],
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The bookmark event
                          time.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryEndTime": "2020-02-20 00:00:00",  # Optional. The end time for
                          the query.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "queryStartTime": "2020-02-20 00:00:00",  # Optional. The start time
                          for the query.
                        "tactics": [
                            "str"  # Optional. A list of relevant mitre attacks.
                        ],
                        "techniques": [
                            "str"  # Optional. A list of relevant mitre techniques.
                        ],
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        bookmark: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param bookmark: The bookmark. Is either a model type or a IO type. Required.
        :type bookmark: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "entityMappings": [
                            {
                                "entityType": "str",  # Optional. The entity type.
                                "fieldMappings": [
                                    {
                                        "identifier": "str",  # Optional.
                                          Alert V3 identifier.
                                        "value": "str"  # Optional. The value
                                          of the identifier.
                                    }
                                ]
                            }
                        ],
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The bookmark event
                          time.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryEndTime": "2020-02-20 00:00:00",  # Optional. The end time for
                          the query.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "queryStartTime": "2020-02-20 00:00:00",  # Optional. The start time
                          for the query.
                        "tactics": [
                            "str"  # Optional. A list of relevant mitre attacks.
                        ],
                        "techniques": [
                            "str"  # Optional. A list of relevant mitre techniques.
                        ],
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(bookmark, (IO, bytes)):
            _content = bookmark
        else:
            _json = bookmark

        request = build_bookmarks_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_bookmarks_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class BookmarkRelationsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`bookmark_relations` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all bookmark relations.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_bookmark_relations_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    bookmark_id=bookmark_id,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        relation_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a bookmark relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_bookmark_relations_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        relation_name: str,
        relation: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates the bookmark relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :param relation: The relation model. Required.
        :type relation: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                relation = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        relation_name: str,
        relation: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates the bookmark relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :param relation: The relation model. Required.
        :type relation: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        relation_name: str,
        relation: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates the bookmark relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :param relation: The relation model. Is either a model type or a IO type. Required.
        :type relation: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(relation, (IO, bytes)):
            _content = relation
        else:
            _json = relation

        request = build_bookmark_relations_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        relation_name: str,
        **kwargs: Any
    ) -> None:
        """Delete the bookmark relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_bookmark_relations_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class BookmarkOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`bookmark` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @overload
    async def expand(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        parameters: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Expand an bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param parameters: The parameters required to execute an expand operation on the given
         bookmark. Required.
        :type parameters: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                parameters = {
                    "endTime": "2020-02-20 00:00:00",  # Optional. The end date filter, so the
                      only expansion results returned are before this date.
                    "expansionId": "str",  # Optional. The Id of the expansion to perform.
                    "startTime": "2020-02-20 00:00:00"  # Optional. The start date filter, so the
                      only expansion results returned are after this date.
                }

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "aggregationType": "str",  # Optional. The common
                                  type of the aggregation. (for e.g. entity field name).
                                "count": 0,  # Total number of aggregations of the
                                  given kind (and aggregationType if given) in the expansion result.
                                  Required.
                                "displayName": "str",  # Optional. The display name
                                  of the aggregation by type.
                                "entityKind": "str"  # The kind of the aggregated
                                  entity. Required. Known values are: "Account", "Host", "File",
                                  "AzureResource", "CloudApplication", "DnsResolution", "FileHash",
                                  "Ip", "Malware", "Process", "RegistryKey", "RegistryValue",
                                  "SecurityGroup", "Url", "IoTDevice", "SecurityAlert", "Bookmark",
                                  "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
                            }
                        ]
                    },
                    "value": {
                        "edges": [
                            {
                                "additionalData": {},  # Optional. key-value pairs
                                  for a connected entity mapping.
                                "targetEntityId": "str"  # Optional. Entity Id of the
                                  connected entity.
                            }
                        ],
                        "entities": [
                            entity
                        ]
                    }
                }
        """

    @overload
    async def expand(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        parameters: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Expand an bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param parameters: The parameters required to execute an expand operation on the given
         bookmark. Required.
        :type parameters: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "aggregationType": "str",  # Optional. The common
                                  type of the aggregation. (for e.g. entity field name).
                                "count": 0,  # Total number of aggregations of the
                                  given kind (and aggregationType if given) in the expansion result.
                                  Required.
                                "displayName": "str",  # Optional. The display name
                                  of the aggregation by type.
                                "entityKind": "str"  # The kind of the aggregated
                                  entity. Required. Known values are: "Account", "Host", "File",
                                  "AzureResource", "CloudApplication", "DnsResolution", "FileHash",
                                  "Ip", "Malware", "Process", "RegistryKey", "RegistryValue",
                                  "SecurityGroup", "Url", "IoTDevice", "SecurityAlert", "Bookmark",
                                  "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
                            }
                        ]
                    },
                    "value": {
                        "edges": [
                            {
                                "additionalData": {},  # Optional. key-value pairs
                                  for a connected entity mapping.
                                "targetEntityId": "str"  # Optional. Entity Id of the
                                  connected entity.
                            }
                        ],
                        "entities": [
                            entity
                        ]
                    }
                }
        """


    @distributed_trace_async
    async def expand(
        self,
        resource_group_name: str,
        workspace_name: str,
        bookmark_id: str,
        parameters: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Expand an bookmark.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param bookmark_id: Bookmark ID. Required.
        :type bookmark_id: str
        :param parameters: The parameters required to execute an expand operation on the given
         bookmark. Is either a model type or a IO type. Required.
        :type parameters: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "aggregationType": "str",  # Optional. The common
                                  type of the aggregation. (for e.g. entity field name).
                                "count": 0,  # Total number of aggregations of the
                                  given kind (and aggregationType if given) in the expansion result.
                                  Required.
                                "displayName": "str",  # Optional. The display name
                                  of the aggregation by type.
                                "entityKind": "str"  # The kind of the aggregated
                                  entity. Required. Known values are: "Account", "Host", "File",
                                  "AzureResource", "CloudApplication", "DnsResolution", "FileHash",
                                  "Ip", "Malware", "Process", "RegistryKey", "RegistryValue",
                                  "SecurityGroup", "Url", "IoTDevice", "SecurityAlert", "Bookmark",
                                  "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
                            }
                        ]
                    },
                    "value": {
                        "edges": [
                            {
                                "additionalData": {},  # Optional. key-value pairs
                                  for a connected entity mapping.
                                "targetEntityId": "str"  # Optional. Entity Id of the
                                  connected entity.
                            }
                        ],
                        "entities": [
                            entity
                        ]
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(parameters, (IO, bytes)):
            _content = parameters
        else:
            _json = parameters

        request = build_bookmark_expand_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            bookmark_id=bookmark_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class IPGeodataOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`ip_geodata` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        *,
        ip_address: str,
        **kwargs: Any
    ) -> JSON:
        """Get geodata for a single IP address.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :keyword ip_address: IP address (v4 or v6) to be enriched. Required.
        :paramtype ip_address: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "asn": "str",  # Optional. The autonomous system number associated with this
                      IP address.
                    "carrier": "str",  # Optional. The name of the carrier for this IP address.
                    "city": "str",  # Optional. The city this IP address is located in.
                    "cityCf": 0,  # Optional. A numeric rating of confidence that the value in
                      the 'city' field is correct, on a scale of 0-100.
                    "continent": "str",  # Optional. The continent this IP address is located on.
                    "country": "str",  # Optional. The county this IP address is located in.
                    "countryCf": 0,  # Optional. A numeric rating of confidence that the value in
                      the 'country' field is correct on a scale of 0-100.
                    "ipAddr": "str",  # Optional. The dotted-decimal or colon-separated string
                      representation of the IP address.
                    "ipRoutingType": "str",  # Optional. A description of the connection type of
                      this IP address.
                    "latitude": "str",  # Optional. The latitude of this IP address.
                    "longitude": "str",  # Optional. The longitude of this IP address.
                    "organization": "str",  # Optional. The name of the organization for this IP
                      address.
                    "organizationType": "str",  # Optional. The type of the organization for this
                      IP address.
                    "region": "str",  # Optional. The geographic region this IP address is
                      located in.
                    "state": "str",  # Optional. The state this IP address is located in.
                    "stateCf": 0,  # Optional. A numeric rating of confidence that the value in
                      the 'state' field is correct on a scale of 0-100.
                    "stateCode": "str"  # Optional. The abbreviated name for the state this IP
                      address is located in.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_ip_geodata_get_request(
            resource_group_name=resource_group_name,
            subscription_id=self._config.subscription_id,
            ip_address=ip_address,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class DomainWhoisOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`domain_whois` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        *,
        domain: str,
        **kwargs: Any
    ) -> JSON:
        """Get whois information for a single domain name.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :keyword domain: Domain name to be enriched. Required.
        :paramtype domain: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "created": "2020-02-20 00:00:00",  # Optional. The timestamp at which this
                      record was created.
                    "domain": "str",  # Optional. The domain for this whois record.
                    "expires": "2020-02-20 00:00:00",  # Optional. The timestamp at which this
                      record will expire.
                    "parsedWhois": {
                        "contacts": {
                            "admin": {
                                "city": "str",  # Optional. The city for this
                                  contact.
                                "country": "str",  # Optional. The country for this
                                  contact.
                                "email": "str",  # Optional. The email address for
                                  this contact.
                                "fax": "str",  # Optional. The fax number for this
                                  contact.
                                "name": "str",  # Optional. The name of this contact.
                                "org": "str",  # Optional. The organization for this
                                  contact.
                                "phone": "str",  # Optional. The phone number for
                                  this contact.
                                "postal": "str",  # Optional. The postal code for
                                  this contact.
                                "state": "str",  # Optional. The state for this
                                  contact.
                                "street": [
                                    "str"  # Optional. A list describing the
                                      street address for this contact.
                                ]
                            },
                            "billing": {
                                "city": "str",  # Optional. The city for this
                                  contact.
                                "country": "str",  # Optional. The country for this
                                  contact.
                                "email": "str",  # Optional. The email address for
                                  this contact.
                                "fax": "str",  # Optional. The fax number for this
                                  contact.
                                "name": "str",  # Optional. The name of this contact.
                                "org": "str",  # Optional. The organization for this
                                  contact.
                                "phone": "str",  # Optional. The phone number for
                                  this contact.
                                "postal": "str",  # Optional. The postal code for
                                  this contact.
                                "state": "str",  # Optional. The state for this
                                  contact.
                                "street": [
                                    "str"  # Optional. A list describing the
                                      street address for this contact.
                                ]
                            },
                            "registrant": {
                                "city": "str",  # Optional. The city for this
                                  contact.
                                "country": "str",  # Optional. The country for this
                                  contact.
                                "email": "str",  # Optional. The email address for
                                  this contact.
                                "fax": "str",  # Optional. The fax number for this
                                  contact.
                                "name": "str",  # Optional. The name of this contact.
                                "org": "str",  # Optional. The organization for this
                                  contact.
                                "phone": "str",  # Optional. The phone number for
                                  this contact.
                                "postal": "str",  # Optional. The postal code for
                                  this contact.
                                "state": "str",  # Optional. The state for this
                                  contact.
                                "street": [
                                    "str"  # Optional. A list describing the
                                      street address for this contact.
                                ]
                            },
                            "tech": {
                                "city": "str",  # Optional. The city for this
                                  contact.
                                "country": "str",  # Optional. The country for this
                                  contact.
                                "email": "str",  # Optional. The email address for
                                  this contact.
                                "fax": "str",  # Optional. The fax number for this
                                  contact.
                                "name": "str",  # Optional. The name of this contact.
                                "org": "str",  # Optional. The organization for this
                                  contact.
                                "phone": "str",  # Optional. The phone number for
                                  this contact.
                                "postal": "str",  # Optional. The postal code for
                                  this contact.
                                "state": "str",  # Optional. The state for this
                                  contact.
                                "street": [
                                    "str"  # Optional. A list describing the
                                      street address for this contact.
                                ]
                            }
                        },
                        "nameServers": [
                            "str"  # Optional. A list of name servers associated with
                              this domain.
                        ],
                        "registrar": {
                            "abuseContactEmail": "str",  # Optional. This registrar's
                              abuse contact email.
                            "abuseContactPhone": "str",  # Optional. This registrar's
                              abuse contact phone number.
                            "ianaId": "str",  # Optional. This registrar's Internet
                              Assigned Numbers Authority id.
                            "name": "str",  # Optional. The name of this registrar.
                            "url": "str",  # Optional. This registrar's URL.
                            "whoisServer": "str"  # Optional. The hostname of this
                              registrar's whois server.
                        },
                        "statuses": [
                            "str"  # Optional. The set of status flags for this whois
                              record.
                        ]
                    },
                    "server": "str",  # Optional. The hostname of this registrar's whois server.
                    "updated": "2020-02-20 00:00:00"  # Optional. The timestamp at which this
                      record was last updated.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_domain_whois_get_request(
            resource_group_name=resource_group_name,
            subscription_id=self._config.subscription_id,
            domain=domain,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class EntitiesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`entities` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all entities.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == entity
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_entities_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Account":
                entity = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Account",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "aadTenantId": "str",  # Optional. The Azure Active Directory tenant
                          id.
                        "aadUserId": "str",  # Optional. The Azure Active Directory user id.
                        "accountName": "str",  # Optional. The name of the account. This
                          field should hold only the name without any domain added to it, i.e.
                          administrator.
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "displayName": "str",  # Optional. The display name of the account.
                        "dnsDomain": "str",  # Optional. The fully qualified domain DNS name.
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "hostEntityId": "str",  # Optional. The Host entity id that contains
                          the account in case it is a local account (not domain joined).
                        "isDomainJoined": bool,  # Optional. Determines whether this is a
                          domain account.
                        "ntDomain": "str",  # Optional. The NetBIOS domain name as it appears
                          in the alert format domain/username. Examples: NT AUTHORITY.
                        "objectGuid": "str",  # Optional. The objectGUID attribute is a
                          single-value attribute that is the unique identifier for the object, assigned
                          by active directory.
                        "puid": "str",  # Optional. The Azure Active Directory Passport User
                          ID.
                        "sid": "str",  # Optional. The account security identifier, e.g.
                          S-1-5-18.
                        "upnSuffix": "str"  # Optional. The user principal name suffix for
                          the account, in some cases it is also the domain name. Examples: contoso.com.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureResource":
                entity = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureResource",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "resourceId": "str",  # Optional. The azure resource id of the
                          resource.
                        "subscriptionId": "str"  # Optional. The subscription id of the
                          resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Bookmark":
                entity = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Bookmark",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "created": "2020-02-20 00:00:00",  # Optional. The time the bookmark
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "displayName": "str",  # The display name of the bookmark. Required.
                        "eventTime": "2020-02-20 00:00:00",  # Optional. The time of the
                          event.
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "incidentInfo": {
                            "incidentId": "str",  # Optional. Incident Id.
                            "relationName": "str",  # Optional. Relation Name.
                            "severity": "str",  # Optional. The severity of the incident.
                              Known values are: "High", "Medium", "Low", and "Informational".
                            "title": "str"  # Optional. The title of the incident.
                        },
                        "labels": [
                            "str"  # Optional. List of labels relevant to this bookmark.
                        ],
                        "notes": "str",  # Optional. The notes of the bookmark.
                        "query": "str",  # The query of the bookmark. Required.
                        "queryResult": "str",  # Optional. The query result of the bookmark.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          bookmark was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "CloudApplication":
                entity = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "CloudApplication",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "appId": 0,  # Optional. The technical identifier of the application.
                        "appName": "str",  # Optional. The name of the related cloud
                          application.
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "instanceName": "str"  # Optional. The user defined instance name of
                          the cloud application. It is often used to distinguish between several
                          applications of the same type that a customer has.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "DnsResolution":
                entity = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "DnsResolution",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "dnsServerIpEntityId": "str",  # Optional. An ip entity id for the
                          dns server resolving the request.
                        "domainName": "str",  # Optional. The name of the dns record
                          associated with the alert.
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "hostIpAddressEntityId": "str",  # Optional. An ip entity id for the
                          dns request client.
                        "ipAddressEntityIds": [
                            "str"  # Optional. Ip entity identifiers for the resolved ip
                              address.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == entity
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_entities_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_id=entity_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def expand(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Expands an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute an expand operation on the given entity.
         Required.
        :type parameters: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                parameters = {
                    "endTime": "2020-02-20 00:00:00",  # Optional. The end date filter, so the
                      only expansion results returned are before this date.
                    "expansionId": "str",  # Optional. The Id of the expansion to perform.
                    "startTime": "2020-02-20 00:00:00"  # Optional. The start date filter, so the
                      only expansion results returned are after this date.
                }

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "aggregationType": "str",  # Optional. The common
                                  type of the aggregation. (for e.g. entity field name).
                                "count": 0,  # Total number of aggregations of the
                                  given kind (and aggregationType if given) in the expansion result.
                                  Required.
                                "displayName": "str",  # Optional. The display name
                                  of the aggregation by type.
                                "entityKind": "str"  # The kind of the aggregated
                                  entity. Required. Known values are: "Account", "Host", "File",
                                  "AzureResource", "CloudApplication", "DnsResolution", "FileHash",
                                  "Ip", "Malware", "Process", "RegistryKey", "RegistryValue",
                                  "SecurityGroup", "Url", "IoTDevice", "SecurityAlert", "Bookmark",
                                  "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
                            }
                        ]
                    },
                    "value": {
                        "edges": [
                            {
                                "additionalData": {
                                    "str": {}  # Optional. A bag of custom fields
                                      that should be part of the entity and will be presented to the
                                      user.
                                },
                                "targetEntityId": "str"  # Optional. The target
                                  entity Id.
                            }
                        ],
                        "entities": [
                            entity
                        ]
                    }
                }
        """

    @overload
    async def expand(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Expands an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute an expand operation on the given entity.
         Required.
        :type parameters: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "aggregationType": "str",  # Optional. The common
                                  type of the aggregation. (for e.g. entity field name).
                                "count": 0,  # Total number of aggregations of the
                                  given kind (and aggregationType if given) in the expansion result.
                                  Required.
                                "displayName": "str",  # Optional. The display name
                                  of the aggregation by type.
                                "entityKind": "str"  # The kind of the aggregated
                                  entity. Required. Known values are: "Account", "Host", "File",
                                  "AzureResource", "CloudApplication", "DnsResolution", "FileHash",
                                  "Ip", "Malware", "Process", "RegistryKey", "RegistryValue",
                                  "SecurityGroup", "Url", "IoTDevice", "SecurityAlert", "Bookmark",
                                  "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
                            }
                        ]
                    },
                    "value": {
                        "edges": [
                            {
                                "additionalData": {
                                    "str": {}  # Optional. A bag of custom fields
                                      that should be part of the entity and will be presented to the
                                      user.
                                },
                                "targetEntityId": "str"  # Optional. The target
                                  entity Id.
                            }
                        ],
                        "entities": [
                            entity
                        ]
                    }
                }
        """


    @distributed_trace_async
    async def expand(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Expands an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute an expand operation on the given entity.
         Is either a model type or a IO type. Required.
        :type parameters: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "aggregationType": "str",  # Optional. The common
                                  type of the aggregation. (for e.g. entity field name).
                                "count": 0,  # Total number of aggregations of the
                                  given kind (and aggregationType if given) in the expansion result.
                                  Required.
                                "displayName": "str",  # Optional. The display name
                                  of the aggregation by type.
                                "entityKind": "str"  # The kind of the aggregated
                                  entity. Required. Known values are: "Account", "Host", "File",
                                  "AzureResource", "CloudApplication", "DnsResolution", "FileHash",
                                  "Ip", "Malware", "Process", "RegistryKey", "RegistryValue",
                                  "SecurityGroup", "Url", "IoTDevice", "SecurityAlert", "Bookmark",
                                  "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
                            }
                        ]
                    },
                    "value": {
                        "edges": [
                            {
                                "additionalData": {
                                    "str": {}  # Optional. A bag of custom fields
                                      that should be part of the entity and will be presented to the
                                      user.
                                },
                                "targetEntityId": "str"  # Optional. The target
                                  entity Id.
                            }
                        ],
                        "entities": [
                            entity
                        ]
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(parameters, (IO, bytes)):
            _content = parameters
        else:
            _json = parameters

        request = build_entities_expand_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_id=entity_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def queries(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        *,
        kind: str,
        **kwargs: Any
    ) -> JSON:
        """Get Insights and Activities for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :keyword kind: The Kind parameter for queries. "Insight" Required.
        :paramtype kind: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "value": [
                        entity_query_item
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_entities_queries_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_id=entity_id,
            subscription_id=self._config.subscription_id,
            kind=kind,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def get_insights(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Execute Insights for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute insights on the given entity. Required.
        :type parameters: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                parameters = {
                    "addDefaultExtendedTimeRange": bool,  # Optional. Indicates if query time
                      range should be extended with default time range of the query. Default value is
                      false.
                    "endTime": "2020-02-20 00:00:00",  # The end timeline date, so the results
                      returned are before this date. Required.
                    "insightQueryIds": [
                        "str"  # Optional. List of Insights Query Id. If empty, default value
                          is all insights of this entity.
                    ],
                    "startTime": "2020-02-20 00:00:00"  # The start timeline date, so the results
                      returned are after this date. Required.
                }

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "errors": [
                            {
                                "errorMessage": "str",  # the error message.
                                  Required.
                                "kind": "str",  # the query kind. Required. "Insight"
                                "queryId": "str"  # Optional. the query id.
                            }
                        ],
                        "totalCount": 0  # the total items found for the insights request.
                          Required.
                    },
                    "value": [
                        {
                            "chartQueryResults": [
                                {
                                    "columns": [
                                        {
                                            "name": "str",  # Optional.
                                              the name of the colum.
                                            "type": "str"  # Optional.
                                              the type of the colum.
                                        }
                                    ],
                                    "rows": [
                                        [
                                            "str"  # Optional. Rows data
                                              of the table.
                                        ]
                                    ]
                                }
                            ],
                            "queryId": "str",  # Optional. The query id of the insight.
                            "queryTimeInterval": {
                                "endTime": "2020-02-20 00:00:00",  # Optional.
                                  Insight query end time.
                                "startTime": "2020-02-20 00:00:00"  # Optional.
                                  Insight query start time.
                            },
                            "tableQueryResults": {
                                "columns": [
                                    {
                                        "name": "str",  # Optional. the name
                                          of the colum.
                                        "type": "str"  # Optional. the type
                                          of the colum.
                                    }
                                ],
                                "rows": [
                                    [
                                        "str"  # Optional. Rows data of the
                                          table.
                                    ]
                                ]
                            }
                        }
                    ]
                }
        """

    @overload
    async def get_insights(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Execute Insights for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute insights on the given entity. Required.
        :type parameters: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "errors": [
                            {
                                "errorMessage": "str",  # the error message.
                                  Required.
                                "kind": "str",  # the query kind. Required. "Insight"
                                "queryId": "str"  # Optional. the query id.
                            }
                        ],
                        "totalCount": 0  # the total items found for the insights request.
                          Required.
                    },
                    "value": [
                        {
                            "chartQueryResults": [
                                {
                                    "columns": [
                                        {
                                            "name": "str",  # Optional.
                                              the name of the colum.
                                            "type": "str"  # Optional.
                                              the type of the colum.
                                        }
                                    ],
                                    "rows": [
                                        [
                                            "str"  # Optional. Rows data
                                              of the table.
                                        ]
                                    ]
                                }
                            ],
                            "queryId": "str",  # Optional. The query id of the insight.
                            "queryTimeInterval": {
                                "endTime": "2020-02-20 00:00:00",  # Optional.
                                  Insight query end time.
                                "startTime": "2020-02-20 00:00:00"  # Optional.
                                  Insight query start time.
                            },
                            "tableQueryResults": {
                                "columns": [
                                    {
                                        "name": "str",  # Optional. the name
                                          of the colum.
                                        "type": "str"  # Optional. the type
                                          of the colum.
                                    }
                                ],
                                "rows": [
                                    [
                                        "str"  # Optional. Rows data of the
                                          table.
                                    ]
                                ]
                            }
                        }
                    ]
                }
        """


    @distributed_trace_async
    async def get_insights(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Execute Insights for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute insights on the given entity. Is either a
         model type or a IO type. Required.
        :type parameters: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "errors": [
                            {
                                "errorMessage": "str",  # the error message.
                                  Required.
                                "kind": "str",  # the query kind. Required. "Insight"
                                "queryId": "str"  # Optional. the query id.
                            }
                        ],
                        "totalCount": 0  # the total items found for the insights request.
                          Required.
                    },
                    "value": [
                        {
                            "chartQueryResults": [
                                {
                                    "columns": [
                                        {
                                            "name": "str",  # Optional.
                                              the name of the colum.
                                            "type": "str"  # Optional.
                                              the type of the colum.
                                        }
                                    ],
                                    "rows": [
                                        [
                                            "str"  # Optional. Rows data
                                              of the table.
                                        ]
                                    ]
                                }
                            ],
                            "queryId": "str",  # Optional. The query id of the insight.
                            "queryTimeInterval": {
                                "endTime": "2020-02-20 00:00:00",  # Optional.
                                  Insight query end time.
                                "startTime": "2020-02-20 00:00:00"  # Optional.
                                  Insight query start time.
                            },
                            "tableQueryResults": {
                                "columns": [
                                    {
                                        "name": "str",  # Optional. the name
                                          of the colum.
                                        "type": "str"  # Optional. the type
                                          of the colum.
                                    }
                                ],
                                "rows": [
                                    [
                                        "str"  # Optional. Rows data of the
                                          table.
                                    ]
                                ]
                            }
                        }
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(parameters, (IO, bytes)):
            _content = parameters
        else:
            _json = parameters

        request = build_entities_get_insights_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_id=entity_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class EntitiesGetTimelineOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`entities_get_timeline` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @overload
    async def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Timeline for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute an timeline operation on the given
         entity. Required.
        :type parameters: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                parameters = {
                    "endTime": "2020-02-20 00:00:00",  # The end timeline date, so the results
                      returned are before this date. Required.
                    "kinds": [
                        "str"  # Optional. Array of timeline Item kinds.
                    ],
                    "numberOfBucket": 0,  # Optional. The number of bucket for timeline queries
                      aggregation.
                    "startTime": "2020-02-20 00:00:00"  # The start timeline date, so the results
                      returned are after this date. Required.
                }

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "count": 0,  # the total items found for a kind.
                                  Required.
                                "kind": "str"  # the query kind. Required. Known
                                  values are: "Activity", "Bookmark", "SecurityAlert", and "Anomaly".
                            }
                        ],
                        "errors": [
                            {
                                "errorMessage": "str",  # the error message.
                                  Required.
                                "kind": "str",  # the query kind. Required. Known
                                  values are: "Activity", "Bookmark", "SecurityAlert", and "Anomaly".
                                "queryId": "str"  # Optional. the query id.
                            }
                        ],
                        "totalCount": 0  # the total items found for the timeline request.
                          Required.
                    },
                    "value": [
                        entity_timeline_item
                    ]
                }
        """

    @overload
    async def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Timeline for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute an timeline operation on the given
         entity. Required.
        :type parameters: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "count": 0,  # the total items found for a kind.
                                  Required.
                                "kind": "str"  # the query kind. Required. Known
                                  values are: "Activity", "Bookmark", "SecurityAlert", and "Anomaly".
                            }
                        ],
                        "errors": [
                            {
                                "errorMessage": "str",  # the error message.
                                  Required.
                                "kind": "str",  # the query kind. Required. Known
                                  values are: "Activity", "Bookmark", "SecurityAlert", and "Anomaly".
                                "queryId": "str"  # Optional. the query id.
                            }
                        ],
                        "totalCount": 0  # the total items found for the timeline request.
                          Required.
                    },
                    "value": [
                        entity_timeline_item
                    ]
                }
        """


    @distributed_trace_async
    async def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        parameters: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Timeline for an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param parameters: The parameters required to execute an timeline operation on the given
         entity. Is either a model type or a IO type. Required.
        :type parameters: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "metaData": {
                        "aggregations": [
                            {
                                "count": 0,  # the total items found for a kind.
                                  Required.
                                "kind": "str"  # the query kind. Required. Known
                                  values are: "Activity", "Bookmark", "SecurityAlert", and "Anomaly".
                            }
                        ],
                        "errors": [
                            {
                                "errorMessage": "str",  # the error message.
                                  Required.
                                "kind": "str",  # the query kind. Required. Known
                                  values are: "Activity", "Bookmark", "SecurityAlert", and "Anomaly".
                                "queryId": "str"  # Optional. the query id.
                            }
                        ],
                        "totalCount": 0  # the total items found for the timeline request.
                          Required.
                    },
                    "value": [
                        entity_timeline_item
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(parameters, (IO, bytes)):
            _content = parameters
        else:
            _json = parameters

        request = build_entities_get_timeline_list_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_id=entity_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class EntitiesRelationsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`entities_relations` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all relations of an entity.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_entities_relations_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    entity_id=entity_id,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )

class EntityRelationsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`entity_relations` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def get_relation(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_id: str,
        relation_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an entity relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_id: entity ID. Required.
        :type entity_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_entity_relations_get_relation_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_id=entity_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class EntityQueriesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`entity_queries` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        *,
        kind: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all entity queries.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :keyword kind: The entity query kind we want to fetch. Known values are: "Expansion" and
         "Activity". Default value is None.
        :paramtype kind: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == entity_query
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_entity_queries_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    kind=kind,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_query_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an entity query.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_query_id: entity query ID. Required.
        :type entity_query_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == entity_query
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_entity_queries_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_query_id=entity_query_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_query_id: str,
        entity_query: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the entity query.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_query_id: entity query ID. Required.
        :type entity_query_id: str
        :param entity_query: The entity query we want to create or update. Required.
        :type entity_query: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "Activity":
                custom_entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                entity_query = custom_entity_query
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == entity_query
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_query_id: str,
        entity_query: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the entity query.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_query_id: entity query ID. Required.
        :type entity_query_id: str
        :param entity_query: The entity query we want to create or update. Required.
        :type entity_query: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == entity_query
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_query_id: str,
        entity_query: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the entity query.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_query_id: entity query ID. Required.
        :type entity_query_id: str
        :param entity_query: The entity query we want to create or update. Is either a model type or a
         IO type. Required.
        :type entity_query: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          activity was created.
                        "description": "str",  # Optional. The entity query description.
                        "enabled": bool,  # Optional. Determines whether this activity is
                          enabled or disabled.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The last
                          time the activity was updated.
                        "queryDefinitions": {
                            "query": "str"  # Optional. The Activity query to run on a
                              given entity.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "templateName": "str",  # Optional. The template id this activity was
                          created from.
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Expansion":
                entity_query = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Expansion",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. List of the data sources that are required
                              to run the query.
                        ],
                        "displayName": "str",  # Optional. The query display name.
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "inputFields": [
                            "str"  # Optional. List of the fields of the source entity
                              that are required to run the query.
                        ],
                        "outputEntityTypes": [
                            "str"  # Optional. List of the desired output types to be
                              constructed from the result.
                        ],
                        "queryTemplate": "str"  # Optional. The template query string to be
                          parsed and formatted.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == entity_query
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(entity_query, (IO, bytes)):
            _content = entity_query
        else:
            _json = entity_query

        request = build_entity_queries_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_query_id=entity_query_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_query_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the entity query.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_query_id: entity query ID. Required.
        :type entity_query_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_entity_queries_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_query_id=entity_query_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class EntityQueryTemplatesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`entity_query_templates` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        *,
        kind: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all entity query templates.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :keyword kind: The entity template query kind we want to fetch. "Activity" Default value is
         None.
        :paramtype kind: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == entity_query_template
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_entity_query_templates_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    kind=kind,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        entity_query_template_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an entity query.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param entity_query_template_id: entity query template ID. Required.
        :type entity_query_template_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Activity":
                entity_query_template = {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Activity",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "content": "str",  # Optional. The entity query content to display in
                          timeline.
                        "dataTypes": [
                            {
                                "dataType": "str"  # Optional. The data type name.
                            }
                        ],
                        "description": "str",  # Optional. The entity query description.
                        "entitiesFilter": {
                            "str": [
                                "str"  # Optional. The query applied only to entities
                                  matching to all filters.
                            ]
                        },
                        "inputEntityType": "str",  # Optional. The type of the query's source
                          entity. Known values are: "Account", "Host", "File", "AzureResource",
                          "CloudApplication", "DNS", "FileHash", "IP", "Malware", "Process",
                          "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "IoTDevice",
                          "SecurityAlert", "HuntingBookmark", "MailCluster", "MailMessage", "Mailbox",
                          and "SubmissionMail".
                        "queryDefinitions": {
                            "query": "str",  # Optional. The Activity query to run on a
                              given entity.
                            "summarizeBy": "str"  # Optional. The dimensions we want to
                              summarize the timeline results on, this is comma separated list.
                        },
                        "requiredInputFieldsSets": [
                            [
                                "str"  # Optional. List of the fields of the source
                                  entity that are required to run the query.
                            ]
                        ],
                        "title": "str"  # Optional. The entity query title.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == entity_query_template
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_entity_query_templates_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            entity_query_template_id=entity_query_template_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class IncidentCommentsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`incident_comments` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all incident comments.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          comment was created.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          the comment was updated.
                        "message": "str"  # The comment message. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_incident_comments_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    incident_id=incident_id,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident_comment_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an incident comment.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident_comment_id: Incident comment ID. Required.
        :type incident_comment_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          comment was created.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          the comment was updated.
                        "message": "str"  # The comment message. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_incident_comments_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            incident_comment_id=incident_comment_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident_comment_id: str,
        incident_comment: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident comment.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident_comment_id: Incident comment ID. Required.
        :type incident_comment_id: str
        :param incident_comment: The incident comment. Required.
        :type incident_comment: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                incident_comment = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          comment was created.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          the comment was updated.
                        "message": "str"  # The comment message. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          comment was created.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          the comment was updated.
                        "message": "str"  # The comment message. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident_comment_id: str,
        incident_comment: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident comment.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident_comment_id: Incident comment ID. Required.
        :type incident_comment_id: str
        :param incident_comment: The incident comment. Required.
        :type incident_comment: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          comment was created.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          the comment was updated.
                        "message": "str"  # The comment message. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident_comment_id: str,
        incident_comment: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident comment.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident_comment_id: Incident comment ID. Required.
        :type incident_comment_id: str
        :param incident_comment: The incident comment. Is either a model type or a IO type. Required.
        :type incident_comment: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. The email of the client.
                            "name": "str",  # Optional. The name of the client.
                            "objectId": "str",  # Optional. The object id of the client.
                            "userPrincipalName": "str"  # Optional. The user principal
                              name of the client.
                        },
                        "createdTimeUtc": "2020-02-20 00:00:00",  # Optional. The time the
                          comment was created.
                        "lastModifiedTimeUtc": "2020-02-20 00:00:00",  # Optional. The time
                          the comment was updated.
                        "message": "str"  # The comment message. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(incident_comment, (IO, bytes)):
            _content = incident_comment
        else:
            _json = incident_comment

        request = build_incident_comments_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            incident_comment_id=incident_comment_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        incident_comment_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the incident comment.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param incident_comment_id: Incident comment ID. Required.
        :type incident_comment_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_incident_comments_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            incident_comment_id=incident_comment_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class IncidentRelationsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`incident_relations` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all incident relations.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_incident_relations_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    incident_id=incident_id,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        relation_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an incident relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_incident_relations_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        relation_name: str,
        relation: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :param relation: The relation model. Required.
        :type relation: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                relation = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        relation_name: str,
        relation: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :param relation: The relation model. Required.
        :type relation: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        relation_name: str,
        relation: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the incident relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :param relation: The relation model. Is either a model type or a IO type. Required.
        :type relation: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "relatedResourceId": "str",  # The resource ID of the related
                          resource. Required.
                        "relatedResourceKind": "str",  # Optional. The resource kind of the
                          related resource.
                        "relatedResourceName": "str",  # Optional. The name of the related
                          resource.
                        "relatedResourceType": "str"  # Optional. The resource type of the
                          related resource.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(relation, (IO, bytes)):
            _content = relation
        else:
            _json = relation

        request = build_incident_relations_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        incident_id: str,
        relation_name: str,
        **kwargs: Any
    ) -> None:
        """Delete the incident relation.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param incident_id: Incident ID. Required.
        :type incident_id: str
        :param relation_name: Relation Name. Required.
        :type relation_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_incident_relations_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            incident_id=incident_id,
            relation_name=relation_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class MetadataOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`metadata` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip: Optional[int] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """List of all metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip: Used to skip n elements in the OData query (offset). Returns a nextLink to the
         next page of results if there are any left. Default value is None.
        :paramtype skip: int
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_metadata_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip=skip,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        **kwargs: Any
    ) -> JSON:
        """Get a Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_metadata_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            metadata_name=metadata_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        **kwargs: Any
    ) -> None:
        """Delete a Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_metadata_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            metadata_name=metadata_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        metadata: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create a Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :param metadata: Metadata resource. Required.
        :type metadata: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                metadata = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        metadata: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create a Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :param metadata: Metadata resource. Required.
        :type metadata: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        metadata: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Create a Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :param metadata: Metadata resource. Is either a model type or a IO type. Required.
        :type metadata: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(metadata, (IO, bytes)):
            _content = metadata
        else:
            _json = metadata

        request = build_metadata_create_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            metadata_name=metadata_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def update(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        metadata_patch: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Update an existing Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :param metadata_patch: Partial metadata request. Required.
        :type metadata_patch: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                metadata_patch = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # Optional. The kind of content the metadata is for.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Optional. Full parent resource ID of the
                          content item the metadata is for.  This is the full resource ID including the
                          scope (subscription and resource group).
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def update(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        metadata_patch: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Update an existing Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :param metadata_patch: Partial metadata request. Required.
        :type metadata_patch: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def update(
        self,
        resource_group_name: str,
        workspace_name: str,
        metadata_name: str,
        metadata_patch: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Update an existing Metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param metadata_name: The Metadata name. Required.
        :type metadata_name: str
        :param metadata_patch: Partial metadata request. Is either a model type or a IO type. Required.
        :type metadata_patch: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "author": {
                            "email": "str",  # Optional. Email of author contact.
                            "link": "str",  # Optional. Link for author/vendor page.
                            "name": "str"  # Optional. Name of the author. Company or
                              person.
                        },
                        "categories": {
                            "domains": [
                                "str"  # Optional. domain for the solution content
                                  item.
                            ],
                            "verticals": [
                                "str"  # Optional. Industry verticals for the
                                  solution content item.
                            ]
                        },
                        "contentId": "str",  # Optional. Static ID for the content.  Used to
                          identify dependencies and content from solutions or community.
                          Hard-coded/static for out of the box content and solutions. Dynamic for
                          user-created.  This is the resource name.
                        "contentSchemaVersion": "str",  # Optional. Schema version of the
                          content. Can be used to distinguish between different flow based on the
                          schema version.
                        "customVersion": "str",  # Optional. The custom version of the
                          content. A optional free text.
                        "dependencies": {
                            "contentId": "str",  # Optional. Id of the content item we
                              depend on.
                            "criteria": [
                                ...
                            ],
                            "kind": "str",  # Optional. Type of the content item we
                              depend on. Known values are: "DataConnector", "DataType", "Workbook",
                              "WorkbookTemplate", "Playbook", "PlaybookTemplate",
                              "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery",
                              "InvestigationQuery", "Parser", "Watchlist", "WatchlistTemplate",
                              "Solution", "AzureFunction", "LogicAppsCustomConnector", and
                              "AutomationRule".
                            "name": "str",  # Optional. Name of the content item.
                            "operator": "str",  # Optional. Operator used for list of
                              dependencies in criteria array. Known values are: "AND" and "OR".
                            "version": "str"  # Optional. Version of the the content item
                              we depend on.  Can be blank, * or missing to indicate any version
                              fulfills the dependency.  If version does not match our defined numeric
                              format then an exact match is required.
                        },
                        "firstPublishDate": "2020-02-20",  # Optional. first publish date
                          solution content item.
                        "icon": "str",  # Optional. the icon identifier. this id can later be
                          fetched from the solution template.
                        "kind": "str",  # The kind of content the metadata is for. Required.
                          Known values are: "DataConnector", "DataType", "Workbook",
                          "WorkbookTemplate", "Playbook", "PlaybookTemplate", "AnalyticsRuleTemplate",
                          "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser", "Watchlist",
                          "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
                          and "AutomationRule".
                        "lastPublishDate": "2020-02-20",  # Optional. last publish date for
                          the solution content item.
                        "parentId": "str",  # Full parent resource ID of the content item the
                          metadata is for.  This is the full resource ID including the scope
                          (subscription and resource group). Required.
                        "previewImages": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts.
                        ],
                        "previewImagesDark": [
                            "str"  # Optional. preview image file names. These will be
                              taken from the solution artifacts. used for dark theme support.
                        ],
                        "providers": [
                            "str"  # Optional. Providers for the solution content item.
                        ],
                        "source": {
                            "kind": "str",  # Source type of the content. Required. Known
                              values are: "LocalWorkspace", "Community", "Solution", and
                              "SourceRepository".
                            "name": "str",  # Optional. Name of the content source.  The
                              repo name, solution name, LA workspace name etc.
                            "sourceId": "str"  # Optional. ID of the content source.  The
                              solution ID, workspace ID, etc.
                        },
                        "support": {
                            "email": "str",  # Optional. Email of support contact.
                            "link": "str",  # Optional. Link for support help, like to
                              support page to open a ticket etc.
                            "name": "str",  # Optional. Name of the support contact.
                              Company or person.
                            "tier": "str"  # Type of support for content item. Required.
                              Known values are: "Microsoft", "Partner", and "Community".
                        },
                        "threatAnalysisTactics": [
                            "str"  # Optional. the tactics the resource covers.
                        ],
                        "threatAnalysisTechniques": [
                            "str"  # Optional. the techniques the resource covers, these
                              have to be aligned with the tactics being used.
                        ],
                        "version": "str"  # Optional. Version of the content.  Default and
                          recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM
                          template best practices.  Can also be any string, but then we cannot
                          guarantee any version checks.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(metadata_patch, (IO, bytes)):
            _content = metadata_patch
        else:
            _json = metadata_patch

        request = build_metadata_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            metadata_name=metadata_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class OfficeConsentsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`office_consents` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all office365 consents.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "consentId": "str",  # Optional. Help to easily cascade among the
                          data layers.
                        "tenantId": "str"  # Optional. The tenantId of the Office365 with the
                          consent.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_office_consents_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        consent_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets an office365 consent.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param consent_id: consent ID. Required.
        :type consent_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "consentId": "str",  # Optional. Help to easily cascade among the
                          data layers.
                        "tenantId": "str"  # Optional. The tenantId of the Office365 with the
                          consent.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_office_consents_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            consent_id=consent_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        consent_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the office365 consent.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param consent_id: consent ID. Required.
        :type consent_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_office_consents_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            consent_id=consent_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class SentinelOnboardingStatesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`sentinel_onboarding_states` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        sentinel_onboarding_state_name: str,
        **kwargs: Any
    ) -> JSON:
        """Get Sentinel onboarding state.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param sentinel_onboarding_state_name: The Sentinel onboarding state name. Supports - default.
         Required.
        :type sentinel_onboarding_state_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "customerManagedKey": bool  # Optional. Flag that indicates the
                          status of the CMK setting.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_sentinel_onboarding_states_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            sentinel_onboarding_state_name=sentinel_onboarding_state_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        sentinel_onboarding_state_name: str,
        sentinel_onboarding_state_parameter: Optional[JSON] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create Sentinel onboarding state.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param sentinel_onboarding_state_name: The Sentinel onboarding state name. Supports - default.
         Required.
        :type sentinel_onboarding_state_name: str
        :param sentinel_onboarding_state_parameter: The Sentinel onboarding state parameter. Default
         value is None.
        :type sentinel_onboarding_state_parameter: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                sentinel_onboarding_state_parameter = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "customerManagedKey": bool  # Optional. Flag that indicates the
                          status of the CMK setting.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "customerManagedKey": bool  # Optional. Flag that indicates the
                          status of the CMK setting.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        sentinel_onboarding_state_name: str,
        sentinel_onboarding_state_parameter: Optional[IO] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create Sentinel onboarding state.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param sentinel_onboarding_state_name: The Sentinel onboarding state name. Supports - default.
         Required.
        :type sentinel_onboarding_state_name: str
        :param sentinel_onboarding_state_parameter: The Sentinel onboarding state parameter. Default
         value is None.
        :type sentinel_onboarding_state_parameter: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "customerManagedKey": bool  # Optional. Flag that indicates the
                          status of the CMK setting.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        sentinel_onboarding_state_name: str,
        sentinel_onboarding_state_parameter: Optional[Union[JSON, IO]] = None,
        **kwargs: Any
    ) -> JSON:
        """Create Sentinel onboarding state.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param sentinel_onboarding_state_name: The Sentinel onboarding state name. Supports - default.
         Required.
        :type sentinel_onboarding_state_name: str
        :param sentinel_onboarding_state_parameter: The Sentinel onboarding state parameter. Is either
         a model type or a IO type. Default value is None.
        :type sentinel_onboarding_state_parameter: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "customerManagedKey": bool  # Optional. Flag that indicates the
                          status of the CMK setting.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(sentinel_onboarding_state_parameter, (IO, bytes)):
            _content = sentinel_onboarding_state_parameter
        else:
            if sentinel_onboarding_state_parameter is not None:
                _json = sentinel_onboarding_state_parameter
            else:
                _json = None

        request = build_sentinel_onboarding_states_create_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            sentinel_onboarding_state_name=sentinel_onboarding_state_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        sentinel_onboarding_state_name: str,
        **kwargs: Any
    ) -> None:
        """Delete Sentinel onboarding state.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param sentinel_onboarding_state_name: The Sentinel onboarding state name. Supports - default.
         Required.
        :type sentinel_onboarding_state_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_sentinel_onboarding_states_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            sentinel_onboarding_state_name=sentinel_onboarding_state_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @distributed_trace_async
    async def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets all Sentinel onboarding states.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "value": [
                        {
                            "etag": "str",  # Optional. Etag of the azure resource.
                            "id": "str",  # Optional. Fully qualified resource ID for the
                              resource. Ex -
                              /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            "name": "str",  # Optional. The name of the resource.
                            "properties": {
                                "customerManagedKey": bool  # Optional. Flag that
                                  indicates the status of the CMK setting.
                            },
                            "systemData": {
                                "createdAt": "2020-02-20 00:00:00",  # Optional. The
                                  timestamp of resource creation (UTC).
                                "createdBy": "str",  # Optional. The identity that
                                  created the resource.
                                "createdByType": "str",  # Optional. The type of
                                  identity that created the resource. Known values are: "User",
                                  "Application", "ManagedIdentity", and "Key".
                                "lastModifiedAt": "2020-02-20 00:00:00",  # Optional.
                                  The timestamp of resource last modification (UTC).
                                "lastModifiedBy": "str",  # Optional. The identity
                                  that last modified the resource.
                                "lastModifiedByType": "str"  # Optional. The type of
                                  identity that last modified the resource. Known values are: "User",
                                  "Application", "ManagedIdentity", and "Key".
                            },
                            "type": "str"  # Optional. The type of the resource. E.g.
                              "Microsoft.Compute/virtualMachines" or
                              "Microsoft.Storage/storageAccounts".
                        }
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_sentinel_onboarding_states_list_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class SecurityMLAnalyticsSettingsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`security_ml_analytics_settings` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all Security ML Analytics Settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == security_ml_analytics_setting
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_security_ml_analytics_settings_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_resource_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets the Security ML Analytics Settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_resource_name: Security ML Analytics Settings resource name. Required.
        :type settings_resource_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == security_ml_analytics_setting
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_security_ml_analytics_settings_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            settings_resource_name=settings_resource_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_resource_name: str,
        security_ml_analytics_setting: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the Security ML Analytics Settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_resource_name: Security ML Analytics Settings resource name. Required.
        :type settings_resource_name: str
        :param security_ml_analytics_setting: The security ML Analytics setting. Required.
        :type security_ml_analytics_setting: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                security_ml_analytics_setting = security_ml_analytics_setting
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == security_ml_analytics_setting
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_resource_name: str,
        security_ml_analytics_setting: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the Security ML Analytics Settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_resource_name: Security ML Analytics Settings resource name. Required.
        :type settings_resource_name: str
        :param security_ml_analytics_setting: The security ML Analytics setting. Required.
        :type security_ml_analytics_setting: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == security_ml_analytics_setting
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_resource_name: str,
        security_ml_analytics_setting: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the Security ML Analytics Settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_resource_name: Security ML Analytics Settings resource name. Required.
        :type settings_resource_name: str
        :param security_ml_analytics_setting: The security ML Analytics setting. Is either a model type
         or a IO type. Required.
        :type security_ml_analytics_setting: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomaly":
                security_ml_analytics_setting = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomaly",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "anomalySettingsVersion": 0,  # Optional. The anomaly settings
                          version of the Anomaly security ml analytics settings that dictates whether
                          job version gets updated or not.
                        "anomalyVersion": "str",  # The anomaly version of the
                          AnomalySecurityMLAnalyticsSettings. Required.
                        "customizableObservations": {},  # Optional. The customizable
                          observations of the AnomalySecurityMLAnalyticsSettings.
                        "description": "str",  # Optional. The description of the
                          SecurityMLAnalyticsSettings.
                        "displayName": "str",  # The display name for settings created by
                          this SecurityMLAnalyticsSettings. Required.
                        "enabled": bool,  # Determines whether this settings is enabled or
                          disabled. Required.
                        "frequency": "1 day, 0:00:00",  # The frequency that this
                          SecurityMLAnalyticsSettings will be run. Required.
                        "isDefaultSettings": bool,  # Determines whether this anomaly
                          security ml analytics settings is a default settings. Required.
                        "lastModifiedUtc": "2020-02-20 00:00:00",  # Optional. The last time
                          that this SecurityMLAnalyticsSettings has been modified.
                        "requiredDataConnectors": [
                            {
                                "connectorId": "str",  # Optional. The connector id
                                  that provides the following data types.
                                "dataTypes": [
                                    "str"  # Optional. The data types used by the
                                      security ml analytics settings.
                                ]
                            }
                        ],
                        "settingsDefinitionId": "str",  # Optional. The anomaly settings
                          definition Id.
                        "settingsStatus": "str",  # The anomaly SecurityMLAnalyticsSettings
                          status. Required. Known values are: "Production" and "Flighting".
                        "tactics": [
                            "str"  # Optional. The tactics of the
                              SecurityMLAnalyticsSettings.
                        ],
                        "techniques": [
                            "str"  # Optional. The techniques of the
                              SecurityMLAnalyticsSettings.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == security_ml_analytics_setting
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(security_ml_analytics_setting, (IO, bytes)):
            _content = security_ml_analytics_setting
        else:
            _json = security_ml_analytics_setting

        request = build_security_ml_analytics_settings_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            settings_resource_name=settings_resource_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_resource_name: str,
        **kwargs: Any
    ) -> None:
        """Delete the Security ML Analytics Settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_resource_name: Security ML Analytics Settings resource name. Required.
        :type settings_resource_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_security_ml_analytics_settings_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            settings_resource_name=settings_resource_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class ProductSettingsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`product_settings` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> JSON:
        """List of all the settings.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "value": [
                        settings
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_product_settings_list_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a setting.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_name: The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba.
         Required.
        :type settings_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomalies":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomalies",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EntityAnalytics":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EntityAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "entityProviders": [
                            "str"  # Optional. The relevant entity providers that are
                              synced.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EyesOn":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EyesOn",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Ueba":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Ueba",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. The relevant data sources that enriched by
                              ueba.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == settings
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_product_settings_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            settings_name=settings_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_name: str,
        **kwargs: Any
    ) -> None:
        """Delete setting of the product.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_name: The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba.
         Required.
        :type settings_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_product_settings_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            settings_name=settings_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def update(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_name: str,
        settings: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Updates setting.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_name: The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba.
         Required.
        :type settings_name: str
        :param settings: The setting. Required.
        :type settings: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "Anomalies":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomalies",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EntityAnalytics":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EntityAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "entityProviders": [
                            "str"  # Optional. The relevant entity providers that are
                              synced.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EyesOn":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EyesOn",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Ueba":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Ueba",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. The relevant data sources that enriched by
                              ueba.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                settings = settings
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomalies":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomalies",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EntityAnalytics":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EntityAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "entityProviders": [
                            "str"  # Optional. The relevant entity providers that are
                              synced.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EyesOn":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EyesOn",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Ueba":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Ueba",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. The relevant data sources that enriched by
                              ueba.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == settings
        """

    @overload
    async def update(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_name: str,
        settings: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Updates setting.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_name: The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba.
         Required.
        :type settings_name: str
        :param settings: The setting. Required.
        :type settings: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomalies":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomalies",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EntityAnalytics":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EntityAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "entityProviders": [
                            "str"  # Optional. The relevant entity providers that are
                              synced.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EyesOn":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EyesOn",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Ueba":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Ueba",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. The relevant data sources that enriched by
                              ueba.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == settings
        """


    @distributed_trace_async
    async def update(
        self,
        resource_group_name: str,
        workspace_name: str,
        settings_name: str,
        settings: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Updates setting.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param settings_name: The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba.
         Required.
        :type settings_name: str
        :param settings: The setting. Is either a model type or a IO type. Required.
        :type settings: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "Anomalies":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Anomalies",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EntityAnalytics":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EntityAnalytics",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "entityProviders": [
                            "str"  # Optional. The relevant entity providers that are
                              synced.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "EyesOn":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "EyesOn",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "isEnabled": bool  # Optional. Determines whether the setting is
                          enable or disabled.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "Ueba":
                settings = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "Ueba",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataSources": [
                            "str"  # Optional. The relevant data sources that enriched by
                              ueba.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == settings
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(settings, (IO, bytes)):
            _content = settings
        else:
            _json = settings

        request = build_product_settings_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            settings_name=settings_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class SourceControlOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`source_control` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list_repositories(
        self,
        resource_group_name: str,
        workspace_name: str,
        repo_type: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets a list of repositories metadata.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param repo_type: The repo type. Known values are: "Github" and "DevOps". Required.
        :type repo_type: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "branches": [
                        "str"  # Optional. Array of branches.
                    ],
                    "fullName": "str",  # Optional. The name of the repository.
                    "url": "str"  # Optional. The url to access the repository.
                }
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', "application/json"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                _json = repo_type
                
                request = build_source_control_list_repositories_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    content_type=content_type,
                    api_version=self._config.api_version,
                    json=_json,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )

class SourceControlsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`source_controls` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all source controls, without source control items.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentTypes": [
                            "str"  # Array of source control content types. Required.
                        ],
                        "description": "str",  # Optional. A description of the source
                          control.
                        "displayName": "str",  # The display name of the source control.
                          Required.
                        "id": "str",  # Optional. The id (a Guid) of the source control.
                        "lastDeploymentInfo": {
                            "deployment": {
                                "deploymentId": "str",  # Optional. Deployment
                                  identifier.
                                "deploymentLogsUrl": "str",  # Optional. Url to
                                  access repository action logs.
                                "deploymentResult": "str",  # Optional. The outcome
                                  of the deployment. Known values are: "Success", "Canceled", and
                                  "Failed".
                                "deploymentState": "str",  # Optional. Current status
                                  of the deployment. Known values are: "In_Progress", "Completed",
                                  "Queued", and "Canceling".
                                "deploymentTime": "2020-02-20 00:00:00"  # Optional.
                                  The time when the deployment finished.
                            },
                            "deploymentFetchStatus": "str",  # Optional. Status while
                              fetching the last deployment. Known values are: "Success",
                              "Unauthorized", and "NotFound".
                            "message": "str"  # Optional. Additional details about the
                              deployment that can be shown to the user.
                        },
                        "repoType": "str",  # The repository type of the source control.
                          Required. Known values are: "Github" and "DevOps".
                        "repository": {
                            "branch": "str",  # Optional. Branch name of repository.
                            "deploymentLogsUrl": "str",  # Optional. Url to access
                              repository action logs.
                            "displayUrl": "str",  # Optional. Display url of repository.
                            "pathMapping": [
                                {
                                    "contentType": "str",  # Optional. Content
                                      type. Known values are: "AnalyticRule" and "Workbook".
                                    "path": "str"  # Optional. The path to the
                                      content.
                                }
                            ],
                            "url": "str"  # Optional. Url of repository.
                        },
                        "repositoryResourceInfo": {
                            "azureDevOpsResourceInfo": {
                                "pipelineId": "str",  # Optional. Id of the pipeline
                                  created for the source-control.
                                "serviceConnectionId": "str"  # Optional. Id of the
                                  service-connection created for the source-control.
                            },
                            "gitHubResourceInfo": {
                                "appInstallationId": "str"  # Optional. GitHub
                                  application installation id.
                            },
                            "webhook": {
                                "rotateWebhookSecret": bool,  # Optional. A flag to
                                  instruct the backend service to rotate webhook secret.
                                "webhookId": "str",  # Optional. Unique identifier
                                  for the webhook.
                                "webhookSecretUpdateTime": "str",  # Optional. Time
                                  when the webhook secret was updated.
                                "webhookUrl": "str"  # Optional. URL that gets
                                  invoked by the webhook.
                            }
                        },
                        "version": "str"  # Optional. The version number associated with the
                          source control. Known values are: "V1" and "V2".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_source_controls_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        source_control_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a source control byt its identifier.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param source_control_id: Source control Id. Required.
        :type source_control_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentTypes": [
                            "str"  # Array of source control content types. Required.
                        ],
                        "description": "str",  # Optional. A description of the source
                          control.
                        "displayName": "str",  # The display name of the source control.
                          Required.
                        "id": "str",  # Optional. The id (a Guid) of the source control.
                        "lastDeploymentInfo": {
                            "deployment": {
                                "deploymentId": "str",  # Optional. Deployment
                                  identifier.
                                "deploymentLogsUrl": "str",  # Optional. Url to
                                  access repository action logs.
                                "deploymentResult": "str",  # Optional. The outcome
                                  of the deployment. Known values are: "Success", "Canceled", and
                                  "Failed".
                                "deploymentState": "str",  # Optional. Current status
                                  of the deployment. Known values are: "In_Progress", "Completed",
                                  "Queued", and "Canceling".
                                "deploymentTime": "2020-02-20 00:00:00"  # Optional.
                                  The time when the deployment finished.
                            },
                            "deploymentFetchStatus": "str",  # Optional. Status while
                              fetching the last deployment. Known values are: "Success",
                              "Unauthorized", and "NotFound".
                            "message": "str"  # Optional. Additional details about the
                              deployment that can be shown to the user.
                        },
                        "repoType": "str",  # The repository type of the source control.
                          Required. Known values are: "Github" and "DevOps".
                        "repository": {
                            "branch": "str",  # Optional. Branch name of repository.
                            "deploymentLogsUrl": "str",  # Optional. Url to access
                              repository action logs.
                            "displayUrl": "str",  # Optional. Display url of repository.
                            "pathMapping": [
                                {
                                    "contentType": "str",  # Optional. Content
                                      type. Known values are: "AnalyticRule" and "Workbook".
                                    "path": "str"  # Optional. The path to the
                                      content.
                                }
                            ],
                            "url": "str"  # Optional. Url of repository.
                        },
                        "repositoryResourceInfo": {
                            "azureDevOpsResourceInfo": {
                                "pipelineId": "str",  # Optional. Id of the pipeline
                                  created for the source-control.
                                "serviceConnectionId": "str"  # Optional. Id of the
                                  service-connection created for the source-control.
                            },
                            "gitHubResourceInfo": {
                                "appInstallationId": "str"  # Optional. GitHub
                                  application installation id.
                            },
                            "webhook": {
                                "rotateWebhookSecret": bool,  # Optional. A flag to
                                  instruct the backend service to rotate webhook secret.
                                "webhookId": "str",  # Optional. Unique identifier
                                  for the webhook.
                                "webhookSecretUpdateTime": "str",  # Optional. Time
                                  when the webhook secret was updated.
                                "webhookUrl": "str"  # Optional. URL that gets
                                  invoked by the webhook.
                            }
                        },
                        "version": "str"  # Optional. The version number associated with the
                          source control. Known values are: "V1" and "V2".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_source_controls_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            source_control_id=source_control_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        source_control_id: str,
        **kwargs: Any
    ) -> None:
        """Delete a source control.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param source_control_id: Source control Id. Required.
        :type source_control_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_source_controls_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            source_control_id=source_control_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        source_control_id: str,
        source_control: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates a source control.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param source_control_id: Source control Id. Required.
        :type source_control_id: str
        :param source_control: The SourceControl. Required.
        :type source_control: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                source_control = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentTypes": [
                            "str"  # Array of source control content types. Required.
                        ],
                        "description": "str",  # Optional. A description of the source
                          control.
                        "displayName": "str",  # The display name of the source control.
                          Required.
                        "id": "str",  # Optional. The id (a Guid) of the source control.
                        "lastDeploymentInfo": {
                            "deployment": {
                                "deploymentId": "str",  # Optional. Deployment
                                  identifier.
                                "deploymentLogsUrl": "str",  # Optional. Url to
                                  access repository action logs.
                                "deploymentResult": "str",  # Optional. The outcome
                                  of the deployment. Known values are: "Success", "Canceled", and
                                  "Failed".
                                "deploymentState": "str",  # Optional. Current status
                                  of the deployment. Known values are: "In_Progress", "Completed",
                                  "Queued", and "Canceling".
                                "deploymentTime": "2020-02-20 00:00:00"  # Optional.
                                  The time when the deployment finished.
                            },
                            "deploymentFetchStatus": "str",  # Optional. Status while
                              fetching the last deployment. Known values are: "Success",
                              "Unauthorized", and "NotFound".
                            "message": "str"  # Optional. Additional details about the
                              deployment that can be shown to the user.
                        },
                        "repoType": "str",  # The repository type of the source control.
                          Required. Known values are: "Github" and "DevOps".
                        "repository": {
                            "branch": "str",  # Optional. Branch name of repository.
                            "deploymentLogsUrl": "str",  # Optional. Url to access
                              repository action logs.
                            "displayUrl": "str",  # Optional. Display url of repository.
                            "pathMapping": [
                                {
                                    "contentType": "str",  # Optional. Content
                                      type. Known values are: "AnalyticRule" and "Workbook".
                                    "path": "str"  # Optional. The path to the
                                      content.
                                }
                            ],
                            "url": "str"  # Optional. Url of repository.
                        },
                        "repositoryResourceInfo": {
                            "azureDevOpsResourceInfo": {
                                "pipelineId": "str",  # Optional. Id of the pipeline
                                  created for the source-control.
                                "serviceConnectionId": "str"  # Optional. Id of the
                                  service-connection created for the source-control.
                            },
                            "gitHubResourceInfo": {
                                "appInstallationId": "str"  # Optional. GitHub
                                  application installation id.
                            },
                            "webhook": {
                                "rotateWebhookSecret": bool,  # Optional. A flag to
                                  instruct the backend service to rotate webhook secret.
                                "webhookId": "str",  # Optional. Unique identifier
                                  for the webhook.
                                "webhookSecretUpdateTime": "str",  # Optional. Time
                                  when the webhook secret was updated.
                                "webhookUrl": "str"  # Optional. URL that gets
                                  invoked by the webhook.
                            }
                        },
                        "version": "str"  # Optional. The version number associated with the
                          source control. Known values are: "V1" and "V2".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentTypes": [
                            "str"  # Array of source control content types. Required.
                        ],
                        "description": "str",  # Optional. A description of the source
                          control.
                        "displayName": "str",  # The display name of the source control.
                          Required.
                        "id": "str",  # Optional. The id (a Guid) of the source control.
                        "lastDeploymentInfo": {
                            "deployment": {
                                "deploymentId": "str",  # Optional. Deployment
                                  identifier.
                                "deploymentLogsUrl": "str",  # Optional. Url to
                                  access repository action logs.
                                "deploymentResult": "str",  # Optional. The outcome
                                  of the deployment. Known values are: "Success", "Canceled", and
                                  "Failed".
                                "deploymentState": "str",  # Optional. Current status
                                  of the deployment. Known values are: "In_Progress", "Completed",
                                  "Queued", and "Canceling".
                                "deploymentTime": "2020-02-20 00:00:00"  # Optional.
                                  The time when the deployment finished.
                            },
                            "deploymentFetchStatus": "str",  # Optional. Status while
                              fetching the last deployment. Known values are: "Success",
                              "Unauthorized", and "NotFound".
                            "message": "str"  # Optional. Additional details about the
                              deployment that can be shown to the user.
                        },
                        "repoType": "str",  # The repository type of the source control.
                          Required. Known values are: "Github" and "DevOps".
                        "repository": {
                            "branch": "str",  # Optional. Branch name of repository.
                            "deploymentLogsUrl": "str",  # Optional. Url to access
                              repository action logs.
                            "displayUrl": "str",  # Optional. Display url of repository.
                            "pathMapping": [
                                {
                                    "contentType": "str",  # Optional. Content
                                      type. Known values are: "AnalyticRule" and "Workbook".
                                    "path": "str"  # Optional. The path to the
                                      content.
                                }
                            ],
                            "url": "str"  # Optional. Url of repository.
                        },
                        "repositoryResourceInfo": {
                            "azureDevOpsResourceInfo": {
                                "pipelineId": "str",  # Optional. Id of the pipeline
                                  created for the source-control.
                                "serviceConnectionId": "str"  # Optional. Id of the
                                  service-connection created for the source-control.
                            },
                            "gitHubResourceInfo": {
                                "appInstallationId": "str"  # Optional. GitHub
                                  application installation id.
                            },
                            "webhook": {
                                "rotateWebhookSecret": bool,  # Optional. A flag to
                                  instruct the backend service to rotate webhook secret.
                                "webhookId": "str",  # Optional. Unique identifier
                                  for the webhook.
                                "webhookSecretUpdateTime": "str",  # Optional. Time
                                  when the webhook secret was updated.
                                "webhookUrl": "str"  # Optional. URL that gets
                                  invoked by the webhook.
                            }
                        },
                        "version": "str"  # Optional. The version number associated with the
                          source control. Known values are: "V1" and "V2".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        source_control_id: str,
        source_control: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates a source control.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param source_control_id: Source control Id. Required.
        :type source_control_id: str
        :param source_control: The SourceControl. Required.
        :type source_control: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentTypes": [
                            "str"  # Array of source control content types. Required.
                        ],
                        "description": "str",  # Optional. A description of the source
                          control.
                        "displayName": "str",  # The display name of the source control.
                          Required.
                        "id": "str",  # Optional. The id (a Guid) of the source control.
                        "lastDeploymentInfo": {
                            "deployment": {
                                "deploymentId": "str",  # Optional. Deployment
                                  identifier.
                                "deploymentLogsUrl": "str",  # Optional. Url to
                                  access repository action logs.
                                "deploymentResult": "str",  # Optional. The outcome
                                  of the deployment. Known values are: "Success", "Canceled", and
                                  "Failed".
                                "deploymentState": "str",  # Optional. Current status
                                  of the deployment. Known values are: "In_Progress", "Completed",
                                  "Queued", and "Canceling".
                                "deploymentTime": "2020-02-20 00:00:00"  # Optional.
                                  The time when the deployment finished.
                            },
                            "deploymentFetchStatus": "str",  # Optional. Status while
                              fetching the last deployment. Known values are: "Success",
                              "Unauthorized", and "NotFound".
                            "message": "str"  # Optional. Additional details about the
                              deployment that can be shown to the user.
                        },
                        "repoType": "str",  # The repository type of the source control.
                          Required. Known values are: "Github" and "DevOps".
                        "repository": {
                            "branch": "str",  # Optional. Branch name of repository.
                            "deploymentLogsUrl": "str",  # Optional. Url to access
                              repository action logs.
                            "displayUrl": "str",  # Optional. Display url of repository.
                            "pathMapping": [
                                {
                                    "contentType": "str",  # Optional. Content
                                      type. Known values are: "AnalyticRule" and "Workbook".
                                    "path": "str"  # Optional. The path to the
                                      content.
                                }
                            ],
                            "url": "str"  # Optional. Url of repository.
                        },
                        "repositoryResourceInfo": {
                            "azureDevOpsResourceInfo": {
                                "pipelineId": "str",  # Optional. Id of the pipeline
                                  created for the source-control.
                                "serviceConnectionId": "str"  # Optional. Id of the
                                  service-connection created for the source-control.
                            },
                            "gitHubResourceInfo": {
                                "appInstallationId": "str"  # Optional. GitHub
                                  application installation id.
                            },
                            "webhook": {
                                "rotateWebhookSecret": bool,  # Optional. A flag to
                                  instruct the backend service to rotate webhook secret.
                                "webhookId": "str",  # Optional. Unique identifier
                                  for the webhook.
                                "webhookSecretUpdateTime": "str",  # Optional. Time
                                  when the webhook secret was updated.
                                "webhookUrl": "str"  # Optional. URL that gets
                                  invoked by the webhook.
                            }
                        },
                        "version": "str"  # Optional. The version number associated with the
                          source control. Known values are: "V1" and "V2".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        source_control_id: str,
        source_control: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates a source control.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param source_control_id: Source control Id. Required.
        :type source_control_id: str
        :param source_control: The SourceControl. Is either a model type or a IO type. Required.
        :type source_control: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentTypes": [
                            "str"  # Array of source control content types. Required.
                        ],
                        "description": "str",  # Optional. A description of the source
                          control.
                        "displayName": "str",  # The display name of the source control.
                          Required.
                        "id": "str",  # Optional. The id (a Guid) of the source control.
                        "lastDeploymentInfo": {
                            "deployment": {
                                "deploymentId": "str",  # Optional. Deployment
                                  identifier.
                                "deploymentLogsUrl": "str",  # Optional. Url to
                                  access repository action logs.
                                "deploymentResult": "str",  # Optional. The outcome
                                  of the deployment. Known values are: "Success", "Canceled", and
                                  "Failed".
                                "deploymentState": "str",  # Optional. Current status
                                  of the deployment. Known values are: "In_Progress", "Completed",
                                  "Queued", and "Canceling".
                                "deploymentTime": "2020-02-20 00:00:00"  # Optional.
                                  The time when the deployment finished.
                            },
                            "deploymentFetchStatus": "str",  # Optional. Status while
                              fetching the last deployment. Known values are: "Success",
                              "Unauthorized", and "NotFound".
                            "message": "str"  # Optional. Additional details about the
                              deployment that can be shown to the user.
                        },
                        "repoType": "str",  # The repository type of the source control.
                          Required. Known values are: "Github" and "DevOps".
                        "repository": {
                            "branch": "str",  # Optional. Branch name of repository.
                            "deploymentLogsUrl": "str",  # Optional. Url to access
                              repository action logs.
                            "displayUrl": "str",  # Optional. Display url of repository.
                            "pathMapping": [
                                {
                                    "contentType": "str",  # Optional. Content
                                      type. Known values are: "AnalyticRule" and "Workbook".
                                    "path": "str"  # Optional. The path to the
                                      content.
                                }
                            ],
                            "url": "str"  # Optional. Url of repository.
                        },
                        "repositoryResourceInfo": {
                            "azureDevOpsResourceInfo": {
                                "pipelineId": "str",  # Optional. Id of the pipeline
                                  created for the source-control.
                                "serviceConnectionId": "str"  # Optional. Id of the
                                  service-connection created for the source-control.
                            },
                            "gitHubResourceInfo": {
                                "appInstallationId": "str"  # Optional. GitHub
                                  application installation id.
                            },
                            "webhook": {
                                "rotateWebhookSecret": bool,  # Optional. A flag to
                                  instruct the backend service to rotate webhook secret.
                                "webhookId": "str",  # Optional. Unique identifier
                                  for the webhook.
                                "webhookSecretUpdateTime": "str",  # Optional. Time
                                  when the webhook secret was updated.
                                "webhookUrl": "str"  # Optional. URL that gets
                                  invoked by the webhook.
                            }
                        },
                        "version": "str"  # Optional. The version number associated with the
                          source control. Known values are: "V1" and "V2".
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(source_control, (IO, bytes)):
            _content = source_control
        else:
            _json = source_control

        request = build_source_controls_create_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            source_control_id=source_control_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class ThreatIntelligenceIndicatorOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`threat_intelligence_indicator` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @overload
    async def create_indicator(
        self,
        resource_group_name: str,
        workspace_name: str,
        threat_intelligence_properties: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create a new threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param threat_intelligence_properties: Properties of threat intelligence indicators to create
         and update. Required.
        :type threat_intelligence_properties: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                threat_intelligence_properties = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == threat_intelligence_information
        """

    @overload
    async def create_indicator(
        self,
        resource_group_name: str,
        workspace_name: str,
        threat_intelligence_properties: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create a new threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param threat_intelligence_properties: Properties of threat intelligence indicators to create
         and update. Required.
        :type threat_intelligence_properties: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == threat_intelligence_information
        """


    @distributed_trace_async
    async def create_indicator(
        self,
        resource_group_name: str,
        workspace_name: str,
        threat_intelligence_properties: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Create a new threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param threat_intelligence_properties: Properties of threat intelligence indicators to create
         and update. Is either a model type or a IO type. Required.
        :type threat_intelligence_properties: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == threat_intelligence_information
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(threat_intelligence_properties, (IO, bytes)):
            _content = threat_intelligence_properties
        else:
            _json = threat_intelligence_properties

        request = build_threat_intelligence_indicator_create_indicator_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        **kwargs: Any
    ) -> JSON:
        """View a threat intelligence indicator by name.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == threat_intelligence_information
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_threat_intelligence_indicator_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            name=name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_properties: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Update a threat Intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_properties: Properties of threat intelligence indicators to create
         and update. Required.
        :type threat_intelligence_properties: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                threat_intelligence_properties = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == threat_intelligence_information
        """

    @overload
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_properties: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Update a threat Intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_properties: Properties of threat intelligence indicators to create
         and update. Required.
        :type threat_intelligence_properties: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == threat_intelligence_information
        """


    @distributed_trace_async
    async def create(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_properties: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Update a threat Intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_properties: Properties of threat intelligence indicators to create
         and update. Is either a model type or a IO type. Required.
        :type threat_intelligence_properties: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == threat_intelligence_information
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(threat_intelligence_properties, (IO, bytes)):
            _content = threat_intelligence_properties
        else:
            _json = threat_intelligence_properties

        request = build_threat_intelligence_indicator_create_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            name=name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        **kwargs: Any
    ) -> None:
        """Delete a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_threat_intelligence_indicator_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            name=name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @distributed_trace
    def query_indicators(
        self,
        resource_group_name: str,
        workspace_name: str,
        threat_intelligence_filtering_criteria: Union[JSON, IO],
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Query threat intelligence indicators as per filtering criteria.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param threat_intelligence_filtering_criteria: Filtering criteria for querying threat
         intelligence indicators. Is either a model type or a IO type. Required.
        :type threat_intelligence_filtering_criteria: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == threat_intelligence_information
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                content_type = content_type or "application/json"
                _json = None
                _content = None
                if isinstance(threat_intelligence_filtering_criteria, (IO, bytes)):
                    _content = threat_intelligence_filtering_criteria
                else:
                    _json = threat_intelligence_filtering_criteria
                
                request = build_threat_intelligence_indicator_query_indicators_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    content_type=content_type,
                    api_version=self._config.api_version,
                    json=_json,
                    content=_content,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @overload
    async def append_tags(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_append_tags: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> None:
        """Append tags to a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_append_tags: The threat intelligence append tags request body.
         Required.
        :type threat_intelligence_append_tags: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                threat_intelligence_append_tags = {
                    "threatIntelligenceTags": [
                        "str"  # Optional. List of tags to be appended.
                    ]
                }
        """

    @overload
    async def append_tags(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_append_tags: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> None:
        """Append tags to a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_append_tags: The threat intelligence append tags request body.
         Required.
        :type threat_intelligence_append_tags: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """


    @distributed_trace_async
    async def append_tags(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_append_tags: Union[JSON, IO],
        **kwargs: Any
    ) -> None:
        """Append tags to a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_append_tags: The threat intelligence append tags request body. Is
         either a model type or a IO type. Required.
        :type threat_intelligence_append_tags: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(threat_intelligence_append_tags, (IO, bytes)):
            _content = threat_intelligence_append_tags
        else:
            _json = threat_intelligence_append_tags

        request = build_threat_intelligence_indicator_append_tags_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            name=name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def replace_tags(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_replace_tags: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Replace tags added to a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_replace_tags: Tags in the threat intelligence indicator to be
         replaced. Required.
        :type threat_intelligence_replace_tags: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                threat_intelligence_replace_tags = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == threat_intelligence_information
        """

    @overload
    async def replace_tags(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_replace_tags: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Replace tags added to a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_replace_tags: Tags in the threat intelligence indicator to be
         replaced. Required.
        :type threat_intelligence_replace_tags: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == threat_intelligence_information
        """


    @distributed_trace_async
    async def replace_tags(
        self,
        resource_group_name: str,
        workspace_name: str,
        name: str,
        threat_intelligence_replace_tags: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Replace tags added to a threat intelligence indicator.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param name: Threat intelligence indicator name field. Required.
        :type name: str
        :param threat_intelligence_replace_tags: Tags in the threat intelligence indicator to be
         replaced. Is either a model type or a IO type. Required.
        :type threat_intelligence_replace_tags: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "indicator":
                threat_intelligence_information = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "indicator",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "additionalData": {
                            "str": {}  # Optional. A bag of custom fields that should be
                              part of the entity and will be presented to the user.
                        },
                        "confidence": 0,  # Optional. Confidence of threat intelligence
                          entity.
                        "created": "str",  # Optional. Created by.
                        "createdByRef": "str",  # Optional. Created by reference of threat
                          intelligence entity.
                        "defanged": bool,  # Optional. Is threat intelligence entity
                          defanged.
                        "description": "str",  # Optional. Description of a threat
                          intelligence entity.
                        "displayName": "str",  # Optional. Display name of a threat
                          intelligence entity.
                        "extensions": {
                            "str": {}  # Optional. Extensions map.
                        },
                        "externalId": "str",  # Optional. External ID of threat intelligence
                          entity.
                        "externalLastUpdatedTimeUtc": "str",  # Optional. External last
                          updated time in UTC.
                        "externalReferences": [
                            {
                                "description": "str",  # Optional. External reference
                                  description.
                                "externalId": "str",  # Optional. External reference
                                  ID.
                                "hashes": {
                                    "str": "str"  # Optional. External reference
                                      hashes.
                                },
                                "sourceName": "str",  # Optional. External reference
                                  source name.
                                "url": "str"  # Optional. External reference URL.
                            }
                        ],
                        "friendlyName": "str",  # Optional. The graph item display name which
                          is a short humanly readable description of the graph item instance. This
                          property is optional and might be system generated.
                        "granularMarkings": [
                            {
                                "language": "str",  # Optional. Language granular
                                  marking model.
                                "markingRef": 0,  # Optional. marking reference
                                  granular marking model.
                                "selectors": [
                                    "str"  # Optional. granular marking model
                                      selectors.
                                ]
                            }
                        ],
                        "indicatorTypes": [
                            "str"  # Optional. Indicator types of threat intelligence
                              entities.
                        ],
                        "killChainPhases": [
                            {
                                "killChainName": "str",  # Optional. Kill chainName
                                  name.
                                "phaseName": "str"  # Optional. Phase name.
                            }
                        ],
                        "labels": [
                            "str"  # Optional. Labels  of threat intelligence entity.
                        ],
                        "language": "str",  # Optional. Language of threat intelligence
                          entity.
                        "lastUpdatedTimeUtc": "str",  # Optional. Last updated time in UTC.
                        "modified": "str",  # Optional. Modified by.
                        "objectMarkingRefs": [
                            "str"  # Optional. Threat intelligence entity object marking
                              references.
                        ],
                        "parsedPattern": [
                            {
                                "patternTypeKey": "str",  # Optional. Pattern type
                                  key.
                                "patternTypeValues": [
                                    {
                                        "value": "str",  # Optional. Value of
                                          parsed pattern.
                                        "valueType": "str"  # Optional. Type
                                          of the value.
                                    }
                                ]
                            }
                        ],
                        "pattern": "str",  # Optional. Pattern of a threat intelligence
                          entity.
                        "patternType": "str",  # Optional. Pattern type of a threat
                          intelligence entity.
                        "patternVersion": "str",  # Optional. Pattern version of a threat
                          intelligence entity.
                        "revoked": bool,  # Optional. Is threat intelligence entity revoked.
                        "source": "str",  # Optional. Source of a threat intelligence entity.
                        "threatIntelligenceTags": [
                            "str"  # Optional. List of tags.
                        ],
                        "threatTypes": [
                            "str"  # Optional. Threat types.
                        ],
                        "validFrom": "str",  # Optional. Valid from.
                        "validUntil": "str"  # Optional. Valid until.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == threat_intelligence_information
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(threat_intelligence_replace_tags, (IO, bytes)):
            _content = threat_intelligence_replace_tags
        else:
            _json = threat_intelligence_replace_tags

        request = build_threat_intelligence_indicator_replace_tags_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            name=name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class ThreatIntelligenceIndicatorsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`threat_intelligence_indicators` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        *,
        filter: Optional[str] = None,
        orderby: Optional[str] = None,
        top: Optional[int] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Get all threat intelligence indicators.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :keyword filter: Filters the results, based on a Boolean condition. Optional. Default value is
         None.
        :paramtype filter: str
        :keyword orderby: Sorts the results. Optional. Default value is None.
        :paramtype orderby: str
        :keyword top: Returns only the first n results. Optional. Default value is None.
        :paramtype top: int
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == threat_intelligence_information
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_threat_intelligence_indicators_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    filter=filter,
                    orderby=orderby,
                    top=top,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )

class ThreatIntelligenceIndicatorMetricsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`threat_intelligence_indicator_metrics` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace_async
    async def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> JSON:
        """Get threat intelligence indicators metrics (Indicators counts by Type, Threat Type, Source).

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "value": [
                        {
                            "properties": {
                                "lastUpdatedTimeUtc": "str",  # Optional. Last
                                  updated indicator metric.
                                "patternTypeMetrics": [
                                    {
                                        "metricName": "str",  # Optional.
                                          Metric name.
                                        "metricValue": 0  # Optional. Metric
                                          value.
                                    }
                                ],
                                "sourceMetrics": [
                                    {
                                        "metricName": "str",  # Optional.
                                          Metric name.
                                        "metricValue": 0  # Optional. Metric
                                          value.
                                    }
                                ],
                                "threatTypeMetrics": [
                                    {
                                        "metricName": "str",  # Optional.
                                          Metric name.
                                        "metricValue": 0  # Optional. Metric
                                          value.
                                    }
                                ]
                            }
                        }
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_threat_intelligence_indicator_metrics_list_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class WatchlistsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`watchlists` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        *,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all watchlists, without watchlist items.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentType": "str",  # Optional. The content type of the raw
                          content. Example : text/csv or text/tsv.
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "defaultDuration": "1 day, 0:00:00",  # Optional. The default
                          duration of a watchlist (in ISO 8601 duration format).
                        "description": "str",  # Optional. A description of the watchlist.
                        "displayName": "str",  # The display name of the watchlist. Required.
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist is deleted or not.
                        "itemsSearchKey": "str",  # The search key is used to optimize query
                          performance when using watchlists for joins with other data. For example,
                          enable a column with IP addresses to be the designated SearchKey field, then
                          use this field as the key field when joining to other event data by IP
                          address. Required.
                        "labels": [
                            "str"  # Optional. List of labels relevant to this watchlist.
                        ],
                        "numberOfLinesToSkip": 0,  # Optional. The number of lines in a
                          csv/tsv content to skip before the header.
                        "provider": "str",  # The provider of the watchlist. Required.
                        "rawContent": "str",  # Optional. The raw content that represents to
                          watchlist items to create. In case of csv/tsv content type, it's the content
                          of the file that will parsed by the endpoint.
                        "source": "str",  # Optional. The filename of the watchlist, called
                          'source'.
                        "sourceType": "str",  # Optional. The sourceType of the watchlist.
                          Known values are: "Local file" and "Remote storage".
                        "tenantId": "str",  # Optional. The tenantId where the watchlist
                          belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "uploadStatus": "str",  # Optional. The status of the Watchlist
                          upload : New, InProgress or Complete. Pls note : When a Watchlist upload
                          status is equal to InProgress, the Watchlist cannot be deleted.
                        "watchlistAlias": "str",  # Optional. The alias of the watchlist.
                        "watchlistId": "str",  # Optional. The id (a Guid) of the watchlist.
                        "watchlistType": "str"  # Optional. The type of the watchlist.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_watchlists_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a watchlist, without its watchlist items.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentType": "str",  # Optional. The content type of the raw
                          content. Example : text/csv or text/tsv.
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "defaultDuration": "1 day, 0:00:00",  # Optional. The default
                          duration of a watchlist (in ISO 8601 duration format).
                        "description": "str",  # Optional. A description of the watchlist.
                        "displayName": "str",  # The display name of the watchlist. Required.
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist is deleted or not.
                        "itemsSearchKey": "str",  # The search key is used to optimize query
                          performance when using watchlists for joins with other data. For example,
                          enable a column with IP addresses to be the designated SearchKey field, then
                          use this field as the key field when joining to other event data by IP
                          address. Required.
                        "labels": [
                            "str"  # Optional. List of labels relevant to this watchlist.
                        ],
                        "numberOfLinesToSkip": 0,  # Optional. The number of lines in a
                          csv/tsv content to skip before the header.
                        "provider": "str",  # The provider of the watchlist. Required.
                        "rawContent": "str",  # Optional. The raw content that represents to
                          watchlist items to create. In case of csv/tsv content type, it's the content
                          of the file that will parsed by the endpoint.
                        "source": "str",  # Optional. The filename of the watchlist, called
                          'source'.
                        "sourceType": "str",  # Optional. The sourceType of the watchlist.
                          Known values are: "Local file" and "Remote storage".
                        "tenantId": "str",  # Optional. The tenantId where the watchlist
                          belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "uploadStatus": "str",  # Optional. The status of the Watchlist
                          upload : New, InProgress or Complete. Pls note : When a Watchlist upload
                          status is equal to InProgress, the Watchlist cannot be deleted.
                        "watchlistAlias": "str",  # Optional. The alias of the watchlist.
                        "watchlistId": "str",  # Optional. The id (a Guid) of the watchlist.
                        "watchlistType": "str"  # Optional. The type of the watchlist.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_watchlists_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            watchlist_alias=watchlist_alias,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        **kwargs: Any
    ) -> None:
        """Delete a watchlist.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_watchlists_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            watchlist_alias=watchlist_alias,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        response_headers = {}
        if response.status_code == 200:
            response_headers['Azure-AsyncOperation']=self._deserialize('str', response.headers.get('Azure-AsyncOperation'))
            

        if cls:
            return cls(pipeline_response, None, response_headers)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create or update a Watchlist and its Watchlist Items (bulk creation, e.g. through text/csv
        content type). To create a Watchlist and its Items, we should call this endpoint with either
        rawContent or a valid SAR URI and contentType properties. The rawContent is mainly used for
        small watchlist (content size below 3.8 MB). The SAS URI enables the creation of large
        watchlist, where the content size can go up to 500 MB. The status of processing such large file
        can be polled through the URL returned in Azure-AsyncOperation header.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist: The watchlist. Required.
        :type watchlist: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                watchlist = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentType": "str",  # Optional. The content type of the raw
                          content. Example : text/csv or text/tsv.
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "defaultDuration": "1 day, 0:00:00",  # Optional. The default
                          duration of a watchlist (in ISO 8601 duration format).
                        "description": "str",  # Optional. A description of the watchlist.
                        "displayName": "str",  # The display name of the watchlist. Required.
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist is deleted or not.
                        "itemsSearchKey": "str",  # The search key is used to optimize query
                          performance when using watchlists for joins with other data. For example,
                          enable a column with IP addresses to be the designated SearchKey field, then
                          use this field as the key field when joining to other event data by IP
                          address. Required.
                        "labels": [
                            "str"  # Optional. List of labels relevant to this watchlist.
                        ],
                        "numberOfLinesToSkip": 0,  # Optional. The number of lines in a
                          csv/tsv content to skip before the header.
                        "provider": "str",  # The provider of the watchlist. Required.
                        "rawContent": "str",  # Optional. The raw content that represents to
                          watchlist items to create. In case of csv/tsv content type, it's the content
                          of the file that will parsed by the endpoint.
                        "source": "str",  # Optional. The filename of the watchlist, called
                          'source'.
                        "sourceType": "str",  # Optional. The sourceType of the watchlist.
                          Known values are: "Local file" and "Remote storage".
                        "tenantId": "str",  # Optional. The tenantId where the watchlist
                          belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "uploadStatus": "str",  # Optional. The status of the Watchlist
                          upload : New, InProgress or Complete. Pls note : When a Watchlist upload
                          status is equal to InProgress, the Watchlist cannot be deleted.
                        "watchlistAlias": "str",  # Optional. The alias of the watchlist.
                        "watchlistId": "str",  # Optional. The id (a Guid) of the watchlist.
                        "watchlistType": "str"  # Optional. The type of the watchlist.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentType": "str",  # Optional. The content type of the raw
                          content. Example : text/csv or text/tsv.
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "defaultDuration": "1 day, 0:00:00",  # Optional. The default
                          duration of a watchlist (in ISO 8601 duration format).
                        "description": "str",  # Optional. A description of the watchlist.
                        "displayName": "str",  # The display name of the watchlist. Required.
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist is deleted or not.
                        "itemsSearchKey": "str",  # The search key is used to optimize query
                          performance when using watchlists for joins with other data. For example,
                          enable a column with IP addresses to be the designated SearchKey field, then
                          use this field as the key field when joining to other event data by IP
                          address. Required.
                        "labels": [
                            "str"  # Optional. List of labels relevant to this watchlist.
                        ],
                        "numberOfLinesToSkip": 0,  # Optional. The number of lines in a
                          csv/tsv content to skip before the header.
                        "provider": "str",  # The provider of the watchlist. Required.
                        "rawContent": "str",  # Optional. The raw content that represents to
                          watchlist items to create. In case of csv/tsv content type, it's the content
                          of the file that will parsed by the endpoint.
                        "source": "str",  # Optional. The filename of the watchlist, called
                          'source'.
                        "sourceType": "str",  # Optional. The sourceType of the watchlist.
                          Known values are: "Local file" and "Remote storage".
                        "tenantId": "str",  # Optional. The tenantId where the watchlist
                          belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "uploadStatus": "str",  # Optional. The status of the Watchlist
                          upload : New, InProgress or Complete. Pls note : When a Watchlist upload
                          status is equal to InProgress, the Watchlist cannot be deleted.
                        "watchlistAlias": "str",  # Optional. The alias of the watchlist.
                        "watchlistId": "str",  # Optional. The id (a Guid) of the watchlist.
                        "watchlistType": "str"  # Optional. The type of the watchlist.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Create or update a Watchlist and its Watchlist Items (bulk creation, e.g. through text/csv
        content type). To create a Watchlist and its Items, we should call this endpoint with either
        rawContent or a valid SAR URI and contentType properties. The rawContent is mainly used for
        small watchlist (content size below 3.8 MB). The SAS URI enables the creation of large
        watchlist, where the content size can go up to 500 MB. The status of processing such large file
        can be polled through the URL returned in Azure-AsyncOperation header.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist: The watchlist. Required.
        :type watchlist: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentType": "str",  # Optional. The content type of the raw
                          content. Example : text/csv or text/tsv.
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "defaultDuration": "1 day, 0:00:00",  # Optional. The default
                          duration of a watchlist (in ISO 8601 duration format).
                        "description": "str",  # Optional. A description of the watchlist.
                        "displayName": "str",  # The display name of the watchlist. Required.
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist is deleted or not.
                        "itemsSearchKey": "str",  # The search key is used to optimize query
                          performance when using watchlists for joins with other data. For example,
                          enable a column with IP addresses to be the designated SearchKey field, then
                          use this field as the key field when joining to other event data by IP
                          address. Required.
                        "labels": [
                            "str"  # Optional. List of labels relevant to this watchlist.
                        ],
                        "numberOfLinesToSkip": 0,  # Optional. The number of lines in a
                          csv/tsv content to skip before the header.
                        "provider": "str",  # The provider of the watchlist. Required.
                        "rawContent": "str",  # Optional. The raw content that represents to
                          watchlist items to create. In case of csv/tsv content type, it's the content
                          of the file that will parsed by the endpoint.
                        "source": "str",  # Optional. The filename of the watchlist, called
                          'source'.
                        "sourceType": "str",  # Optional. The sourceType of the watchlist.
                          Known values are: "Local file" and "Remote storage".
                        "tenantId": "str",  # Optional. The tenantId where the watchlist
                          belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "uploadStatus": "str",  # Optional. The status of the Watchlist
                          upload : New, InProgress or Complete. Pls note : When a Watchlist upload
                          status is equal to InProgress, the Watchlist cannot be deleted.
                        "watchlistAlias": "str",  # Optional. The alias of the watchlist.
                        "watchlistId": "str",  # Optional. The id (a Guid) of the watchlist.
                        "watchlistType": "str"  # Optional. The type of the watchlist.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Create or update a Watchlist and its Watchlist Items (bulk creation, e.g. through text/csv
        content type). To create a Watchlist and its Items, we should call this endpoint with either
        rawContent or a valid SAR URI and contentType properties. The rawContent is mainly used for
        small watchlist (content size below 3.8 MB). The SAS URI enables the creation of large
        watchlist, where the content size can go up to 500 MB. The status of processing such large file
        can be polled through the URL returned in Azure-AsyncOperation header.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist: The watchlist. Is either a model type or a IO type. Required.
        :type watchlist: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "contentType": "str",  # Optional. The content type of the raw
                          content. Example : text/csv or text/tsv.
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "defaultDuration": "1 day, 0:00:00",  # Optional. The default
                          duration of a watchlist (in ISO 8601 duration format).
                        "description": "str",  # Optional. A description of the watchlist.
                        "displayName": "str",  # The display name of the watchlist. Required.
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist is deleted or not.
                        "itemsSearchKey": "str",  # The search key is used to optimize query
                          performance when using watchlists for joins with other data. For example,
                          enable a column with IP addresses to be the designated SearchKey field, then
                          use this field as the key field when joining to other event data by IP
                          address. Required.
                        "labels": [
                            "str"  # Optional. List of labels relevant to this watchlist.
                        ],
                        "numberOfLinesToSkip": 0,  # Optional. The number of lines in a
                          csv/tsv content to skip before the header.
                        "provider": "str",  # The provider of the watchlist. Required.
                        "rawContent": "str",  # Optional. The raw content that represents to
                          watchlist items to create. In case of csv/tsv content type, it's the content
                          of the file that will parsed by the endpoint.
                        "source": "str",  # Optional. The filename of the watchlist, called
                          'source'.
                        "sourceType": "str",  # Optional. The sourceType of the watchlist.
                          Known values are: "Local file" and "Remote storage".
                        "tenantId": "str",  # Optional. The tenantId where the watchlist
                          belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "uploadStatus": "str",  # Optional. The status of the Watchlist
                          upload : New, InProgress or Complete. Pls note : When a Watchlist upload
                          status is equal to InProgress, the Watchlist cannot be deleted.
                        "watchlistAlias": "str",  # Optional. The alias of the watchlist.
                        "watchlistId": "str",  # Optional. The id (a Guid) of the watchlist.
                        "watchlistType": "str"  # Optional. The type of the watchlist.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(watchlist, (IO, bytes)):
            _content = watchlist
        else:
            _json = watchlist

        request = build_watchlists_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            watchlist_alias=watchlist_alias,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        response_headers = {}
        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            response_headers['Azure-AsyncOperation']=self._deserialize('str', response.headers.get('Azure-AsyncOperation'))
            
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), response_headers)

        return cast(JSON, deserialized)


class WatchlistItemsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`watchlist_items` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        *,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all watchlist Items.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :keyword skip_token: Skiptoken is only used if a previous operation returned a partial result.
         If a previous response contains a nextLink element, the value of the nextLink element will
         include a skiptoken parameter that specifies a starting point to use for subsequent calls.
         Optional. Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          item was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "entityMapping": {
                            "str": {}  # Optional. key-value pairs for a watchlist item
                              entity mapping.
                        },
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist item is deleted or not.
                        "itemsKeyValue": {
                            "str": {}  # key-value pairs for a watchlist item. Required.
                        },
                        "tenantId": "str",  # Optional. The tenantId to which the watchlist
                          item belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist item was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "watchlistItemId": "str",  # Optional. The id (a Guid) of the
                          watchlist item.
                        "watchlistItemType": "str"  # Optional. The type of the watchlist
                          item.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_watchlist_items_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    watchlist_alias=watchlist_alias,
                    subscription_id=self._config.subscription_id,
                    skip_token=skip_token,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist_item_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a watchlist, without its watchlist items.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist_item_id: Watchlist Item Id (GUID). Required.
        :type watchlist_item_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          item was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "entityMapping": {
                            "str": {}  # Optional. key-value pairs for a watchlist item
                              entity mapping.
                        },
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist item is deleted or not.
                        "itemsKeyValue": {
                            "str": {}  # key-value pairs for a watchlist item. Required.
                        },
                        "tenantId": "str",  # Optional. The tenantId to which the watchlist
                          item belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist item was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "watchlistItemId": "str",  # Optional. The id (a Guid) of the
                          watchlist item.
                        "watchlistItemType": "str"  # Optional. The type of the watchlist
                          item.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_watchlist_items_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            watchlist_alias=watchlist_alias,
            watchlist_item_id=watchlist_item_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist_item_id: str,
        **kwargs: Any
    ) -> None:
        """Delete a watchlist item.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist_item_id: Watchlist Item Id (GUID). Required.
        :type watchlist_item_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_watchlist_items_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            watchlist_alias=watchlist_alias,
            watchlist_item_id=watchlist_item_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist_item_id: str,
        watchlist_item: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates a watchlist item.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist_item_id: Watchlist Item Id (GUID). Required.
        :type watchlist_item_id: str
        :param watchlist_item: The watchlist item. Required.
        :type watchlist_item: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                watchlist_item = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          item was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "entityMapping": {
                            "str": {}  # Optional. key-value pairs for a watchlist item
                              entity mapping.
                        },
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist item is deleted or not.
                        "itemsKeyValue": {
                            "str": {}  # key-value pairs for a watchlist item. Required.
                        },
                        "tenantId": "str",  # Optional. The tenantId to which the watchlist
                          item belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist item was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "watchlistItemId": "str",  # Optional. The id (a Guid) of the
                          watchlist item.
                        "watchlistItemType": "str"  # Optional. The type of the watchlist
                          item.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          item was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "entityMapping": {
                            "str": {}  # Optional. key-value pairs for a watchlist item
                              entity mapping.
                        },
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist item is deleted or not.
                        "itemsKeyValue": {
                            "str": {}  # key-value pairs for a watchlist item. Required.
                        },
                        "tenantId": "str",  # Optional. The tenantId to which the watchlist
                          item belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist item was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "watchlistItemId": "str",  # Optional. The id (a Guid) of the
                          watchlist item.
                        "watchlistItemType": "str"  # Optional. The type of the watchlist
                          item.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist_item_id: str,
        watchlist_item: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates a watchlist item.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist_item_id: Watchlist Item Id (GUID). Required.
        :type watchlist_item_id: str
        :param watchlist_item: The watchlist item. Required.
        :type watchlist_item: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          item was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "entityMapping": {
                            "str": {}  # Optional. key-value pairs for a watchlist item
                              entity mapping.
                        },
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist item is deleted or not.
                        "itemsKeyValue": {
                            "str": {}  # key-value pairs for a watchlist item. Required.
                        },
                        "tenantId": "str",  # Optional. The tenantId to which the watchlist
                          item belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist item was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "watchlistItemId": "str",  # Optional. The id (a Guid) of the
                          watchlist item.
                        "watchlistItemType": "str"  # Optional. The type of the watchlist
                          item.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        watchlist_alias: str,
        watchlist_item_id: str,
        watchlist_item: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates a watchlist item.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param watchlist_alias: Watchlist Alias. Required.
        :type watchlist_alias: str
        :param watchlist_item_id: Watchlist Item Id (GUID). Required.
        :type watchlist_item_id: str
        :param watchlist_item: The watchlist item. Is either a model type or a IO type. Required.
        :type watchlist_item: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200, 201
                response == {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "created": "2020-02-20 00:00:00",  # Optional. The time the watchlist
                          item was created.
                        "createdBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "entityMapping": {
                            "str": {}  # Optional. key-value pairs for a watchlist item
                              entity mapping.
                        },
                        "isDeleted": bool,  # Optional. A flag that indicates if the
                          watchlist item is deleted or not.
                        "itemsKeyValue": {
                            "str": {}  # key-value pairs for a watchlist item. Required.
                        },
                        "tenantId": "str",  # Optional. The tenantId to which the watchlist
                          item belongs to.
                        "updated": "2020-02-20 00:00:00",  # Optional. The last time the
                          watchlist item was updated.
                        "updatedBy": {
                            "email": "str",  # Optional. The email of the user.
                            "name": "str",  # Optional. The name of the user.
                            "objectId": "str"  # Optional. The object id of the user.
                        },
                        "watchlistItemId": "str",  # Optional. The id (a Guid) of the
                          watchlist item.
                        "watchlistItemType": "str"  # Optional. The type of the watchlist
                          item.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(watchlist_item, (IO, bytes)):
            _content = watchlist_item
        else:
            _json = watchlist_item

        request = build_watchlist_items_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            watchlist_alias=watchlist_alias,
            watchlist_item_id=watchlist_item_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class DataConnectorsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`data_connectors` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        resource_group_name: str,
        workspace_name: str,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Gets all data connectors.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == data_connector
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_data_connectors_list_request(
                    resource_group_name=resource_group_name,
                    workspace_name=workspace_name,
                    subscription_id=self._config.subscription_id,
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )


    @distributed_trace_async
    async def get(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200
                response == data_connector
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_data_connectors_get_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            data_connector_id=data_connector_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        data_connector: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :param data_connector: The data connector. Required.
        :type data_connector: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template you can fill out and use as your body input.
                data_connector = data_connector
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == data_connector
        """

    @overload
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        data_connector: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :param data_connector: The data connector. Required.
        :type data_connector: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == data_connector
        """


    @distributed_trace_async
    async def create_or_update(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        data_connector: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates the data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :param data_connector: The data connector. Is either a model type or a IO type. Required.
        :type data_connector: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }
                # The response is polymorphic. The following are possible polymorphic responses based
                  off discriminator "kind":

                # JSON input template for discriminator value "APIPolling":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "APIPolling",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "connectorUiConfig": {
                            "availability": {
                                "isPreview": bool,  # Optional. Set connector as
                                  preview.
                                "status": 1  # Optional. Default value is 1. The
                                  connector Availability Status.
                            },
                            "connectivityCriteria": [
                                {
                                    "type": "str",  # Optional. type of
                                      connectivity. "IsConnectedQuery"
                                    "value": [
                                        "str"  # Optional. Queries for
                                          checking connectivity.
                                    ]
                                }
                            ],
                            "customImage": "str",  # Optional. An optional custom image
                              to be used when displaying the connector within Azure Sentinel's
                              connector's gallery.
                            "dataTypes": [
                                {
                                    "lastDataReceivedQuery": "str",  # Optional.
                                      Query for indicate last data received.
                                    "name": "str"  # Optional. Name of the data
                                      type to show in the graph. can be use with
                                      {{graphQueriesTableName}} placeholder.
                                }
                            ],
                            "descriptionMarkdown": "str",  # Connector description.
                              Required.
                            "graphQueries": [
                                {
                                    "baseQuery": "str",  # Optional. The base
                                      query for the graph.
                                    "legend": "str",  # Optional. The legend for
                                      the graph.
                                    "metricName": "str"  # Optional. the metric
                                      that the query is checking.
                                }
                            ],
                            "graphQueriesTableName": "str",  # Name of the table the
                              connector will insert the data to. Required.
                            "instructionSteps": [
                                {
                                    "description": "str",  # Optional.
                                      Instruction step description.
                                    "instructions": [
                                        {
                                            "parameters": {},  #
                                              Optional. The parameters for the setting.
                                            "type": "str"  # The kind of
                                              the setting. Required. Known values are: "CopyableLabel",
                                              "InstructionStepsGroup", and "InfoMessage".
                                        }
                                    ],
                                    "title": "str"  # Optional. Instruction step
                                      title.
                                }
                            ],
                            "permissions": {
                                "customs": [
                                    {
                                        "description": "str",  # Optional.
                                          Customs permissions description.
                                        "name": "str"  # Optional. Customs
                                          permissions name.
                                    }
                                ],
                                "resourceProvider": [
                                    {
                                        "permissionsDisplayText": "str",  #
                                          Optional. Permission description text.
                                        "provider": "str",  # Optional.
                                          Provider name. Known values are:
                                          "Microsoft.OperationalInsights/solutions",
                                          "Microsoft.OperationalInsights/workspaces",
                                          "Microsoft.OperationalInsights/workspaces/datasources",
                                          "microsoft.aadiam/diagnosticSettings",
                                          "Microsoft.OperationalInsights/workspaces/sharedKeys", and
                                          "Microsoft.Authorization/policyAssignments".
                                        "providerDisplayName": "str",  #
                                          Optional. Permission provider display name.
                                        "requiredPermissions": {
                                            "action": bool,  # Optional.
                                              action permission.
                                            "delete": bool,  # Optional.
                                              delete permission.
                                            "read": bool,  # Optional.
                                              read permission.
                                            "write": bool  # Optional.
                                              write permission.
                                        },
                                        "scope": "str"  # Optional.
                                          Permission provider scope. Known values are: "ResourceGroup",
                                          "Subscription", and "Workspace".
                                    }
                                ]
                            },
                            "publisher": "str",  # Connector publisher name. Required.
                            "sampleQueries": [
                                {
                                    "description": "str",  # Optional. The sample
                                      query description.
                                    "query": "str"  # Optional. the sample query.
                                }
                            ],
                            "title": "str"  # Connector blade title. Required.
                        },
                        "pollingConfig": {
                            "auth": {
                                "apiKeyIdentifier": "str",  # Optional. A prefix send
                                  in the header before the actual token.
                                "apiKeyName": "str",  # Optional. The header name
                                  which the token is sent with.
                                "authType": "str",  # The authentication type.
                                  Required.
                                "authorizationEndpoint": "str",  # Optional. The
                                  endpoint used to authorize the user, used in Oauth 2.0 flow.
                                "authorizationEndpointQueryParameters": {},  #
                                  Optional. The query parameters used in authorization request, used in
                                  Oauth 2.0 flow.
                                "flowName": "str",  # Optional. Describes the flow
                                  name, for example 'AuthCode' for Oauth 2.0.
                                "isApiKeyInPostPayload": "str",  # Optional. Marks if
                                  the key should sent in header.
                                "isClientSecretInHeader": bool,  # Optional. Marks if
                                  we should send the client secret in header or payload, used in Oauth
                                  2.0 flow.
                                "redirectionEndpoint": "str",  # Optional. The
                                  redirect endpoint where we will get the authorization code, used in
                                  Oauth 2.0 flow.
                                "scope": "str",  # Optional. The OAuth token scope.
                                "tokenEndpoint": "str",  # Optional. The endpoint
                                  used to issue a token, used in Oauth 2.0 flow.
                                "tokenEndpointHeaders": {},  # Optional. The query
                                  headers used in token request, used in Oauth 2.0 flow.
                                "tokenEndpointQueryParameters": {}  # Optional. The
                                  query parameters used in token request, used in Oauth 2.0 flow.
                            },
                            "isActive": bool,  # Optional. The poller active status.
                            "paging": {
                                "nextPageParaName": "str",  # Optional. Defines the
                                  name of a next page attribute.
                                "nextPageTokenJsonPath": "str",  # Optional. Defines
                                  the path to a next page token JSON.
                                "pageCountAttributePath": "str",  # Optional. Defines
                                  the path to a page count attribute.
                                "pageSize": 0,  # Optional. Defines the paging size.
                                "pageSizeParaName": "str",  # Optional. Defines the
                                  name of the page size parameter.
                                "pageTimeStampAttributePath": "str",  # Optional.
                                  Defines the path to a paging time stamp attribute.
                                "pageTotalCountAttributePath": "str",  # Optional.
                                  Defines the path to a page total count attribute.
                                "pagingType": "str",  # Describes the type. could be
                                  'None', 'PageToken', 'PageCount', 'TimeStamp'. Required.
                                "searchTheLatestTimeStampFromEventsList": "str"  #
                                  Optional. Determines whether to search for the latest time stamp in
                                  the events list.
                            },
                            "request": {
                                "apiEndpoint": "str",  # Describe the endpoint we
                                  should pull the data from. Required.
                                "endTimeAttributeName": "str",  # Optional. This will
                                  be used the query events from the end of the time window.
                                "headers": {},  # Optional. Describe the headers sent
                                  in the poll request.
                                "httpMethod": "str",  # The http method type we will
                                  use in the poll request, GET or POST. Required.
                                "queryParameters": {},  # Optional. Describe the
                                  query parameters sent in the poll request.
                                "queryParametersTemplate": "str",  # Optional. For
                                  advanced scenarios for example user name/password embedded in nested
                                  JSON payload.
                                "queryTimeFormat": "str",  # The time format will be
                                  used the query events in a specific window. Required.
                                "queryWindowInMin": 0,  # The window interval we will
                                  use the pull the data. Required.
                                "rateLimitQps": 0,  # Optional. Defines the rate
                                  limit QPS.
                                "retryCount": 0,  # Optional. Describe the amount of
                                  time we should try and poll the data in case of failure.
                                "startTimeAttributeName": "str",  # Optional. This
                                  will be used the query events from a start of the time window.
                                "timeoutInSeconds": 0  # Optional. The number of
                                  seconds we will consider as a request timeout.
                            },
                            "response": {
                                "eventsJsonPaths": [
                                    "str"  # Describes the path we should extract
                                      the data in the response. Required.
                                ],
                                "isGzipCompressed": bool,  # Optional. Describes if
                                  the data in the response is Gzip.
                                "successStatusJsonPath": "str",  # Optional.
                                  Describes the path we should extract the status code in the response.
                                "successStatusValue": "str"  # Optional. Describes
                                  the path we should extract the status value in the response.
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesCloudTrail",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "awsRoleArn": "str",  # Optional. The Aws Role Arn (with
                          CloudTrailReadOnly policy) that is used to access the Aws account.
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        }
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AmazonWebServicesS3",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "logs": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "destinationTable": "str",  # The logs destination table name in
                          LogAnalytics. Required.
                        "roleArn": "str",  # The Aws Role Arn that is used to access the Aws
                          account. Required.
                        "sqsUrls": [
                            "str"  # The AWS sqs urls for the connector. Required.
                        ]
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureActiveDirectory",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connector = {
                    "etag": "str",  # Optional. Etag of the azure resource.
                    "id": "str",  # Optional. Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    "kind": "AzureAdvancedThreatProtection",
                    "name": "str",  # Optional. The name of the resource.
                    "properties": {
                        "dataTypes": {
                            "alerts": {
                                "state": "str"  # Describe whether this data type
                                  connection is enabled or not. Required. Known values are: "Enabled"
                                  and "Disabled".
                            }
                        },
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of resource last modification (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "type": "str"  # Optional. The type of the resource. E.g.
                      "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
                }

                # response body for status code(s): 200, 201
                response == data_connector
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(data_connector, (IO, bytes)):
            _content = data_connector
        else:
            _json = data_connector

        request = build_data_connectors_create_or_update_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            data_connector_id=data_connector_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.status_code == 200:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if response.status_code == 201:
            if response.content:
                deserialized = response.json()
            else:
                deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace_async
    async def delete(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        **kwargs: Any
    ) -> None:
        """Delete the data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_data_connectors_delete_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            data_connector_id=data_connector_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @overload
    async def connect(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        connect_body: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> None:
        """Connects a data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :param connect_body: The data connector. Required.
        :type connect_body: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                connect_body = {
                    "apiKey": "str",  # Optional. The API key of the audit server.
                    "authorizationCode": "str",  # Optional. The authorization code used in OAuth
                      2.0 code flow to issue a token.
                    "clientId": "str",  # Optional. The client id of the OAuth 2.0 application.
                    "clientSecret": "str",  # Optional. The client secret of the OAuth 2.0
                      application.
                    "dataCollectionEndpoint": "str",  # Optional. Used in v2 logs connector.
                      Represents the data collection ingestion endpoint in log analytics.
                    "dataCollectionRuleImmutableId": "str",  # Optional. Used in v2 logs
                      connector. The data collection rule immutable id, the rule defines the
                      transformation and data destination.
                    "kind": "str",  # Optional. The authentication kind used to poll the data.
                      Known values are: "Basic", "OAuth2", and "APIKey".
                    "outputStream": "str",  # Optional. Used in v2 logs connector. The stream we
                      are sending the data to, this is the name of the streamDeclarations defined in
                      the DCR.
                    "password": "str",  # Optional. The user password in the audit log server.
                    "requestConfigUserInputValues": [
                        {}  # Optional.
                    ],
                    "userName": "str"  # Optional. The user name in the audit log server.
                }
        """

    @overload
    async def connect(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        connect_body: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> None:
        """Connects a data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :param connect_body: The data connector. Required.
        :type connect_body: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """


    @distributed_trace_async
    async def connect(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        connect_body: Union[JSON, IO],
        **kwargs: Any
    ) -> None:
        """Connects a data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :param connect_body: The data connector. Is either a model type or a IO type. Required.
        :type connect_body: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(connect_body, (IO, bytes)):
            _content = connect_body
        else:
            _json = connect_body

        request = build_data_connectors_connect_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            data_connector_id=data_connector_id,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})



    @distributed_trace_async
    async def disconnect(  # pylint: disable=inconsistent-return-statements
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connector_id: str,
        **kwargs: Any
    ) -> None:
        """Disconnect a data connector.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connector_id: Connector ID. Required.
        :type data_connector_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_data_connectors_disconnect_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            data_connector_id=data_connector_id,
            subscription_id=self._config.subscription_id,
            api_version=self._config.api_version,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})


class DataConnectorsCheckRequirementsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`data_connectors_check_requirements` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @overload
    async def post(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connectors_check_requirements: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Get requirements state for a data connector type.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connectors_check_requirements: The parameters for requirements check message.
         Required.
        :type data_connectors_check_requirements: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # The input is polymorphic. The following are possible polymorphic inputs based off
                  discriminator "kind":

                # JSON input template for discriminator value "AmazonWebServicesCloudTrail":
                data_connectors_check_requirements = {
                    "kind": "AmazonWebServicesCloudTrail"
                }

                # JSON input template for discriminator value "AmazonWebServicesS3":
                data_connectors_check_requirements = {
                    "kind": "AmazonWebServicesS3"
                }

                # JSON input template for discriminator value "AzureActiveDirectory":
                data_connectors_check_requirements = {
                    "kind": "AzureActiveDirectory",
                    "properties": {
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    }
                }

                # JSON input template for discriminator value "AzureAdvancedThreatProtection":
                data_connectors_check_requirements = {
                    "kind": "AzureAdvancedThreatProtection",
                    "properties": {
                        "tenantId": "str"  # The tenant id to connect to, and get the data
                          from. Required.
                    }
                }

                # JSON input template for discriminator value "AzureSecurityCenter":
                data_connectors_check_requirements = {
                    "kind": "AzureSecurityCenter",
                    "properties": {
                        "subscriptionId": "str"  # Optional. The subscription id to connect
                          to, and get the data from.
                    }
                }

                # JSON input template you can fill out and use as your body input.
                data_connectors_check_requirements = data_connectors_check_requirements

                # response body for status code(s): 200
                response == {
                    "authorizationState": "str",  # Optional. Authorization state for this
                      connector. Known values are: "Valid" and "Invalid".
                    "licenseState": "str"  # Optional. License state for this connector. Known
                      values are: "Valid", "Invalid", and "Unknown".
                }
        """

    @overload
    async def post(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connectors_check_requirements: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Get requirements state for a data connector type.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connectors_check_requirements: The parameters for requirements check message.
         Required.
        :type data_connectors_check_requirements: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "authorizationState": "str",  # Optional. Authorization state for this
                      connector. Known values are: "Valid" and "Invalid".
                    "licenseState": "str"  # Optional. License state for this connector. Known
                      values are: "Valid", "Invalid", and "Unknown".
                }
        """


    @distributed_trace_async
    async def post(
        self,
        resource_group_name: str,
        workspace_name: str,
        data_connectors_check_requirements: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Get requirements state for a data connector type.

        :param resource_group_name: The name of the resource group. The name is case insensitive.
         Required.
        :type resource_group_name: str
        :param workspace_name: The name of the workspace. Required.
        :type workspace_name: str
        :param data_connectors_check_requirements: The parameters for requirements check message. Is
         either a model type or a IO type. Required.
        :type data_connectors_check_requirements: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "authorizationState": "str",  # Optional. Authorization state for this
                      connector. Known values are: "Valid" and "Invalid".
                    "licenseState": "str"  # Optional. License state for this connector. Known
                      values are: "Valid", "Invalid", and "Unknown".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(data_connectors_check_requirements, (IO, bytes)):
            _content = data_connectors_check_requirements
        else:
            _json = data_connectors_check_requirements

        request = build_data_connectors_check_requirements_post_request(
            resource_group_name=resource_group_name,
            workspace_name=workspace_name,
            subscription_id=self._config.subscription_id,
            content_type=content_type,
            api_version=self._config.api_version,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        request.url = self._client.format_url(request.url)  # type: ignore

        pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response, error_format=ARMErrorFormat)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class Operations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.mgmt.securityinsight.aio.SecurityInsights`'s
        :attr:`operations` attribute.
    """

    def __init__(self, *args, **kwargs) -> None:
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        **kwargs: Any
    ) -> AsyncIterable[JSON]:
        """Lists all operations available Azure Security Insights Resource Provider.

        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.async_paging.AsyncItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "display": {
                        "description": "str",  # Optional. Description of the operation.
                        "operation": "str",  # Optional. Operation name.
                        "provider": "str",  # Optional. Provider name.
                        "resource": "str"  # Optional. Resource name.
                    },
                    "isDataAction": bool,  # Optional. Indicates whether the operation is a data
                      action.
                    "name": "str",  # Optional. Name of the operation.
                    "origin": "str"  # Optional. The origin of the operation.
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_operations_list_request(
                    api_version=self._config.api_version,
                    headers=_headers,
                    params=_params,
                )
                request.url = self._client.format_url(request.url)  # type: ignore

            else:
                # make call to next link with the client's api-version
                _parsed_next_link = urlparse(next_link)
                _next_request_params = case_insensitive_dict(parse_qs(_parsed_next_link.query))
                _next_request_params["api-version"] = self._config.api_version
                request = HttpRequest("GET", urljoin(next_link, _parsed_next_link.path), params=_next_request_params)
                request.url = self._client.format_url(request.url)  # type: ignore

            return request

        async def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, error_format=ARMErrorFormat)

            return pipeline_response


        return AsyncItemPaged(
            get_next, extract_data
        )

